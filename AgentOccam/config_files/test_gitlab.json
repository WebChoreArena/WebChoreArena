[
    {
        "task_id": 40000,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023/a11yproject/a11yproject.com",
        "start_url_lite": "http://172.16.2.4:8023/a11yproject/a11yproject.com/-/commits/main",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "What is the total number of commits made by {{user1}} and {{user2}} in the main (master) branch since {{month}}/{{year}}? Include merged pull requests as well and do not skip them.",
        "intent": "What is the total number of commits made by Eric Bailey and dependabot in the main (master) branch since 10/2022? Include merged pull requests as well and do not skip them.",
        "required_obs": "any",
        "type_main": "massive_memory",
        "type_sub": "calc",
        "description": "Go to the commit page and count the number of commits made by user1 and user2 during the specified period. Return the total number of commits made by both user1 and user2 combined.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023/a11yproject/a11yproject.com",
            "start_url_lite": "http://172.16.2.4:8023/a11yproject/a11yproject.com/-/commits/main",
            "user1": "Eric Bailey",
            "user2": "dependabot",
            "year": "2022",
            "month": "10",
            "contents": "41",
            "checkpoint1": "31",
            "checkpoint2": "10",
            "checkpoint_info": "checkpoint1: The number of commits made by {{user1}}. checkpoint2: The total number of commits made by {{user2}}.",
            "difficulty": "hard"
        },
        "eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "41"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": "41"
        }
    },
    {
        "task_id": 40001,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023/umano/AndroidSlidingUpPanel",
        "start_url_lite": "http://172.16.2.4:8023/umano/AndroidSlidingUpPanel/-/commits/master",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "What is the total number of commits made by {{user1}} and {{user2}} in the main (master) branch since {{month}}/{{year}}? Include merged pull requests as well and do not skip them.",
        "intent": "What is the total number of commits made by tokudu and Sergii Pechenizkyi in the main (master) branch since 11/2015? Include merged pull requests as well and do not skip them.",
        "required_obs": "any",
        "type_main": "massive_memory",
        "type_sub": "calc",
        "description": "Go to the commit page and count the number of commits made by user1 and user2 during the specified period. Return the total number of commits made by both user1 and user2 combined.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023/umano/AndroidSlidingUpPanel",
            "start_url_lite": "http://172.16.2.4:8023/umano/AndroidSlidingUpPanel/-/commits/master",
            "user1": "tokudu",
            "user2": "Sergii Pechenizkyi",
            "year": "2015",
            "month": "11",
            "contents": "37",
            "checkpoint1": "25",
            "checkpoint2": "12",
            "checkpoint_info": "checkpoint1: The number of commits made by {{user1}}. checkpoint2: The total number of commits made by {{user2}}.",
            "difficulty": "hard"
        },
        "eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "37"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": "37"
        }
    },
    {
        "task_id": 40002,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023/thoughtbot/administrate",
        "start_url_lite": "http://172.16.2.4:8023/thoughtbot/administrate/-/commits/main",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "What is the total number of commits made by {{user1}} and {{user2}} in the main (master) branch since {{month}}/{{year}}? Include merged pull requests as well and do not skip them.",
        "intent": "What is the total number of commits made by dependabot and jubilee2 in the main (master) branch since 7/2022? Include merged pull requests as well and do not skip them.",
        "required_obs": "any",
        "type_main": "massive_memory",
        "type_sub": "calc",
        "description": "Go to the commit page and count the number of commits made by user1 and user2 during the specified period. Return the total number of commits made by both user1 and user2 combined.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023/thoughtbot/administrate",
            "start_url_lite": "http://172.16.2.4:8023/thoughtbot/administrate/-/commits/main",
            "user1": "dependabot",
            "user2": "jubilee2",
            "year": "2022",
            "month": "7",
            "contents": "51",
            "checkpoint1": "42",
            "checkpoint2": "9",
            "checkpoint_info": "checkpoint1: The number of commits made by {{user1}}. checkpoint2: The total number of commits made by {{user2}}.",
            "difficulty": "hard"
        },
        "eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "51"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": "51"
        }
    },
    {
        "task_id": 40003,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023/PyAV-Org/PyAV",
        "start_url_lite": "http://172.16.2.4:8023/PyAV-Org/PyAV/-/commits/main",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "What is the total number of commits made by {{user1}} and {{user2}} in the main (master) branch since {{month}}/{{year}}? Include merged pull requests as well and do not skip them.",
        "intent": "What is the total number of commits made by Jeremy Lainé and Philip de Nier in the main (master) branch since 1/2021? Include merged pull requests as well and do not skip them.",
        "required_obs": "any",
        "type_main": "massive_memory",
        "type_sub": "calc",
        "description": "Go to the commit page and count the number of commits made by user1 and user2 during the specified period. Return the total number of commits made by both user1 and user2 combined.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023/PyAV-Org/PyAV",
            "start_url_lite": "http://172.16.2.4:8023/PyAV-Org/PyAV/-/commits/main",
            "user1": "Jeremy Lainé",
            "user2": "Philip de Nier",
            "year": "2021",
            "month": "1",
            "contents": "101",
            "checkpoint1": "88",
            "checkpoint2": "13",
            "checkpoint_info": "checkpoint1: The number of commits made by {{user1}}. checkpoint2: The total number of commits made by {{user2}}.",
            "difficulty": "hard"
        },
        "eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "101"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": "101"
        }
    },
    {
        "task_id": 40004,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023/vinta/awesome-python",
        "start_url_lite": "http://172.16.2.4:8023/vinta/awesome-python/-/commits/master",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "What is the total number of commits made by {{user1}} and {{user2}} in the main (master) branch since {{month}}/{{year}}? Include merged pull requests as well and do not skip them.",
        "intent": "What is the total number of commits made by Vinta Chen and Iheb Haboubi in the main (master) branch since 8/2020? Include merged pull requests as well and do not skip them.",
        "required_obs": "any",
        "type_main": "massive_memory",
        "type_sub": "calc",
        "description": "Go to the commit page and count the number of commits made by user1 and user2 during the specified period. Return the total number of commits made by both user1 and user2 combined.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023/vinta/awesome-python",
            "start_url_lite": "http://172.16.2.4:8023/vinta/awesome-python/-/commits/master",
            "user1": "Vinta Chen",
            "user2": "Iheb Haboubi",
            "year": "2020",
            "month": "8",
            "contents": "56",
            "checkpoint1": "48",
            "checkpoint2": "8",
            "checkpoint_info": "checkpoint1: The number of commits made by {{user1}}. checkpoint2: The total number of commits made by {{user2}}.",
            "difficulty": "hard"
        },
        "eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "56"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": "56"
        }
    },
    {
        "task_id": 40010,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023/",
        "start_url_lite": "http://172.16.2.4:8023/dashboard/issues?scope=all&state=all&assignee_id=Any",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "How many issues in total have the {{tag1}} label or the {{tag2}} label? Include both Open and Closed issues (All). Consider all issues, not limited to yours. If an issue has both labels, count it only once.",
        "intent": "How many issues in total have the [Priority] Low label or the [Type] Enhancement label? Include both Open and Closed issues (All). Consider all issues, not limited to yours. If an issue has both labels, count it only once.",
        "required_obs": "any",
        "type_main": "others",
        "description": "First, go to the Issue page. Then, count the number of issues with the tag1 label from ALL. Next, count the number of issues with the tag2 label. Finally, count the number of issues that have both the tag1 and tag2 labels. The answer will be the sum of the number of issues with the tag1 label and the number of issues with the tag2 label, minus the number of issues that have both labels.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023/",
            "start_url_lite": "http://172.16.2.4:8023/dashboard/issues?scope=all&state=all&assignee_id=Any",
            "tag1": "[Priority] Low",
            "tag2": "[Type] Enhancement",
            "contents": "10",
            "checkpoint1": "7",
            "checkpoint2": "9",
            "checkpoint3": "6",
            "checkpoint_info": "checkpoint1: the number of issues with the {{tag1}} label, checkpoint2: the number of issues with the {{tag2}} label, checkpoint3: the number of issues with the {{tag1}} and {{tag2}} label",
            "difficulty": "medium"
        },
        "eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "10"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": "10"
        }
    },
    {
        "task_id": 40011,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023/",
        "start_url_lite": "http://172.16.2.4:8023/dashboard/issues?scope=all&state=all&assignee_id=Any",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "How many issues in total have the {{tag1}} label or the {{tag2}} label? Include both Open and Closed issues (All). Consider all issues, not limited to yours. If an issue has both labels, count it only once.",
        "intent": "How many issues in total have the accessibility label or the redesign label? Include both Open and Closed issues (All). Consider all issues, not limited to yours. If an issue has both labels, count it only once.",
        "required_obs": "any",
        "type_main": "others",
        "description": "First, go to the Issue page. Then, count the number of issues with the tag1 label from ALL. Next, count the number of issues with the tag2 label. Finally, count the number of issues that have both the tag1 and tag2 labels. The answer will be the sum of the number of issues with the tag1 label and the number of issues with the tag2 label, minus the number of issues that have both labels.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023/",
            "start_url_lite": "http://172.16.2.4:8023/dashboard/issues?scope=all&state=all&assignee_id=Any",
            "tag1": "accessibility",
            "tag2": "redesign",
            "contents": "278",
            "checkpoint1": "256",
            "checkpoint2": "24",
            "checkpoint3": "2",
            "checkpoint_info": "checkpoint1: the number of issues with the {{tag1}} label, checkpoint2: the number of issues with the {{tag2}} label, checkpoint3: the number of issues with the {{tag1}} and {{tag2}} label",
            "difficulty": "medium"
        },
        "eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "278"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": "278"
        }
    },
    {
        "task_id": 40012,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023/",
        "start_url_lite": "http://172.16.2.4:8023/dashboard/issues?scope=all&state=all&assignee_id=Any",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "How many issues in total have the {{tag1}} label or the {{tag2}} label? Include both Open and Closed issues (All). Consider all issues, not limited to yours. If an issue has both labels, count it only once.",
        "intent": "How many issues in total have the styling label or the claimed label? Include both Open and Closed issues (All). Consider all issues, not limited to yours. If an issue has both labels, count it only once.",
        "required_obs": "any",
        "type_main": "others",
        "description": "First, go to the Issue page. Then, count the number of issues with the tag1 label from ALL. Next, count the number of issues with the tag2 label. Finally, count the number of issues that have both the tag1 and tag2 labels. The answer will be the sum of the number of issues with the tag1 label and the number of issues with the tag2 label, minus the number of issues that have both labels.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023/",
            "start_url_lite": "http://172.16.2.4:8023/dashboard/issues?scope=all&state=all&assignee_id=Any",
            "tag1": "styling",
            "tag2": "claimed",
            "contents": "80",
            "checkpoint1": "26",
            "checkpoint2": "68",
            "checkpoint3": "14",
            "checkpoint_info": "checkpoint1: the number of issues with the {{tag1}} label, checkpoint2: the number of issues with the {{tag2}} label, checkpoint3: the number of issues with the {{tag1}} and {{tag2}} label",
            "difficulty": "medium"
        },
        "eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "80"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": "80"
        }
    },
    {
        "task_id": 40013,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023/",
        "start_url_lite": "http://172.16.2.4:8023/dashboard/issues?scope=all&state=all&assignee_id=Any",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "How many issues in total have the {{tag1}} label or the {{tag2}} label? Include both Open and Closed issues (All). Consider all issues, not limited to yours. If an issue has both labels, count it only once.",
        "intent": "How many issues in total have the good first issue label or the help wanted label? Include both Open and Closed issues (All). Consider all issues, not limited to yours. If an issue has both labels, count it only once.",
        "required_obs": "any",
        "type_main": "others",
        "description": "First, go to the Issue page. Then, count the number of issues with the tag1 label from ALL. Next, count the number of issues with the tag2 label. Finally, count the number of issues that have both the tag1 and tag2 labels. The answer will be the sum of the number of issues with the tag1 label and the number of issues with the tag2 label, minus the number of issues that have both labels.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023/",
            "start_url_lite": "http://172.16.2.4:8023/dashboard/issues?scope=all&state=all&assignee_id=Any",
            "tag1": "good first issue",
            "tag2": "help wanted",
            "contents": "1157 |OR| 1,157",
            "checkpoint1": "255",
            "checkpoint2": "1021",
            "checkpoint3": "119",
            "checkpoint_info": "checkpoint1: the number of issues with the {{tag1}} label, checkpoint2: the number of issues with the {{tag2}} label, checkpoint3: the number of issues with the {{tag1}} and {{tag2}} label",
            "difficulty": "medium"
        },
        "eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "1157 |OR| 1,157"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": "1157 |OR| 1,157"
        }
    },
    {
        "task_id": 40014,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023/",
        "start_url_lite": "http://172.16.2.4:8023/dashboard/issues?scope=all&state=all&assignee_id=Any",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "How many issues in total have the {{tag1}} label or the {{tag2}} label? Include both Open and Closed issues (All). Consider all issues, not limited to yours. If an issue has both labels, count it only once.",
        "intent": "How many issues in total have the feature label or the markup label? Include both Open and Closed issues (All). Consider all issues, not limited to yours. If an issue has both labels, count it only once.",
        "required_obs": "any",
        "type_main": "others",
        "description": "First, go to the Issue page. Then, count the number of issues with the tag1 label from ALL. Next, count the number of issues with the tag2 label. Finally, count the number of issues that have both the tag1 and tag2 labels. The answer will be the sum of the number of issues with the tag1 label and the number of issues with the tag2 label, minus the number of issues that have both labels.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023/",
            "start_url_lite": "http://172.16.2.4:8023/dashboard/issues?scope=all&state=all&assignee_id=Any",
            "tag1": "feature",
            "tag2": "markup",
            "contents": "2210 |OR| 2,210",
            "checkpoint1": "2194",
            "checkpoint2": "19",
            "checkpoint3": "3",
            "checkpoint_info": "checkpoint1: the number of issues with the {{tag1}} label, checkpoint2: the number of issues with the {{tag2}} label, checkpoint3: the number of issues with the {{tag1}} and {{tag2}} label",
            "difficulty": "medium"
        },
        "eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "2210 |OR| 2,210"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": "2210 |OR| 2,210"
        }
    },
    {
        "task_id": 40020,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023",
        "start_url_lite": "http://172.16.2.4:8023/users/abisubramanya27/projects",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "Among {{user}}'s personal repositories, which one has the longest commit history? Provide the repository name along with the history length in the format: {repository name}, {history length}",
        "intent": "Among Abishek S's personal repositories, which one has the longest commit history? Provide the repository name along with the history length in the format: {repository name}, {history length}",
        "required_obs": "any",
        "type_main": "long-term",
        "description": "First, go to the user's profile. Then, navigate to the user's personal projects. From there, check the commit history of each repository and find the repository with the longest commit history.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023",
            "start_url_lite": "http://172.16.2.4:8023/users/abisubramanya27/projects",
            "user": "Abishek S",
            "contents": "CS3500, 1419 |OR| CS3500, 1,419",
            "checkpoint1": "CS3500",
            "checkpoint2": "1,419",
            "checkpoint_info": "checkpoint1: the repository name, checkpoint2: the history length",
            "difficulty": "medium"
        },
        "eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "CS3500, 1419 |OR| CS3500, 1,419"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": "CS3500, 1419 |OR| CS3500, 1,419"
        }
    },
    {
        "task_id": 40021,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023",
        "start_url_lite": "http://172.16.2.4:8023/users/byteblaze/projects",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "Among {{user}}'s personal repositories, which one has the longest commit history? Provide the repository name along with the history length in the format: {repository name}, {history length}",
        "intent": "Among Byte Blaze's personal repositories, which one has the longest commit history? Provide the repository name along with the history length in the format: {repository name}, {history length}",
        "required_obs": "any",
        "type_main": "long-term",
        "description": "First, go to the user's profile. Then, navigate to the user's personal projects. From there, check the commit history of each repository and find the repository with the longest commit history.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023",
            "start_url_lite": "http://172.16.2.4:8023/users/byteblaze/projects",
            "user": "Byte Blaze",
            "contents": "ericwbailey.website, 1646 |OR| ericwbailey.website, 1,646",
            "checkpoint1": "ericwbailey.website",
            "checkpoint2": "1646",
            "checkpoint_info": "checkpoint1: the repository name, checkpoint2: the history length",
            "difficulty": "medium"
        },
        "eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "ericwbailey.website, 1646 |OR| ericwbailey.website, 1,646"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": "ericwbailey.website, 1646 |OR| ericwbailey.website, 1,646"
        }
    },
    {
        "task_id": 40022,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023",
        "start_url_lite": "http://172.16.2.4:8023/users/aklsh/projects",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "Among {{user}}'s personal repositories, which one has the longest commit history? Provide the repository name along with the history length in the format: {repository name}, {history length}",
        "intent": "Among Akilesh Kannan's personal repositories, which one has the longest commit history? Provide the repository name along with the history length in the format: {repository name}, {history length}",
        "required_obs": "any",
        "type_main": "long-term",
        "description": "First, go to the user's profile. Then, navigate to the user's personal projects. From there, check the commit history of each repository and find the repository with the longest commit history.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023",
            "start_url_lite": "http://172.16.2.4:8023/users/aklsh/projects",
            "user": "Akilesh Kannan",
            "contents": "nvidia-patch, 910",
            "checkpoint1": "nvidia-patch",
            "checkpoint2": "910",
            "checkpoint_info": "checkpoint1: the repository name, checkpoint2: the history length",
            "difficulty": "medium"
        },
        "eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "nvidia-patch, 910"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": "nvidia-patch, 910"
        }
    },
    {
        "task_id": 40023,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023",
        "start_url_lite": "http://172.16.2.4:8023/users/murale127/projects",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "Among {{user}}'s personal repositories, which one has the longest commit history? Provide the repository name along with the history length in the format: {repository name}, {history length}",
        "intent": "Among Muralekrishnan R's personal repositories, which one has the longest commit history? Provide the repository name along with the history length in the format: {repository name}, {history length}",
        "required_obs": "any",
        "type_main": "long-term",
        "description": "First, go to the user's profile. Then, navigate to the user's personal projects. From there, check the commit history of each repository and find the repository with the longest commit history.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023",
            "start_url_lite": "http://172.16.2.4:8023/users/murale127/projects",
            "user": "Muralekrishnan R",
            "contents": "HW-Spectrum-Analyzer, 37",
            "checkpoint1": "HW-Spectrum-Analyzer",
            "checkpoint2": "37",
            "checkpoint_info": "checkpoint1: the repository name, checkpoint2: the history length",
            "difficulty": "medium"
        },
        "eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "HW-Spectrum-Analyzer, 37"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": "HW-Spectrum-Analyzer, 37"
        }
    },
    {
        "task_id": 40030,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023",
        "start_url_lite": "http://172.16.2.4:8023/explore/projects/starred",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "What is the average number of stars for the top {{number}} most-starred projects across all repositories? Please explore all the projects in this website, not limited to your projects. Round to the nearest whole number and provide the answer as an integer.",
        "intent": "What is the average number of stars for the top 40 most-starred projects across all repositories? Please explore all the projects in this website, not limited to your projects. Round to the nearest whole number and provide the answer as an integer.",
        "required_obs": "any",
        "type_main": "calc",
        "type_sub": "massive_memory",
        "description": "From Explore, select Most stars and navigate through the pages. The star count of the projects displayed on each page will be shown. Calculate the total number of stars from the first page up to the specified count, divide this total by the number of projects, and output the result as an integer.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023",
            "start_url_lite": "http://172.16.2.4:8023/explore/projects/starred",
            "number": "40",
            "contents": "36",
            "checkpoint1": "831",
            "checkpoint2": "610",
            "checkpoint3": "1441",
            "checkpoint_info": "checkpoint1: sum of the stars in page1. checkpoint2: sum of the stars in page2. checkpoint3: sum of the stars in page1 and page2.",
            "difficulty": "medium"
        },
        "eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "36"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": "36"
        }
    },
    {
        "task_id": 40031,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023",
        "start_url_lite": "http://172.16.2.4:8023/explore/projects/starred",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "What is the average number of stars for the top {{number}} most-starred projects across all repositories? Please explore all the projects in this website, not limited to your projects. Round to the nearest whole number and provide the answer as an integer.",
        "intent": "What is the average number of stars for the top 60 most-starred projects across all repositories? Please explore all the projects in this website, not limited to your projects. Round to the nearest whole number and provide the answer as an integer.",
        "required_obs": "any",
        "type_main": "calc",
        "type_sub": "massive_memory",
        "description": "From Explore, select Most stars and navigate through the pages. The star count of the projects displayed on each page will be shown. Calculate the total number of stars from the first page up to the specified count, divide this total by the number of projects, and output the result as an integer.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023",
            "start_url_lite": "http://172.16.2.4:8023/explore/projects/starred",
            "number": "60",
            "contents": "32",
            "checkpoint1": "831",
            "checkpoint2": "610",
            "checkpoint3": "462",
            "checkpoint4": "1903",
            "checkpoint_info": "checkpoint1: sum of the stars in page1. checkpoint2: sum of the stars in page2. checkpoint3: sum of the stars in page1 and page2.",
            "difficulty": "hard"
        },
        "eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "32"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": "32"
        }
    },
    {
        "task_id": 40032,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023",
        "start_url_lite": "http://172.16.2.4:8023/explore/projects/starred",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "What is the average number of stars for the top {{number}} most-starred projects across all repositories? Please explore all the projects in this website, not limited to your projects. Round to the nearest whole number and provide the answer as an integer.",
        "intent": "What is the average number of stars for the top 80 most-starred projects across all repositories? Please explore all the projects in this website, not limited to your projects. Round to the nearest whole number and provide the answer as an integer.",
        "required_obs": "any",
        "type_main": "calc",
        "type_sub": "massive_memory",
        "description": "From Explore, select Most stars and navigate through the pages. The star count of the projects displayed on each page will be shown. Calculate the total number of stars from the first page up to the specified count, divide this total by the number of projects, and output the result as an integer.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023",
            "start_url_lite": "http://172.16.2.4:8023/explore/projects/starred",
            "number": "80",
            "contents": "27",
            "checkpoint1": "831",
            "checkpoint2": "610",
            "checkpoint3": "462",
            "checkpoint4": "226",
            "checkpoint5": "2129",
            "checkpoint_info": "checkpoint1: sum of the stars in page1. checkpoint2: sum of the stars in page2. checkpoint3: sum of the stars in page1 and page2.",
            "difficulty": "hard"
        },
        "eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "27"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": "27"
        }
    },
    {
        "task_id": 40033,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023",
        "start_url_lite": "http://172.16.2.4:8023/explore/projects/starred",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "What is the average number of stars for the top {{number}} most-starred projects across all repositories? Please explore all the projects in this website, not limited to your projects. Round to the nearest whole number and provide the answer as an integer.",
        "intent": "What is the average number of stars for the top 100 most-starred projects across all repositories? Please explore all the projects in this website, not limited to your projects. Round to the nearest whole number and provide the answer as an integer.",
        "required_obs": "any",
        "type_main": "calc",
        "type_sub": "massive_memory",
        "description": "From Explore, select Most stars and navigate through the pages. The star count of the projects displayed on each page will be shown. Calculate the total number of stars from the first page up to the specified count, divide this total by the number of projects, and output the result as an integer.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023",
            "start_url_lite": "http://172.16.2.4:8023/explore/projects/starred",
            "number": "100",
            "contents": "22",
            "checkpoint1": "831",
            "checkpoint2": "610",
            "checkpoint3": "462",
            "checkpoint4": "226",
            "checkpoint5": "80",
            "checkpoint6": "2209",
            "checkpoint_info": "checkpoint1: sum of the stars in page1. checkpoint2: sum of the stars in page2. checkpoint3: sum of the stars in page1 and page2.",
            "difficulty": "hard"
        },
        "eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "22"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": "22"
        }
    },
    {
        "task_id": 40034,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023",
        "start_url_lite": "http://172.16.2.4:8023/explore/projects/starred",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "What is the average number of stars for the top {{number}} most-starred projects across all repositories? Please explore all the projects in this website, not limited to your projects. Round to the nearest whole number and provide the answer as an integer.",
        "intent": "What is the average number of stars for the top 50 most-starred projects across all repositories? Please explore all the projects in this website, not limited to your projects. Round to the nearest whole number and provide the answer as an integer.",
        "required_obs": "any",
        "type_main": "calc",
        "type_sub": "massive_memory",
        "description": "From Explore, select Most stars and navigate through the pages. The star count of the projects displayed on each page will be shown. Calculate the total number of stars from the first page up to the specified count, divide this total by the number of projects, and output the result as an integer.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023",
            "start_url_lite": "http://172.16.2.4:8023/explore/projects/starred",
            "number": "50",
            "contents": "34",
            "checkpoint1": "831",
            "checkpoint2": "610",
            "checkpoint3": "255",
            "checkpoint4": "1696",
            "checkpoint_info": "checkpoint1: sum of the stars in page1. checkpoint2: sum of the stars in page2. checkpoint3: sum of the stars in page3. checkpoint4: sum of the stars in page1 and page2.",
            "difficulty": "medium"
        },
        "eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "34"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": "34"
        }
    },
    {
        "task_id": 40040,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023",
        "start_url_lite": "http://172.16.2.4:8023/explore/projects/starred",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "What is the average number of merged requests for the top {{number}} most-starred projects? Please explore all the projects in this website, not limited to your projects. Round to the nearest whole number and provide the answer as an integer.",
        "intent": "What is the average number of merged requests for the top 40 most-starred projects? Please explore all the projects in this website, not limited to your projects. Round to the nearest whole number and provide the answer as an integer.",
        "required_obs": "any",
        "type_main": "calc",
        "type_sub": "massive_memory",
        "description": "From Explore, select Most stars and navigate through the pages. The merged requests count of the projects displayed on each page will be shown. Calculate the total number of merged requests from the first page up to the specified count, divide this total by the number of projects, and output the result as an integer.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023",
            "start_url_lite": "http://172.16.2.4:8023/explore/projects/starred",
            "number": "40",
            "contents": "71",
            "checkpoint1": "1527",
            "checkpoint2": "1308",
            "checkpoint3": "2835",
            "checkpoint_info": "checkpoint1: sum of the merged requests in page1. checkpoint2: sum of the merged requests in page2. checkpoint3: sum of the merged requests in page1 and page2.",
            "difficulty": "hard"
        },
        "eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "71"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": "71"
        }
    },
    {
        "task_id": 40041,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023",
        "start_url_lite": "http://172.16.2.4:8023/explore/projects/starred",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "What is the average number of merged requests for the top {{number}} most-starred projects? Please explore all the projects in this website, not limited to your projects. Round to the nearest whole number and provide the answer as an integer.",
        "intent": "What is the average number of merged requests for the top 60 most-starred projects? Please explore all the projects in this website, not limited to your projects. Round to the nearest whole number and provide the answer as an integer.",
        "required_obs": "any",
        "type_main": "calc",
        "type_sub": "massive_memory",
        "description": "From Explore, select Most stars and navigate through the pages. The merged requests count of the projects displayed on each page will be shown. Calculate the total number of merged requests from the first page up to the specified count, divide this total by the number of projects, and output the result as an integer.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023",
            "start_url_lite": "http://172.16.2.4:8023/explore/projects/starred",
            "number": "60",
            "contents": "51",
            "checkpoint1": "1527",
            "checkpoint2": "1308",
            "checkpoint3": "196",
            "checkpoint4": "3031",
            "checkpoint_info": "checkpoint1: sum of the merged requests in page1. checkpoint2: sum of the merged requests in page2. checkpoint3: sum of the merged requests in page1 and page2.",
            "difficulty": "medium"
        },
        "eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "51"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": "51"
        }
    },
    {
        "task_id": 40042,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023",
        "start_url_lite": "http://172.16.2.4:8023/explore/projects/starred",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "What is the average number of merged requests for the top {{number}} most-starred projects? Please explore all the projects in this website, not limited to your projects. Round to the nearest whole number and provide the answer as an integer.",
        "intent": "What is the average number of merged requests for the top 30 most-starred projects? Please explore all the projects in this website, not limited to your projects. Round to the nearest whole number and provide the answer as an integer.",
        "required_obs": "any",
        "type_main": "calc",
        "type_sub": "massive_memory",
        "description": "From Explore, select Most stars and navigate through the pages. The merged requests count of the projects displayed on each page will be shown. Calculate the total number of merged requests from the first page up to the specified count, divide this total by the number of projects, and output the result as an integer.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023",
            "start_url_lite": "http://172.16.2.4:8023/explore/projects/starred",
            "number": "30",
            "contents": "77",
            "checkpoint1": "1527",
            "checkpoint2": "792",
            "checkpoint3": "2319",
            "checkpoint_info": "checkpoint1: sum of the merged requests in page1. checkpoint2: sum of the merged requests in page2. checkpoint3: sum of the merged requests in page1 and page2.",
            "difficulty": "medium"
        },
        "eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "77"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": "77"
        }
    },
    {
        "task_id": 40043,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023",
        "start_url_lite": "http://172.16.2.4:8023/explore/projects/starred",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "What is the average number of merged requests for the top {{number}} most-starred projects? Please explore all the projects in this website, not limited to your projects. Round to the nearest whole number and provide the answer as an integer.",
        "intent": "What is the average number of merged requests for the top 35 most-starred projects? Please explore all the projects in this website, not limited to your projects. Round to the nearest whole number and provide the answer as an integer.",
        "required_obs": "any",
        "type_main": "calc",
        "type_sub": "massive_memory",
        "description": "From Explore, select Most stars and navigate through the pages. The merged requests count of the projects displayed on each page will be shown. Calculate the total number of merged requests from the first page up to the specified count, divide this total by the number of projects, and output the result as an integer.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023",
            "start_url_lite": "http://172.16.2.4:8023/explore/projects/starred",
            "number": "35",
            "contents": "77",
            "checkpoint1": "1527",
            "checkpoint2": "1168",
            "checkpoint3": "2695",
            "checkpoint_info": "checkpoint1: sum of the merged requests in page1. checkpoint2: sum of the merged requests in page2. checkpoint3: sum of the merged requests in page1 and page2.",
            "difficulty": "medium"
        },
        "eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "77"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": "77"
        }
    },
    {
        "task_id": 40044,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023",
        "start_url_lite": "http://172.16.2.4:8023/explore/projects/starred",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "What is the average number of merged requests for the top {{number}} most-starred projects? Please explore all the projects in this website, not limited to your projects. Round to the nearest whole number and provide the answer as an integer.",
        "intent": "What is the average number of merged requests for the top 50 most-starred projects? Please explore all the projects in this website, not limited to your projects. Round to the nearest whole number and provide the answer as an integer.",
        "required_obs": "any",
        "type_main": "calc",
        "type_sub": "massive_memory",
        "description": "From Explore, select Most stars and navigate through the pages. The merged requests count of the projects displayed on each page will be shown. Calculate the total number of merged requests from the first page up to the specified count, divide this total by the number of projects, and output the result as an integer.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023",
            "start_url_lite": "http://172.16.2.4:8023/explore/projects/starred",
            "number": "50",
            "contents": "58",
            "checkpoint1": "1527",
            "checkpoint2": "1308",
            "checkpoint3": "64",
            "checkpoint4": "2899",
            "checkpoint_info": "checkpoint1: sum of the merged requests in page1. checkpoint2: sum of the merged requests in page2. checkpoint3: sum of the merged requests in page2. checkpoint4: sum of the merged requests in page1 and page2.",
            "difficulty": "hard"
        },
        "eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "58"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": "58"
        }
    },
    {
        "task_id": 40050,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023",
        "start_url_lite": "http://172.16.2.4:8023/explore/projects/starred",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "How many projects have {{number}} or more stars across all projects? Note that this is not limited to only your projects. Please explore all the projects in this website.",
        "intent": "How many projects have 30 or more stars across all projects? Note that this is not limited to only your projects. Please explore all the projects in this website.",
        "required_obs": "any",
        "type_main": "massive_memory",
        "description": "From Explore, select Most stars and navigate through the pages. The star count of the projects displayed on each page will be shown. Count the total number of projects with the specified star numbers.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023",
            "start_url_lite": "http://172.16.2.4:8023/explore/projects/starred",
            "number": "30",
            "contents": "34",
            "checkpoint1": "20",
            "checkpoint2": "14",
            "checkpint_info": "checkpoint1: the number of projects in the first page, checkpoint2: the number of projects in the last page",
            "difficulty": "medium"
        },
        "eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "34"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": "34"
        }
    },
    {
        "task_id": 40051,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023",
        "start_url_lite": "http://172.16.2.4:8023/explore/projects/starred",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "How many projects have {{number}} or more stars across all projects? Note that this is not limited to only your projects. Please explore all the projects in this website.",
        "intent": "How many projects have 25 or more stars across all projects? Note that this is not limited to only your projects. Please explore all the projects in this website.",
        "required_obs": "any",
        "type_main": "massive_memory",
        "description": "From Explore, select Most stars and navigate through the pages. The star count of the projects displayed on each page will be shown. Count the total number of projects with the specified star numbers.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023",
            "start_url_lite": "http://172.16.2.4:8023/explore/projects/starred",
            "number": "25",
            "contents": "48",
            "checkpoint1": "20",
            "checkpoint2": "8",
            "checkpint_info": "checkpoint1: the number of projects in the first page, checkpoint2: the number of projects in the last page",
            "difficulty": "medium"
        },
        "eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "48"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": "48"
        }
    },
    {
        "task_id": 40052,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023",
        "start_url_lite": "http://172.16.2.4:8023/explore/projects/starred",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "How many projects have {{number}} or more stars across all projects? Note that this is not limited to only your projects. Please explore all the projects in this website.",
        "intent": "How many projects have 16 or more stars across all projects? Note that this is not limited to only your projects. Please explore all the projects in this website.",
        "required_obs": "any",
        "type_main": "massive_memory",
        "description": "From Explore, select Most stars and navigate through the pages. The star count of the projects displayed on each page will be shown. Count the total number of projects with the specified star numbers.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023",
            "start_url_lite": "http://172.16.2.4:8023/explore/projects/starred",
            "number": "16",
            "contents": "64",
            "checkpoint1": "20",
            "checkpoint2": "4",
            "checkpint_info": "checkpoint1: the number of projects in the first page, checkpoint2: the number of projects in the last page",
            "difficulty": "medium"
        },
        "eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "64"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": "64"
        }
    },
    {
        "task_id": 40053,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023",
        "start_url_lite": "http://172.16.2.4:8023/explore/projects/starred",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "How many projects have {{number}} or more stars across all projects? Note that this is not limited to only your projects. Please explore all the projects in this website.",
        "intent": "How many projects have 6 or more stars across all projects? Note that this is not limited to only your projects. Please explore all the projects in this website.",
        "required_obs": "any",
        "type_main": "massive_memory",
        "description": "From Explore, select Most stars and navigate through the pages. The star count of the projects displayed on each page will be shown. Count the total number of projects with the specified star numbers.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023",
            "start_url_lite": "http://172.16.2.4:8023/explore/projects/starred",
            "number": "6",
            "contents": "85",
            "checkpoint1": "20",
            "checkpoint2": "5",
            "checkpint_info": "checkpoint1: the number of projects in the first page, checkpoint2: the number of projects in the last page",
            "difficulty": "medium"
        },
        "eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "85"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": "85"
        }
    },
    {
        "task_id": 40060,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023/explore/projects",
        "start_url_lite": "http://172.16.2.4:8023/explore/projects",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "Output the number of stars on this page and the next page, separated by a comma and space.",
        "intent": "Output the number of stars on this page and the next page, separated by a comma and space.",
        "required_obs": "any",
        "type_main": "massive_memory",
        "description": "Calculate the total number of stars from the first page up to the next page, output the stars.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023/explore/projects",
            "start_url_lite": "http://172.16.2.4:8023/explore/projects",
            "contents": "8, 1, 2, 21, 0, 1, 44, 12, 0, 28, 0, 7, 46, 55, 0, 0, 34, 5, 8, 22, 42, 29, 33, 2, 20, 1, 32, 0, 30, 29, 0, 0, 34, 32, 0, 0, 3, 39, 0, 0",
            "checkpoint1": "8, 1, 2, 21, 0, 1, 44, 12, 0, 28, 0, 7, 46, 55, 0, 0, 34, 5, 8, 22",
            "checkpoint2": "42, 29, 33, 2, 20, 1, 32, 0, 30, 29, 0, 0, 34, 32, 0, 0, 3, 39, 0, 0",
            "checkpoint_info": "checkpoint1: the numbers of stars in the first page, checkpoint2: the numbers of stars in the second page",
            "difficulty": "medium"
        },
        "eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "8, 1, 2, 21, 0, 1, 44, 12, 0, 28, 0, 7, 46, 55, 0, 0, 34, 5, 8, 22, 42, 29, 33, 2, 20, 1, 32, 0, 30, 29, 0, 0, 34, 32, 0, 0, 3, 39, 0, 0"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": "8, 1, 2, 21, 0, 1, 44, 12, 0, 28, 0, 7, 46, 55, 0, 0, 34, 5, 8, 22, 42, 29, 33, 2, 20, 1, 32, 0, 30, 29, 0, 0, 34, 32, 0, 0, 3, 39, 0, 0"
        }
    },
    {
        "task_id": 40061,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023/explore/projects?non_archived=true&page=3&sort=name_asc",
        "start_url_lite": "http://172.16.2.4:8023/explore/projects?non_archived=true&page=3&sort=name_asc",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "Output the number of stars on this page and the next page, separated by a comma and space.",
        "intent": "Output the number of stars on this page and the next page, separated by a comma and space.",
        "required_obs": "any",
        "type_main": "massive_memory",
        "description": "Calculate the total number of stars from the first page up to the next page, output the stars.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023/explore/projects?non_archived=true&page=3&sort=name_asc",
            "start_url_lite": "http://172.16.2.4:8023/explore/projects?non_archived=true&page=3&sort=name_asc",
            "contents": "0, 22, 7, 30, 16, 0, 7, 0, 0, 34, 4, 52, 0, 0, 0, 0, 0, 0, 0, 0, 11, 33, 3, 0, 21, 6, 0, 7, 4, 0, 0, 0, 0, 6, 30, 0, 0, 0, 0, 35",
            "checkpoint1": "0, 22, 7, 30, 16, 0, 7, 0, 0, 34, 4, 52, 0, 0, 0, 0, 0, 0, 0, 0",
            "checkpoint2": "11, 33, 3, 0, 21, 6, 0, 7, 4, 0, 0, 0, 0, 6, 30, 0, 0, 0, 0, 35",
            "checkpoint_info": "checkpoint1: the numbers of stars in the first page, checkpoint2: the numbers of stars in the second page",
            "difficulty": "medium"
        },
        "eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "0, 22, 7, 30, 16, 0, 7, 0, 0, 34, 4, 52, 0, 0, 0, 0, 0, 0, 0, 0, 11, 33, 3, 0, 21, 6, 0, 7, 4, 0, 0, 0, 0, 6, 30, 0, 0, 0, 0, 35"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": "0, 22, 7, 30, 16, 0, 7, 0, 0, 34, 4, 52, 0, 0, 0, 0, 0, 0, 0, 0, 11, 33, 3, 0, 21, 6, 0, 7, 4, 0, 0, 0, 0, 6, 30, 0, 0, 0, 0, 35"
        }
    },
    {
        "task_id": 40062,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023/explore/projects?non_archived=true&page=5&sort=name_asc",
        "start_url_lite": "http://172.16.2.4:8023/explore/projects?non_archived=true&page=5&sort=name_asc",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "Output the number of stars on this page and the next page, separated by a comma and space.",
        "intent": "Output the number of stars on this page and the next page, separated by a comma and space.",
        "required_obs": "any",
        "type_main": "massive_memory",
        "description": "Calculate the total number of stars from the first page up to the next page, output the stars.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023/explore/projects?non_archived=true&page=5&sort=name_asc",
            "start_url_lite": "http://172.16.2.4:8023/explore/projects?non_archived=true&page=5&sort=name_asc",
            "contents": "6, 0, 2, 1, 12, 51, 32, 35, 29, 27, 2, 5, 30, 27, 0, 0, 14, 21, 17, 25, 0, 0, 15, 0, 28, 23, 31, 26, 43, 0, 0, 0, 0, 0, 27, 31, 25, 0, 6, 2",
            "checkpoint1": "6, 0, 2, 1, 12, 51, 32, 35, 29, 27, 2, 5, 30, 27, 0, 0, 14, 21, 17, 25",
            "checkpoint2": "0, 0, 15, 0, 28, 23, 31, 26, 43, 0, 0, 0, 0, 0, 27, 31, 25, 0, 6, 2",
            "checkpoint_info": "checkpoint1: the numbers of stars in the first page, checkpoint2: the numbers of stars in the second page",
            "difficulty": "medium"
        },
        "eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "6, 0, 2, 1, 12, 51, 32, 35, 29, 27, 2, 5, 30, 27, 0, 0, 14, 21, 17, 25, 0, 0, 15, 0, 28, 23, 31, 26, 43, 0, 0, 0, 0, 0, 27, 31, 25, 0, 6, 2"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": "6, 0, 2, 1, 12, 51, 32, 35, 29, 27, 2, 5, 30, 27, 0, 0, 14, 21, 17, 25, 0, 0, 15, 0, 28, 23, 31, 26, 43, 0, 0, 0, 0, 0, 27, 31, 25, 0, 6, 2"
        }
    },
    {
        "task_id": 40063,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023/explore/projects?non_archived=true&page=7&sort=name_asc",
        "start_url_lite": "http://172.16.2.4:8023/explore/projects?non_archived=true&page=7&sort=name_asc",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "Output the number of stars on this page and the next page, separated by a comma and space.",
        "intent": "Output the number of stars on this page and the next page, separated by a comma and space.",
        "required_obs": "any",
        "type_main": "massive_memory",
        "description": "Calculate the total number of stars from the first page up to the next page, output the stars.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023/explore/projects?non_archived=true&page=7&sort=name_asc",
            "start_url_lite": "http://172.16.2.4:8023/explore/projects?non_archived=true&page=7&sort=name_asc",
            "contents": "0, 12, 3, 0, 38, 26, 0, 42, 28, 17, 47, 19, 30, 39, 41, 45, 25, 8, 12, 2, 0, 0, 5, 0, 0, 11, 0, 0, 24, 0, 19, 22, 33, 16, 0, 9, 0, 0, 5, 32",
            "checkpoint1": "0, 12, 3, 0, 38, 26, 0, 42, 28, 17, 47, 19, 30, 39, 41, 45, 25, 8, 12, 2",
            "checkpoint2": "0, 0, 5, 0, 0, 11, 0, 0, 24, 0, 19, 22, 33, 16, 0, 9, 0, 0, 5, 32",
            "checkpoint_info": "checkpoint1: the numbers of stars in the first page, checkpoint2: the numbers of stars in the second page",
            "difficulty": "medium"
        },
        "eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "0, 12, 3, 0, 38, 26, 0, 42, 28, 17, 47, 19, 30, 39, 41, 45, 25, 8, 12, 2, 0, 0, 5, 0, 0, 11, 0, 0, 24, 0, 19, 22, 33, 16, 0, 9, 0, 0, 5, 32"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": "0, 12, 3, 0, 38, 26, 0, 42, 28, 17, 47, 19, 30, 39, 41, 45, 25, 8, 12, 2, 0, 0, 5, 0, 0, 11, 0, 0, 24, 0, 19, 22, 33, 16, 0, 9, 0, 0, 5, 32"
        }
    },
    {
        "task_id": 40064,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023/explore/projects?non_archived=true&page=8&sort=name_asc",
        "start_url_lite": "http://172.16.2.4:8023/explore/projects?non_archived=true&page=8&sort=name_asc",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "Output the number of stars on this page and the next page, separated by a comma and space.",
        "intent": "Output the number of stars on this page and the next page, separated by a comma and space.",
        "required_obs": "any",
        "type_main": "massive_memory",
        "description": "Calculate the total number of stars from the first page up to the next page, output the stars.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023/explore/projects?non_archived=true&page=8&sort=name_asc",
            "start_url_lite": "http://172.16.2.4:8023/explore/projects?non_archived=true&page=8&sort=name_asc",
            "contents": "0, 0, 5, 0, 0, 11, 0, 0, 24, 0, 19, 22, 33, 16, 0, 9, 0, 0, 5, 32, 0, 20, 0, 7, 2, 0, 0, 0, 0, 1, 35, 2",
            "checkpoint1": "0, 0, 5, 0, 0, 11, 0, 0, 24, 0, 19, 22, 33, 16, 0, 9, 0, 0, 5, 32",
            "checkpoint2": "0, 20, 0, 7, 2, 0, 0, 0, 0, 1, 35, 2",
            "checkpoint_info": "checkpoint1: the numbers of stars in the first page, checkpoint2: the numbers of stars in the second page",
            "difficulty": "medium"
        },
        "eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "0, 0, 5, 0, 0, 11, 0, 0, 24, 0, 19, 22, 33, 16, 0, 9, 0, 0, 5, 32, 0, 20, 0, 7, 2, 0, 0, 0, 0, 1, 35, 2"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": "0, 0, 5, 0, 0, 11, 0, 0, 24, 0, 19, 22, 33, 16, 0, 9, 0, 0, 5, 32, 0, 20, 0, 7, 2, 0, 0, 0, 0, 1, 35, 2"
        }
    },
    {
        "task_id": 40070,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023/",
        "start_url_lite": "http://172.16.2.4:8023/explore",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "Tell the project that meets the following condition: {{target}}. Only return the (author)/(project_name) part.",
        "intent": "Tell the project that meets the following condition: the one with the most open issues among all the projects on the website. Only return the (author)/(project_name) part.",
        "required_obs": "any",
        "type_main": "others",
        "description": "The agent should search for the appropriate repository with the search box by choosing the best keyword according to the condition.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023/",
            "start_url_lite": "http://172.16.2.4:8023/explore",
            "target": "the one with the most open issues among all the projects on the website",
            "answer": "OpenAPITools/openapi-generator |OR| OpenAPI Tools/openapi-generator",
            "difficulty": "medium"
        },
        "eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "OpenAPITools/openapi-generator |OR| OpenAPI Tools/openapi-generator"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": "OpenAPITools/openapi-generator |OR| OpenAPI Tools/openapi-generator"
        }
    },
    {
        "task_id": 40071,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023/",
        "start_url_lite": "http://172.16.2.4:8023/explore",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "Tell the project that meets the following condition: {{target}}. Only return the (author)/(project_name) part.",
        "intent": "Tell the project that meets the following condition: the one for Javascript engine that displays beautiful math. Only return the (author)/(project_name) part.",
        "required_obs": "any",
        "type_main": "others",
        "description": "The agent should search for the appropriate repository with the search box by choosing the best keyword according to the condition.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023/",
            "start_url_lite": "http://172.16.2.4:8023/explore",
            "target": "the one for Javascript engine that displays beautiful math",
            "answer": "mathjax/MathJax |OR| MathJax/MathJax",
            "difficulty": "medium"
        },
        "eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "mathjax/MathJax |OR| MathJax/MathJax"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": "mathjax/MathJax |OR| MathJax/MathJax"
        }
    },
    {
        "task_id": 40072,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023/",
        "start_url_lite": "http://172.16.2.4:8023/explore",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "Tell the project that meets the following condition: {{target}}. Only return the (author)/(project_name) part.",
        "intent": "Tell the project that meets the following condition: the repository with already merged PRs assigned to me most recently. Only return the (author)/(project_name) part.",
        "required_obs": "any",
        "type_main": "others",
        "description": "The agent should search for the appropriate repository with the search box by choosing the best keyword according to the condition.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023/",
            "start_url_lite": "http://172.16.2.4:8023/explore",
            "target": "the repository with already merged PRs assigned to me most recently",
            "answer": "a11yproject/a11yproject.com |OR| The A11Y Project/a11yproject.com",
            "difficulty": "medium"
        },
        "eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "a11yproject/a11yproject.com |OR| The A11Y Project/a11yproject.com"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": "a11yproject/a11yproject.com |OR| The A11Y Project/a11yproject.com"
        }
    },
    {
        "task_id": 40073,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023/",
        "start_url_lite": "http://172.16.2.4:8023/explore",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "Tell the project that meets the following condition: {{target}}. Only return the (author)/(project_name) part.",
        "intent": "Tell the project that meets the following condition: the one with the smallest number of PRs among the projects by Facebook. Only return the (author)/(project_name) part.",
        "required_obs": "any",
        "type_main": "others",
        "description": "The agent should search for the appropriate repository with the search box by choosing the best keyword according to the condition.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023/",
            "start_url_lite": "http://172.16.2.4:8023/explore",
            "target": "the one with the smallest number of PRs among the projects by Facebook",
            "answer": "facebook/buck |OR| Meta/buck",
            "difficulty": "medium"
        },
        "eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "facebook/buck |OR| Meta/buck"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": "facebook/buck |OR| Meta/buck"
        }
    },
    {
        "task_id": 40074,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023/",
        "start_url_lite": "http://172.16.2.4:8023/explore",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "Tell the project that meets the following condition: {{target}}. Only return the (author)/(project_name) part.",
        "intent": "Tell the project that meets the following condition: the one for a Chrome extention that one of my followers hosts. Only return the (author)/(project_name) part.",
        "required_obs": "any",
        "type_main": "others",
        "description": "The agent should search for the appropriate repository with the search box by choosing the best keyword according to the condition.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023/",
            "start_url_lite": "http://172.16.2.4:8023/explore",
            "target": "the one for a Chrome extention that one of my followers hosts",
            "answer": "panicsteve/cloud-to-butt |OR| Steven Frank/cloud-to-butt",
            "difficulty": "hard"
        },
        "eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "panicsteve/cloud-to-butt |OR| Steven Frank/cloud-to-butt"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": "panicsteve/cloud-to-butt |OR| Steven Frank/cloud-to-butt"
        }
    },
    {
        "task_id": 40075,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023/",
        "start_url_lite": "http://172.16.2.4:8023/explore",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "Tell the project that meets the following condition: {{target}}. Only return the (author)/(project_name) part.",
        "intent": "Tell the project that meets the following condition: the repository with the most forks, neither hosted nor forked by me, and updated most recently. Only return the (author)/(project_name) part.",
        "required_obs": "any",
        "type_main": "others",
        "description": "The agent should search for the appropriate repository with the search box by choosing the best keyword according to the condition.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023/",
            "start_url_lite": "http://172.16.2.4:8023/explore",
            "target": "the repository with the most forks, neither hosted nor forked by me, and updated most recently",
            "answer": "Roshanjossey/nvidia-patch |OR| Roshan Jossy/timeit",
            "difficulty": "hard"
        },
        "eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "Roshanjossey/nvidia-patch |OR| Roshan Jossy/timeit"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": "Roshanjossey/nvidia-patch |OR| Roshan Jossy/timeit"
        }
    },
    {
        "task_id": 40076,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023/",
        "start_url_lite": "http://172.16.2.4:8023/explore",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "Tell the project that meets the following condition: {{target}}. Only return the (author)/(project_name) part.",
        "intent": "Tell the project that meets the following condition: Project ID 1. Only return the (author)/(project_name) part.",
        "required_obs": "any",
        "type_main": "others",
        "description": "The agent should search for the appropriate repository with the search box by choosing the best keyword according to the condition.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023/",
            "start_url_lite": "http://172.16.2.4:8023/explore",
            "target": "Project ID 1",
            "answer": "gitlab-instance-58545a48/Monitoring |OR| GitLab Instance/Monitoring",
            "difficulty": "hard"
        },
        "eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "must_include": [
                    "gitlab-instance-58545a48/Monitoring |OR| GitLab Instance/Monitoring"
                ]
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": "gitlab-instance-58545a48/Monitoring |OR| GitLab Instance/Monitoring"
        }
    },
    {
        "task_id": 40080,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023/thoughtbot/administrate",
        "start_url_lite": "http://172.16.2.4:8023/thoughtbot/administrate/-/merge_requests",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "Tell me the file name that was changed in at least two of the {{PRnumber}} most recently updated all PRs in this respository. Return the path to the file and \"N/A\" if such file does not exist. If there are multiple applicable files, return all of them separated by commas.",
        "intent": "Tell me the file name that was changed in at least two of the 4 most recently updated all PRs in this respository. Return the path to the file and \"N/A\" if such file does not exist. If there are multiple applicable files, return all of them separated by commas.",
        "required_obs": "any",
        "type_main": "long-term",
        "description": "The agent should check out each PR in the \"Merge requests\" page and look for the files that were changed by the PRs. It should output the file name that was modified multiple times.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023/thoughtbot/administrate",
            "start_url_lite": "http://172.16.2.4:8023/thoughtbot/administrate/-/merge_requests",
            "PRnumber": "4",
            "answer": "N/A",
            "difficulty": "medium"
        },
        "eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "exact_match": "N/A"
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": "N/A"
        }
    },
    {
        "task_id": 40081,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023/igraph/igraph",
        "start_url_lite": "http://172.16.2.4:8023/igraph/igraph/-/merge_requests",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "Tell me the file name that was changed in at least two of the {{PRnumber}} most recently updated all PRs in this respository. Return the path to the file and \"N/A\" if such file does not exist. If there are multiple applicable files, return all of them separated by commas.",
        "intent": "Tell me the file name that was changed in at least two of the 5 most recently updated all PRs in this respository. Return the path to the file and \"N/A\" if such file does not exist. If there are multiple applicable files, return all of them separated by commas.",
        "required_obs": "any",
        "type_main": "long-term",
        "description": "The agent should check out each PR in the \"Merge requests\" page and look for the files that were changed by the PRs. It should output the file name that was modified multiple times.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023/igraph/igraph",
            "start_url_lite": "http://172.16.2.4:8023/igraph/igraph/-/merge_requests",
            "PRnumber": "5",
            "answer": "interfaces/functions.def",
            "difficulty": "medium"
        },
        "eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "exact_match": "interfaces/functions.def"
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": "interfaces/functions.def"
        }
    },
    {
        "task_id": 40082,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023/geeeeeeeeek/electronic-wechat",
        "start_url_lite": "http://172.16.2.4:8023/geeeeeeeeek/electronic-wechat/-/merge_requests",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "Tell me the file name that was changed in at least two of the {{PRnumber}} most recently updated all PRs in this respository. Return the path to the file and \"N/A\" if such file does not exist. If there are multiple applicable files, return all of them separated by commas.",
        "intent": "Tell me the file name that was changed in at least two of the 5 most recently updated all PRs in this respository. Return the path to the file and \"N/A\" if such file does not exist. If there are multiple applicable files, return all of them separated by commas.",
        "required_obs": "any",
        "type_main": "long-term",
        "description": "The agent should check out each PR in the \"Merge requests\" page and look for the files that were changed by the PRs. It should output the file name that was modified multiple times.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023/geeeeeeeeek/electronic-wechat",
            "start_url_lite": "http://172.16.2.4:8023/geeeeeeeeek/electronic-wechat/-/merge_requests",
            "PRnumber": "5",
            "answer": "src/windows/controllers/app_tray.js",
            "difficulty": "medium"
        },
        "eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "exact_match": "src/windows/controllers/app_tray.js"
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": "src/windows/controllers/app_tray.js"
        }
    },
    {
        "task_id": 40083,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023/quickfixgo/quickfix",
        "start_url_lite": "http://172.16.2.4:8023/quickfixgo/quickfix/-/merge_requests",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "Tell me the file name that was changed in at least two of the {{PRnumber}} most recently updated all PRs in this respository. Return the path to the file and \"N/A\" if such file does not exist. If there are multiple applicable files, return all of them separated by commas.",
        "intent": "Tell me the file name that was changed in at least two of the 4 most recently updated all PRs in this respository. Return the path to the file and \"N/A\" if such file does not exist. If there are multiple applicable files, return all of them separated by commas.",
        "required_obs": "any",
        "type_main": "long-term",
        "description": "The agent should check out each PR in the \"Merge requests\" page and look for the files that were changed by the PRs. It should output the file name that was modified multiple times.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023/quickfixgo/quickfix",
            "start_url_lite": "http://172.16.2.4:8023/quickfixgo/quickfix/-/merge_requests",
            "PRnumber": "4",
            "answer": "cmd/generate-fix/internal/template_helpers.go",
            "difficulty": "medium"
        },
        "eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "exact_match": "cmd/generate-fix/internal/template_helpers.go"
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": "cmd/generate-fix/internal/template_helpers.go"
        }
    },
    {
        "task_id": 40084,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023/http-party/node-http-proxy",
        "start_url_lite": "http://172.16.2.4:8023/http-party/node-http-proxy/-/merge_requests",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "Tell me the file name that was changed in at least two of the {{PRnumber}} most recently updated all PRs in this respository. Return the path to the file and \"N/A\" if such file does not exist. If there are multiple applicable files, return all of them separated by commas.",
        "intent": "Tell me the file name that was changed in at least two of the 3 most recently updated all PRs in this respository. Return the path to the file and \"N/A\" if such file does not exist. If there are multiple applicable files, return all of them separated by commas.",
        "required_obs": "any",
        "type_main": "long-term",
        "description": "The agent should check out each PR in the \"Merge requests\" page and look for the files that were changed by the PRs. It should output the file name that was modified multiple times.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023/http-party/node-http-proxy",
            "start_url_lite": "http://172.16.2.4:8023/http-party/node-http-proxy/-/merge_requests",
            "PRnumber": "3",
            "answer": "package-lock.json",
            "difficulty": "medium"
        },
        "eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "exact_match": "package-lock.json"
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": "package-lock.json"
        }
    },
    {
        "task_id": 40090,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023",
        "start_url_lite": "http://172.16.2.4:8023/twbs/bootstrap",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "{{question}} according to the readme? {{format}}.",
        "intent": "What is the URL to visit first if I want to look into my tweets without going to the twitter.com website according to the readme? Only return the url.",
        "required_obs": "any",
        "type_main": "others",
        "description": "The agent should search for the appropriate repository with the search box by choosing the best keyword according to the condition. It should also extract the exact information from the readme of the repository found.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023",
            "start_url_lite": "http://172.16.2.4:8023/twbs/bootstrap",
            "question": "What is the URL to visit first if I want to look into my tweets without going to the twitter.com website",
            "format": "Only return the url",
            "answer": "https://github.com/amwhalen/archive-my-tweets/archive/master.zip",
            "difficulty": "medium"
        },
        "eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "exact_match": "https://github.com/amwhalen/archive-my-tweets/archive/master.zip"
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": "https://github.com/amwhalen/archive-my-tweets/archive/master.zip"
        }
    },
    {
        "task_id": 40091,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023",
        "start_url_lite": "http://172.16.2.4:8023/abisubramanya27/CS6910_Assignment2",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "{{question}} according to the readme? {{format}}.",
        "intent": "What could be Abishek S's student number according to the readme? Only return the student number.",
        "required_obs": "any",
        "type_main": "others",
        "description": "The agent should search for the appropriate repository with the search box by choosing the best keyword according to the condition. It should also extract the exact information from the readme of the repository found.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023",
            "start_url_lite": "http://172.16.2.4:8023/abisubramanya27/CS6910_Assignment2",
            "question": "What could be Abishek S's student number",
            "format": "Only return the student number",
            "answer": "EE18B001",
            "difficulty": "hard"
        },
        "eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "exact_match": "EE18B001"
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": "EE18B001"
        }
    },
    {
        "task_id": 40092,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023",
        "start_url_lite": "http://172.16.2.4:8023/kkroening/ffmpeg-python",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "{{question}} according to the readme? {{format}}.",
        "intent": "What would be the command to execute if I get an import error from ffmpeg according to the readme? Only return the command and its arguments.",
        "required_obs": "any",
        "type_main": "others",
        "description": "The agent should search for the appropriate repository with the search box by choosing the best keyword according to the condition. It should also extract the exact information from the readme of the repository found.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023",
            "start_url_lite": "http://172.16.2.4:8023/kkroening/ffmpeg-python",
            "question": "What would be the command to execute if I get an import error from ffmpeg",
            "format": "Only return the command and its arguments",
            "answer": "pip install ffmpeg-python",
            "difficulty": "medium"
        },
        "eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "exact_match": "pip install ffmpeg-python"
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": "pip install ffmpeg-python"
        }
    },
    {
        "task_id": 40093,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023",
        "start_url_lite": "http://172.16.2.4:8023/crashtech/torque-postgresql",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "{{question}} according to the readme? {{format}}.",
        "intent": "What command should I add to the Gemfile to use crashtech/torque-postgresql for Rails version 6.1.7.1 according to the readme? .",
        "required_obs": "any",
        "type_main": "others",
        "description": "The agent should search for the appropriate repository with the search box by choosing the best keyword according to the condition. It should also extract the exact information from the readme of the repository found.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023",
            "start_url_lite": "http://172.16.2.4:8023/crashtech/torque-postgresql",
            "question": "What command should I add to the Gemfile to use crashtech/torque-postgresql for Rails version 6.1.7.1",
            "format": "",
            "answer": "gem 'torque-postgresql', '~> 2.0.4'",
            "difficulty": "medium"
        },
        "eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "exact_match": "gem 'torque-postgresql', '~> 2.0.4'"
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": "gem 'torque-postgresql', '~> 2.0.4'"
        }
    },
    {
        "task_id": 40094,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023",
        "start_url_lite": "http://172.16.2.4:8023/keylase/nvidia-patch",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "{{question}} according to the readme? {{format}}.",
        "intent": "What is the command to execute first to use the NVENC and NvFBC patches for Nvidia drivers without a driver according to the readme? Only return the command and its arguments.",
        "required_obs": "any",
        "type_main": "others",
        "description": "The agent should search for the appropriate repository with the search box by choosing the best keyword according to the condition. It should also extract the exact information from the readme of the repository found.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023",
            "start_url_lite": "http://172.16.2.4:8023/keylase/nvidia-patch",
            "question": "What is the command to execute first to use the NVENC and NvFBC patches for Nvidia drivers without a driver",
            "format": "Only return the command and its arguments",
            "answer": "mkdir /opt/nvidia && cd /opt/nvidia",
            "difficulty": "medium"
        },
        "eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "exact_match": "mkdir /opt/nvidia && cd /opt/nvidia"
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": "mkdir /opt/nvidia && cd /opt/nvidia"
        }
    },
    {
        "task_id": 40100,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023",
        "start_url_lite": "http://172.16.2.4:8023/opensourcediversity/opensourcediversity.org/-/branches",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "List the name of the branches in {{repository}} that is more than {{count}} commits behind the default. Sort the branches by their names in alphabetical order, and output each branch in a separate line. Return 'N/A' if such branch does not exist.",
        "intent": "List the name of the branches in opensourcediversity/opensourcediversity.org that is more than 10 commits behind the default. Sort the branches by their names in alphabetical order, and output each branch in a separate line. Return 'N/A' if such branch does not exist.",
        "required_obs": "any",
        "type_main": "long-term",
        "description": "The agent should search for the appropriate repository with the search box by choosing the best keyword according to the description. It should also check out every branch at the \"Branches\" page and look at the number of commits behind the default.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023",
            "start_url_lite": "http://172.16.2.4:8023/opensourcediversity/opensourcediversity.org/-/branches",
            "repository": "opensourcediversity/opensourcediversity.org",
            "count": "10",
            "answer": "articles\nfaq\ngithub/fork/2201monesh/patch-1\ngithub/fork/Ahcatan/master\ngithub/fork/SANJAY072000/failing-html-checks-#123\ngithub/fork/bunnydays/faq\ngithub/fork/emmairwin/master\ngithub/fork/joelwass/twitterCardPic\ngithub/fork/kulendu/master\ngithub/fork/mayuribotre15/main\ngithub/fork/shub-garg/master\ngithub/fork/siddhanth339/master\nmore-projects\npublications",
            "difficulty": "medium"
        },
        "eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "exact_match": "articles\nfaq\ngithub/fork/2201monesh/patch-1\ngithub/fork/Ahcatan/master\ngithub/fork/SANJAY072000/failing-html-checks-#123\ngithub/fork/bunnydays/faq\ngithub/fork/emmairwin/master\ngithub/fork/joelwass/twitterCardPic\ngithub/fork/kulendu/master\ngithub/fork/mayuribotre15/main\ngithub/fork/shub-garg/master\ngithub/fork/siddhanth339/master\nmore-projects\npublications"
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": "articles\nfaq\ngithub/fork/2201monesh/patch-1\ngithub/fork/Ahcatan/master\ngithub/fork/SANJAY072000/failing-html-checks-#123\ngithub/fork/bunnydays/faq\ngithub/fork/emmairwin/master\ngithub/fork/joelwass/twitterCardPic\ngithub/fork/kulendu/master\ngithub/fork/mayuribotre15/main\ngithub/fork/shub-garg/master\ngithub/fork/siddhanth339/master\nmore-projects\npublications"
        }
    },
    {
        "task_id": 40101,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023",
        "start_url_lite": "http://172.16.2.4:8023/byteblaze/remove-board-movement-events-from-the-github-issue-timeline/-/branches",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "List the name of the branches in {{repository}} that is more than {{count}} commits behind the default. Sort the branches by their names in alphabetical order, and output each branch in a separate line. Return 'N/A' if such branch does not exist.",
        "intent": "List the name of the branches in my repository for removing board movement events from the GitHub Issue timeline that is more than 10 commits behind the default. Sort the branches by their names in alphabetical order, and output each branch in a separate line. Return 'N/A' if such branch does not exist.",
        "required_obs": "any",
        "type_main": "long-term",
        "description": "The agent should search for the appropriate repository with the search box by choosing the best keyword according to the description. It should also check out every branch at the \"Branches\" page and look at the number of commits behind the default.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023",
            "start_url_lite": "http://172.16.2.4:8023/byteblaze/remove-board-movement-events-from-the-github-issue-timeline/-/branches",
            "repository": "my repository for removing board movement events from the GitHub Issue timeline",
            "count": "10",
            "answer": "N/A",
            "difficulty": "medium"
        },
        "eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "exact_match": "N/A"
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": "N/A"
        }
    },
    {
        "task_id": 40102,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023",
        "start_url_lite": "http://172.16.2.4:8023/kahun/awesome-sysadmin/-/branches",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "List the name of the branches in {{repository}} that is more than {{count}} commits behind the default. Sort the branches by their names in alphabetical order, and output each branch in a separate line. Return 'N/A' if such branch does not exist.",
        "intent": "List the name of the branches in a list of awesome open source sysadmin resources that is more than 250 commits behind the default. Sort the branches by their names in alphabetical order, and output each branch in a separate line. Return 'N/A' if such branch does not exist.",
        "required_obs": "any",
        "type_main": "long-term",
        "description": "The agent should search for the appropriate repository with the search box by choosing the best keyword according to the description. It should also check out every branch at the \"Branches\" page and look at the number of commits behind the default.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023",
            "start_url_lite": "http://172.16.2.4:8023/kahun/awesome-sysadmin/-/branches",
            "repository": "a list of awesome open source sysadmin resources",
            "count": "250",
            "answer": "gh-pages\ngithub/fork/dstergiou/added-ip-address-management\ngithub/fork/tsaavik/master",
            "difficulty": "hard"
        },
        "eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "exact_match": "gh-pages\ngithub/fork/dstergiou/added-ip-address-management\ngithub/fork/tsaavik/master"
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": "gh-pages\ngithub/fork/dstergiou/added-ip-address-management\ngithub/fork/tsaavik/master"
        }
    },
    {
        "task_id": 40103,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023",
        "start_url_lite": "http://172.16.2.4:8023/amwhalen/archive-my-tweets/-/branches",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "List the name of the branches in {{repository}} that is more than {{count}} commits behind the default. Sort the branches by their names in alphabetical order, and output each branch in a separate line. Return 'N/A' if such branch does not exist.",
        "intent": "List the name of the branches in the repository for an app that archives my tweets that is more than 10 commits behind the default. Sort the branches by their names in alphabetical order, and output each branch in a separate line. Return 'N/A' if such branch does not exist.",
        "required_obs": "any",
        "type_main": "long-term",
        "description": "The agent should search for the appropriate repository with the search box by choosing the best keyword according to the description. It should also check out every branch at the \"Branches\" page and look at the number of commits behind the default.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023",
            "start_url_lite": "http://172.16.2.4:8023/amwhalen/archive-my-tweets/-/branches",
            "repository": "the repository for an app that archives my tweets",
            "count": "10",
            "answer": "php52",
            "difficulty": "hard"
        },
        "eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "exact_match": "php52"
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": "php52"
        }
    },
    {
        "task_id": 40104,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023",
        "start_url_lite": "http://172.16.2.4:8023/lahwaacz/arch-wiki-docs/-/branches",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "List the name of the branches in {{repository}} that is more than {{count}} commits behind the default. Sort the branches by their names in alphabetical order, and output each branch in a separate line. Return 'N/A' if such branch does not exist.",
        "intent": "List the name of the branches in the repository for a script to download pages from Arch Wiki that is more than 3 commits behind the default. Sort the branches by their names in alphabetical order, and output each branch in a separate line. Return 'N/A' if such branch does not exist.",
        "required_obs": "any",
        "type_main": "long-term",
        "description": "The agent should search for the appropriate repository with the search box by choosing the best keyword according to the description. It should also check out every branch at the \"Branches\" page and look at the number of commits behind the default.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023",
            "start_url_lite": "http://172.16.2.4:8023/lahwaacz/arch-wiki-docs/-/branches",
            "repository": "the repository for a script to download pages from Arch Wiki",
            "count": "3",
            "answer": "github/fork/PQYPLZXHGF/patch-1\ngithub/fork/kiasoc5/index.html",
            "difficulty": "medium"
        },
        "eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "exact_match": "github/fork/PQYPLZXHGF/patch-1\ngithub/fork/kiasoc5/index.html"
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": "github/fork/PQYPLZXHGF/patch-1\ngithub/fork/kiasoc5/index.html"
        }
    },
    {
        "task_id": 40110,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023",
        "start_url_lite": "http://172.16.2.4:8023/OpenAPITools/openapi-generator/-/tags",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "List all tags in {{repository}} in the alphabetical order and show the date of the latest commit that each tag points to in UTC. Return 'N/A' if no tag exists. Output in the following format, each in a separate line-> (tag name):(yyyy-mm-dd)",
        "intent": "List all tags in OpenAPI Generator in the alphabetical order and show the date of the latest commit that each tag points to in UTC. Return 'N/A' if no tag exists. Output in the following format, each in a separate line-> (tag name):(yyyy-mm-dd)",
        "required_obs": "text",
        "type_main": "long-term",
        "description": "The agent should search for the appropriate repository with the search box by choosing the best keyword according to the description. It should navigate to the \"Tags\" page and check the updated time. The time should be modified to be UTC.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023",
            "start_url_lite": "http://172.16.2.4:8023/OpenAPITools/openapi-generator/-/tags",
            "repository": "OpenAPI Generator",
            "answer": "2.0.17:2014-08-26\nswagger-codegen_2.9.1-1.1:2012-04-13\nswagger-codegen_2.9.1-2.0.0:2012-10-11\nswagger-codegen_2.9.1-2.0.1:2012-12-05\nv2.0.13:2014-02-21\nv2.0.18:2015-02-09\nv2.1.0-M1:2015-02-17\nv2.1.0-M2:2015-04-08\nv2.1.1-M1:2015-02-18\nv2.1.2:2015-06-09\nv2.1.2-M1:2015-02-24\nv2.1.3:2015-08-24\nv2.1.4:2015-10-26\nv2.1.5:2016-01-06\nv2.1.6:2016-04-06\nv2.2.0:2016-07-17\nv2.2.1:2016-08-07\nv2.2.2:2017-03-01\nv2.2.3:2017-07-15\nv2.3.0:2017-12-22\nv2.3.1:2018-01-13\nv3.0.0:2018-06-01\nv3.0.0-rc0:2018-01-24\nv3.0.1:2018-06-11\nv3.0.2:2018-06-18\nv3.0.3:2018-06-27\nv3.1.0:2018-07-06\nv3.1.1:2018-07-18\nv3.1.2:2018-07-25\nv3.2.0:2018-08-06\nv3.2.1:2018-08-14\nv3.2.2:2018-08-22\nv3.2.3:2018-08-30\nv3.3.0:2018-10-01\nv3.3.1:2018-10-15\nv3.3.2:2018-10-31\nv3.3.3:2018-11-15\nv3.3.4:2018-11-30\nv4.0.0:2019-05-13\nv4.0.0-beta:2018-12-31\nv4.0.0-beta2:2019-01-31\nv4.0.0-beta3:2019-04-04\nv4.0.1:2019-05-31\nv4.0.2:2019-06-20\nv4.0.3:2019-07-09\nv4.1.0:2019-08-09\nv4.1.1:2019-08-26\nv4.1.2:2019-09-11\nv4.1.3:2019-10-04\nv4.2.0:2019-10-31\nv4.2.1:2019-11-15\nv4.2.2:2019-12-02\nv4.2.3:2020-01-31\nv4.3.0:2020-03-27\nv4.3.1:2020-05-06\nv5.0.0:2020-12-21\nv5.0.0-beta:2020-06-29\nv5.0.0-beta2:2020-09-04\nv5.0.0-beta3:2020-11-20\nv5.0.1:2021-02-06\nv5.1.0:2021-03-20\nv5.1.1:2021-05-07\nv5.2.0:2021-07-09\nv5.2.1:2021-08-16\nv5.3.0:2021-10-24\nv5.3.1:2021-12-21\nv5.4.0:2022-01-31\nv6.0.0:2022-05-26\nv6.0.0-beta:2022-04-04\nv6.0.1:2022-07-03\nv6.1.0:2022-09-11\nv6.2.0:2022-09-24\nv6.2.1:2022-11-01\nv6.3.0:2023-02-01\nv6.4.0:2023-02-19",
            "difficulty": "hard"
        },
        "eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "exact_match": "2.0.17:2014-08-26\nswagger-codegen_2.9.1-1.1:2012-04-13\nswagger-codegen_2.9.1-2.0.0:2012-10-11\nswagger-codegen_2.9.1-2.0.1:2012-12-05\nv2.0.13:2014-02-21\nv2.0.18:2015-02-09\nv2.1.0-M1:2015-02-17\nv2.1.0-M2:2015-04-08\nv2.1.1-M1:2015-02-18\nv2.1.2:2015-06-09\nv2.1.2-M1:2015-02-24\nv2.1.3:2015-08-24\nv2.1.4:2015-10-26\nv2.1.5:2016-01-06\nv2.1.6:2016-04-06\nv2.2.0:2016-07-17\nv2.2.1:2016-08-07\nv2.2.2:2017-03-01\nv2.2.3:2017-07-15\nv2.3.0:2017-12-22\nv2.3.1:2018-01-13\nv3.0.0:2018-06-01\nv3.0.0-rc0:2018-01-24\nv3.0.1:2018-06-11\nv3.0.2:2018-06-18\nv3.0.3:2018-06-27\nv3.1.0:2018-07-06\nv3.1.1:2018-07-18\nv3.1.2:2018-07-25\nv3.2.0:2018-08-06\nv3.2.1:2018-08-14\nv3.2.2:2018-08-22\nv3.2.3:2018-08-30\nv3.3.0:2018-10-01\nv3.3.1:2018-10-15\nv3.3.2:2018-10-31\nv3.3.3:2018-11-15\nv3.3.4:2018-11-30\nv4.0.0:2019-05-13\nv4.0.0-beta:2018-12-31\nv4.0.0-beta2:2019-01-31\nv4.0.0-beta3:2019-04-04\nv4.0.1:2019-05-31\nv4.0.2:2019-06-20\nv4.0.3:2019-07-09\nv4.1.0:2019-08-09\nv4.1.1:2019-08-26\nv4.1.2:2019-09-11\nv4.1.3:2019-10-04\nv4.2.0:2019-10-31\nv4.2.1:2019-11-15\nv4.2.2:2019-12-02\nv4.2.3:2020-01-31\nv4.3.0:2020-03-27\nv4.3.1:2020-05-06\nv5.0.0:2020-12-21\nv5.0.0-beta:2020-06-29\nv5.0.0-beta2:2020-09-04\nv5.0.0-beta3:2020-11-20\nv5.0.1:2021-02-06\nv5.1.0:2021-03-20\nv5.1.1:2021-05-07\nv5.2.0:2021-07-09\nv5.2.1:2021-08-16\nv5.3.0:2021-10-24\nv5.3.1:2021-12-21\nv5.4.0:2022-01-31\nv6.0.0:2022-05-26\nv6.0.0-beta:2022-04-04\nv6.0.1:2022-07-03\nv6.1.0:2022-09-11\nv6.2.0:2022-09-24\nv6.2.1:2022-11-01\nv6.3.0:2023-02-01\nv6.4.0:2023-02-19"
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": "2.0.17:2014-08-26\nswagger-codegen_2.9.1-1.1:2012-04-13\nswagger-codegen_2.9.1-2.0.0:2012-10-11\nswagger-codegen_2.9.1-2.0.1:2012-12-05\nv2.0.13:2014-02-21\nv2.0.18:2015-02-09\nv2.1.0-M1:2015-02-17\nv2.1.0-M2:2015-04-08\nv2.1.1-M1:2015-02-18\nv2.1.2:2015-06-09\nv2.1.2-M1:2015-02-24\nv2.1.3:2015-08-24\nv2.1.4:2015-10-26\nv2.1.5:2016-01-06\nv2.1.6:2016-04-06\nv2.2.0:2016-07-17\nv2.2.1:2016-08-07\nv2.2.2:2017-03-01\nv2.2.3:2017-07-15\nv2.3.0:2017-12-22\nv2.3.1:2018-01-13\nv3.0.0:2018-06-01\nv3.0.0-rc0:2018-01-24\nv3.0.1:2018-06-11\nv3.0.2:2018-06-18\nv3.0.3:2018-06-27\nv3.1.0:2018-07-06\nv3.1.1:2018-07-18\nv3.1.2:2018-07-25\nv3.2.0:2018-08-06\nv3.2.1:2018-08-14\nv3.2.2:2018-08-22\nv3.2.3:2018-08-30\nv3.3.0:2018-10-01\nv3.3.1:2018-10-15\nv3.3.2:2018-10-31\nv3.3.3:2018-11-15\nv3.3.4:2018-11-30\nv4.0.0:2019-05-13\nv4.0.0-beta:2018-12-31\nv4.0.0-beta2:2019-01-31\nv4.0.0-beta3:2019-04-04\nv4.0.1:2019-05-31\nv4.0.2:2019-06-20\nv4.0.3:2019-07-09\nv4.1.0:2019-08-09\nv4.1.1:2019-08-26\nv4.1.2:2019-09-11\nv4.1.3:2019-10-04\nv4.2.0:2019-10-31\nv4.2.1:2019-11-15\nv4.2.2:2019-12-02\nv4.2.3:2020-01-31\nv4.3.0:2020-03-27\nv4.3.1:2020-05-06\nv5.0.0:2020-12-21\nv5.0.0-beta:2020-06-29\nv5.0.0-beta2:2020-09-04\nv5.0.0-beta3:2020-11-20\nv5.0.1:2021-02-06\nv5.1.0:2021-03-20\nv5.1.1:2021-05-07\nv5.2.0:2021-07-09\nv5.2.1:2021-08-16\nv5.3.0:2021-10-24\nv5.3.1:2021-12-21\nv5.4.0:2022-01-31\nv6.0.0:2022-05-26\nv6.0.0-beta:2022-04-04\nv6.0.1:2022-07-03\nv6.1.0:2022-09-11\nv6.2.0:2022-09-24\nv6.2.1:2022-11-01\nv6.3.0:2023-02-01\nv6.4.0:2023-02-19"
        }
    },
    {
        "task_id": 40111,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023",
        "start_url_lite": "http://172.16.2.4:8023/bblanchon/ArduinoJson/-/tags",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "List all tags in {{repository}} in the alphabetical order and show the date of the latest commit that each tag points to in UTC. Return 'N/A' if no tag exists. Output in the following format, each in a separate line-> (tag name):(yyyy-mm-dd)",
        "intent": "List all tags in the C++ JSON library for Arduino in the alphabetical order and show the date of the latest commit that each tag points to in UTC. Return 'N/A' if no tag exists. Output in the following format, each in a separate line-> (tag name):(yyyy-mm-dd)",
        "required_obs": "text",
        "type_main": "long-term",
        "description": "The agent should search for the appropriate repository with the search box by choosing the best keyword according to the description. It should navigate to the \"Tags\" page and check the updated time. The time should be modified to be UTC.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023",
            "start_url_lite": "http://172.16.2.4:8023/bblanchon/ArduinoJson/-/tags",
            "repository": "the C++ JSON library for Arduino",
            "answer": "v1.0:2014-01-23\nv1.1:2014-02-27\nv1.2:2014-03-03\nv2.0:2014-07-09\nv2.1:2014-07-15\nv3.0:2014-07-23\nv3.1:2014-08-03\nv3.2:2014-08-04\nv3.3:2014-09-01\nv3.4:2014-09-09\nv4.0:2014-11-29\nv4.0-beta-1:2014-11-11\nv4.1:2014-12-21\nv4.2:2015-02-07\nv4.3:2015-05-03\nv4.4:2015-05-09\nv4.5:2015-06-10\nv4.6:2015-08-01\nv4.6.1:2015-08-02\nv5.0-beta-1:2015-05-31\nv5.0-beta-2:2015-07-10\nv5.0-beta-3:2015-07-25\nv5.0-beta-4:2015-07-27\nv5.0-beta-5:2015-08-10\nv5.0.0:2015-08-20\nv5.0.1:2015-08-24\nv5.0.2:2015-09-01\nv5.0.3:2015-09-19\nv5.0.4:2015-09-29\nv5.0.5:2015-10-30\nv5.0.6:2015-11-09\nv5.0.7:2015-11-25\nv5.0.8:2016-01-31\nv5.1.0:2016-02-14\nv5.1.0-beta.1:2016-02-01\nv5.1.0-beta.2:2016-02-06\nv5.1.1:2016-02-23\nv5.10.0:2017-05-20\nv5.10.1:2017-06-12\nv5.11.0:2017-06-25\nv5.11.1:2017-07-14\nv5.11.2:2017-10-17\nv5.12.0:2017-12-11\nv5.13.0:2018-01-19\nv5.13.1:2018-02-19\nv5.13.2:2018-06-01\nv5.13.3:2018-10-06\nv5.13.4:2018-12-04\nv5.13.5:2019-03-01\nv5.2.0:2016-04-16\nv5.3.0:2016-04-30\nv5.4.0:2016-05-06\nv5.5.0:2016-05-22\nv5.5.1:2016-06-06\nv5.6.0:2016-06-22\nv5.6.1:2016-06-24\nv5.6.2:2016-06-30\nv5.6.3:2016-07-19\nv5.6.4:2016-07-20\nv5.6.5:2016-08-15\nv5.6.6:2016-08-29\nv5.6.7:2016-09-20\nv5.7.0:2016-11-06\nv5.7.1:2016-11-13\nv5.7.2:2016-11-23\nv5.7.3:2016-12-10\nv5.8.0:2017-01-03\nv5.8.1:2017-01-15\nv5.8.2:2017-01-22\nv5.8.3:2017-02-11\nv5.8.4:2017-03-26\nv5.9.0:2017-04-24\nv6.0.0-beta:2018-06-07\nv6.0.1-beta:2018-06-11\nv6.1.0-beta:2018-07-02\nv6.10.0:2019-03-22\nv6.10.1:2019-04-23\nv6.11.0:2019-05-26\nv6.11.1:2019-06-21\nv6.11.2:2019-07-08\nv6.11.3:2019-07-22\nv6.11.4:2019-08-12\nv6.11.5:2019-08-23\nv6.12.0:2019-09-05\nv6.13.0:2019-11-01\nv6.14.0:2020-01-16\nv6.14.1:2020-01-27\nv6.15.0:2020-03-22\nv6.15.1:2020-04-08\nv6.15.2:2020-05-15\nv6.16.0:2020-08-01\nv6.16.1:2020-08-04\nv6.17.0:2020-10-19\nv6.17.1:2020-11-07\nv6.17.2:2020-11-14\nv6.17.3:2021-02-15\nv6.18.0:2021-05-05\nv6.18.1:2021-07-03\nv6.18.2:2021-07-19\nv6.18.3:2021-07-27\nv6.18.4:2021-09-06\nv6.18.5:2021-09-28\nv6.19.0:2022-01-08\nv6.19.1:2022-01-14\nv6.19.2:2022-02-14\nv6.19.3:2022-03-08\nv6.19.4:2022-04-05\nv6.2.0-beta:2018-07-12\nv6.2.1-beta:2018-07-17\nv6.2.2-beta:2018-07-18\nv6.2.3-beta:2018-07-19\nv6.20.0:2022-12-26\nv6.20.1:2023-02-08\nv6.21.0:2023-03-14\nv6.3.0-beta:2018-08-31\nv6.4.0-beta:2018-09-11\nv6.5.0-beta:2018-10-13\nv6.6.0-beta:2018-11-13\nv6.7.0-beta:2018-12-07\nv6.8.0-beta:2019-01-30\nv6.9.0:2019-02-26\nv6.9.1:2019-03-01",
            "difficulty": "hard"
        },
        "eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "exact_match": "v1.0:2014-01-23\nv1.1:2014-02-27\nv1.2:2014-03-03\nv2.0:2014-07-09\nv2.1:2014-07-15\nv3.0:2014-07-23\nv3.1:2014-08-03\nv3.2:2014-08-04\nv3.3:2014-09-01\nv3.4:2014-09-09\nv4.0:2014-11-29\nv4.0-beta-1:2014-11-11\nv4.1:2014-12-21\nv4.2:2015-02-07\nv4.3:2015-05-03\nv4.4:2015-05-09\nv4.5:2015-06-10\nv4.6:2015-08-01\nv4.6.1:2015-08-02\nv5.0-beta-1:2015-05-31\nv5.0-beta-2:2015-07-10\nv5.0-beta-3:2015-07-25\nv5.0-beta-4:2015-07-27\nv5.0-beta-5:2015-08-10\nv5.0.0:2015-08-20\nv5.0.1:2015-08-24\nv5.0.2:2015-09-01\nv5.0.3:2015-09-19\nv5.0.4:2015-09-29\nv5.0.5:2015-10-30\nv5.0.6:2015-11-09\nv5.0.7:2015-11-25\nv5.0.8:2016-01-31\nv5.1.0:2016-02-14\nv5.1.0-beta.1:2016-02-01\nv5.1.0-beta.2:2016-02-06\nv5.1.1:2016-02-23\nv5.10.0:2017-05-20\nv5.10.1:2017-06-12\nv5.11.0:2017-06-25\nv5.11.1:2017-07-14\nv5.11.2:2017-10-17\nv5.12.0:2017-12-11\nv5.13.0:2018-01-19\nv5.13.1:2018-02-19\nv5.13.2:2018-06-01\nv5.13.3:2018-10-06\nv5.13.4:2018-12-04\nv5.13.5:2019-03-01\nv5.2.0:2016-04-16\nv5.3.0:2016-04-30\nv5.4.0:2016-05-06\nv5.5.0:2016-05-22\nv5.5.1:2016-06-06\nv5.6.0:2016-06-22\nv5.6.1:2016-06-24\nv5.6.2:2016-06-30\nv5.6.3:2016-07-19\nv5.6.4:2016-07-20\nv5.6.5:2016-08-15\nv5.6.6:2016-08-29\nv5.6.7:2016-09-20\nv5.7.0:2016-11-06\nv5.7.1:2016-11-13\nv5.7.2:2016-11-23\nv5.7.3:2016-12-10\nv5.8.0:2017-01-03\nv5.8.1:2017-01-15\nv5.8.2:2017-01-22\nv5.8.3:2017-02-11\nv5.8.4:2017-03-26\nv5.9.0:2017-04-24\nv6.0.0-beta:2018-06-07\nv6.0.1-beta:2018-06-11\nv6.1.0-beta:2018-07-02\nv6.10.0:2019-03-22\nv6.10.1:2019-04-23\nv6.11.0:2019-05-26\nv6.11.1:2019-06-21\nv6.11.2:2019-07-08\nv6.11.3:2019-07-22\nv6.11.4:2019-08-12\nv6.11.5:2019-08-23\nv6.12.0:2019-09-05\nv6.13.0:2019-11-01\nv6.14.0:2020-01-16\nv6.14.1:2020-01-27\nv6.15.0:2020-03-22\nv6.15.1:2020-04-08\nv6.15.2:2020-05-15\nv6.16.0:2020-08-01\nv6.16.1:2020-08-04\nv6.17.0:2020-10-19\nv6.17.1:2020-11-07\nv6.17.2:2020-11-14\nv6.17.3:2021-02-15\nv6.18.0:2021-05-05\nv6.18.1:2021-07-03\nv6.18.2:2021-07-19\nv6.18.3:2021-07-27\nv6.18.4:2021-09-06\nv6.18.5:2021-09-28\nv6.19.0:2022-01-08\nv6.19.1:2022-01-14\nv6.19.2:2022-02-14\nv6.19.3:2022-03-08\nv6.19.4:2022-04-05\nv6.2.0-beta:2018-07-12\nv6.2.1-beta:2018-07-17\nv6.2.2-beta:2018-07-18\nv6.2.3-beta:2018-07-19\nv6.20.0:2022-12-26\nv6.20.1:2023-02-08\nv6.21.0:2023-03-14\nv6.3.0-beta:2018-08-31\nv6.4.0-beta:2018-09-11\nv6.5.0-beta:2018-10-13\nv6.6.0-beta:2018-11-13\nv6.7.0-beta:2018-12-07\nv6.8.0-beta:2019-01-30\nv6.9.0:2019-02-26\nv6.9.1:2019-03-01"
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": "v1.0:2014-01-23\nv1.1:2014-02-27\nv1.2:2014-03-03\nv2.0:2014-07-09\nv2.1:2014-07-15\nv3.0:2014-07-23\nv3.1:2014-08-03\nv3.2:2014-08-04\nv3.3:2014-09-01\nv3.4:2014-09-09\nv4.0:2014-11-29\nv4.0-beta-1:2014-11-11\nv4.1:2014-12-21\nv4.2:2015-02-07\nv4.3:2015-05-03\nv4.4:2015-05-09\nv4.5:2015-06-10\nv4.6:2015-08-01\nv4.6.1:2015-08-02\nv5.0-beta-1:2015-05-31\nv5.0-beta-2:2015-07-10\nv5.0-beta-3:2015-07-25\nv5.0-beta-4:2015-07-27\nv5.0-beta-5:2015-08-10\nv5.0.0:2015-08-20\nv5.0.1:2015-08-24\nv5.0.2:2015-09-01\nv5.0.3:2015-09-19\nv5.0.4:2015-09-29\nv5.0.5:2015-10-30\nv5.0.6:2015-11-09\nv5.0.7:2015-11-25\nv5.0.8:2016-01-31\nv5.1.0:2016-02-14\nv5.1.0-beta.1:2016-02-01\nv5.1.0-beta.2:2016-02-06\nv5.1.1:2016-02-23\nv5.10.0:2017-05-20\nv5.10.1:2017-06-12\nv5.11.0:2017-06-25\nv5.11.1:2017-07-14\nv5.11.2:2017-10-17\nv5.12.0:2017-12-11\nv5.13.0:2018-01-19\nv5.13.1:2018-02-19\nv5.13.2:2018-06-01\nv5.13.3:2018-10-06\nv5.13.4:2018-12-04\nv5.13.5:2019-03-01\nv5.2.0:2016-04-16\nv5.3.0:2016-04-30\nv5.4.0:2016-05-06\nv5.5.0:2016-05-22\nv5.5.1:2016-06-06\nv5.6.0:2016-06-22\nv5.6.1:2016-06-24\nv5.6.2:2016-06-30\nv5.6.3:2016-07-19\nv5.6.4:2016-07-20\nv5.6.5:2016-08-15\nv5.6.6:2016-08-29\nv5.6.7:2016-09-20\nv5.7.0:2016-11-06\nv5.7.1:2016-11-13\nv5.7.2:2016-11-23\nv5.7.3:2016-12-10\nv5.8.0:2017-01-03\nv5.8.1:2017-01-15\nv5.8.2:2017-01-22\nv5.8.3:2017-02-11\nv5.8.4:2017-03-26\nv5.9.0:2017-04-24\nv6.0.0-beta:2018-06-07\nv6.0.1-beta:2018-06-11\nv6.1.0-beta:2018-07-02\nv6.10.0:2019-03-22\nv6.10.1:2019-04-23\nv6.11.0:2019-05-26\nv6.11.1:2019-06-21\nv6.11.2:2019-07-08\nv6.11.3:2019-07-22\nv6.11.4:2019-08-12\nv6.11.5:2019-08-23\nv6.12.0:2019-09-05\nv6.13.0:2019-11-01\nv6.14.0:2020-01-16\nv6.14.1:2020-01-27\nv6.15.0:2020-03-22\nv6.15.1:2020-04-08\nv6.15.2:2020-05-15\nv6.16.0:2020-08-01\nv6.16.1:2020-08-04\nv6.17.0:2020-10-19\nv6.17.1:2020-11-07\nv6.17.2:2020-11-14\nv6.17.3:2021-02-15\nv6.18.0:2021-05-05\nv6.18.1:2021-07-03\nv6.18.2:2021-07-19\nv6.18.3:2021-07-27\nv6.18.4:2021-09-06\nv6.18.5:2021-09-28\nv6.19.0:2022-01-08\nv6.19.1:2022-01-14\nv6.19.2:2022-02-14\nv6.19.3:2022-03-08\nv6.19.4:2022-04-05\nv6.2.0-beta:2018-07-12\nv6.2.1-beta:2018-07-17\nv6.2.2-beta:2018-07-18\nv6.2.3-beta:2018-07-19\nv6.20.0:2022-12-26\nv6.20.1:2023-02-08\nv6.21.0:2023-03-14\nv6.3.0-beta:2018-08-31\nv6.4.0-beta:2018-09-11\nv6.5.0-beta:2018-10-13\nv6.6.0-beta:2018-11-13\nv6.7.0-beta:2018-12-07\nv6.8.0-beta:2019-01-30\nv6.9.0:2019-02-26\nv6.9.1:2019-03-01"
        }
    },
    {
        "task_id": 40112,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023",
        "start_url_lite": "http://172.16.2.4:8023/wting/autojump/-/tags",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "List all tags in {{repository}} in the alphabetical order and show the date of the latest commit that each tag points to in UTC. Return 'N/A' if no tag exists. Output in the following format, each in a separate line-> (tag name):(yyyy-mm-dd)",
        "intent": "List all tags in autojump in the alphabetical order and show the date of the latest commit that each tag points to in UTC. Return 'N/A' if no tag exists. Output in the following format, each in a separate line-> (tag name):(yyyy-mm-dd)",
        "required_obs": "text",
        "type_main": "long-term",
        "description": "The agent should search for the appropriate repository with the search box by choosing the best keyword according to the description. It should navigate to the \"Tags\" page and check the updated time. The time should be modified to be UTC.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023",
            "start_url_lite": "http://172.16.2.4:8023/wting/autojump/-/tags",
            "repository": "autojump",
            "answer": "release-v1:2009-03-02\nrelease-v10:2010-06-22\nrelease-v11:2010-07-07\nrelease-v12:2010-08-25\nrelease-v13:2010-10-01\nrelease-v14:2010-12-03\nrelease-v15:2011-03-30\nrelease-v16:2011-07-28\nrelease-v17:2011-09-08\nrelease-v18:2011-11-18\nrelease-v19:2011-12-11\nrelease-v2:2009-04-17\nrelease-v20:2012-04-12\nrelease-v20.5:2012-06-16\nrelease-v20.6:2012-06-16\nrelease-v20.7:2012-06-16\nrelease-v20.8:2012-06-16\nrelease-v20.9:2012-06-16\nrelease-v21.0.2:2012-10-31\nrelease-v21.0.3:2012-11-01\nrelease-v21.0.5:2012-11-21\nrelease-v21.1.0:2012-11-22\nrelease-v21.1.2:2012-11-24\nrelease-v21.1.4:2012-12-15\nrelease-v21.2.0:2012-12-15\nrelease-v21.2.1:2012-12-17\nrelease-v21.3.0:2013-01-05\nrelease-v21.4.2:2013-02-01\nrelease-v21.5.1:2013-02-25\nrelease-v21.5.8:2013-04-29\nrelease-v21.6.8:2013-05-25\nrelease-v21.6.9:2013-05-29\nrelease-v21.7.1:2013-11-26\nrelease-v22.2.2:2014-12-16\nrelease-v22.2.4:2015-01-25\nrelease-v22.3.0:2016-02-02\nrelease-v22.3.1:2016-06-19\nrelease-v22.3.2:2016-06-22\nrelease-v22.3.3:2016-07-14\nrelease-v22.3.4:2016-07-14\nrelease-v22.3.5:2016-09-09\nrelease-v22.4.0:2016-09-30\nrelease-v22.4.1:2016-09-30\nrelease-v22.5.0:2016-10-01\nrelease-v22.5.1:2017-02-17\nrelease-v22.5.3:2018-09-09\nrelease-v3:2009-05-13\nrelease-v4:2009-05-14\nrelease-v5:2009-05-30\nrelease-v6:2009-09-16\nrelease-v7:2009-10-03\nrelease-v8:2010-01-26\nrelease-v9:2010-04-27",
            "difficulty": "hard"
        },
        "eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "exact_match": "release-v1:2009-03-02\nrelease-v10:2010-06-22\nrelease-v11:2010-07-07\nrelease-v12:2010-08-25\nrelease-v13:2010-10-01\nrelease-v14:2010-12-03\nrelease-v15:2011-03-30\nrelease-v16:2011-07-28\nrelease-v17:2011-09-08\nrelease-v18:2011-11-18\nrelease-v19:2011-12-11\nrelease-v2:2009-04-17\nrelease-v20:2012-04-12\nrelease-v20.5:2012-06-16\nrelease-v20.6:2012-06-16\nrelease-v20.7:2012-06-16\nrelease-v20.8:2012-06-16\nrelease-v20.9:2012-06-16\nrelease-v21.0.2:2012-10-31\nrelease-v21.0.3:2012-11-01\nrelease-v21.0.5:2012-11-21\nrelease-v21.1.0:2012-11-22\nrelease-v21.1.2:2012-11-24\nrelease-v21.1.4:2012-12-15\nrelease-v21.2.0:2012-12-15\nrelease-v21.2.1:2012-12-17\nrelease-v21.3.0:2013-01-05\nrelease-v21.4.2:2013-02-01\nrelease-v21.5.1:2013-02-25\nrelease-v21.5.8:2013-04-29\nrelease-v21.6.8:2013-05-25\nrelease-v21.6.9:2013-05-29\nrelease-v21.7.1:2013-11-26\nrelease-v22.2.2:2014-12-16\nrelease-v22.2.4:2015-01-25\nrelease-v22.3.0:2016-02-02\nrelease-v22.3.1:2016-06-19\nrelease-v22.3.2:2016-06-22\nrelease-v22.3.3:2016-07-14\nrelease-v22.3.4:2016-07-14\nrelease-v22.3.5:2016-09-09\nrelease-v22.4.0:2016-09-30\nrelease-v22.4.1:2016-09-30\nrelease-v22.5.0:2016-10-01\nrelease-v22.5.1:2017-02-17\nrelease-v22.5.3:2018-09-09\nrelease-v3:2009-05-13\nrelease-v4:2009-05-14\nrelease-v5:2009-05-30\nrelease-v6:2009-09-16\nrelease-v7:2009-10-03\nrelease-v8:2010-01-26\nrelease-v9:2010-04-27"
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": "release-v1:2009-03-02\nrelease-v10:2010-06-22\nrelease-v11:2010-07-07\nrelease-v12:2010-08-25\nrelease-v13:2010-10-01\nrelease-v14:2010-12-03\nrelease-v15:2011-03-30\nrelease-v16:2011-07-28\nrelease-v17:2011-09-08\nrelease-v18:2011-11-18\nrelease-v19:2011-12-11\nrelease-v2:2009-04-17\nrelease-v20:2012-04-12\nrelease-v20.5:2012-06-16\nrelease-v20.6:2012-06-16\nrelease-v20.7:2012-06-16\nrelease-v20.8:2012-06-16\nrelease-v20.9:2012-06-16\nrelease-v21.0.2:2012-10-31\nrelease-v21.0.3:2012-11-01\nrelease-v21.0.5:2012-11-21\nrelease-v21.1.0:2012-11-22\nrelease-v21.1.2:2012-11-24\nrelease-v21.1.4:2012-12-15\nrelease-v21.2.0:2012-12-15\nrelease-v21.2.1:2012-12-17\nrelease-v21.3.0:2013-01-05\nrelease-v21.4.2:2013-02-01\nrelease-v21.5.1:2013-02-25\nrelease-v21.5.8:2013-04-29\nrelease-v21.6.8:2013-05-25\nrelease-v21.6.9:2013-05-29\nrelease-v21.7.1:2013-11-26\nrelease-v22.2.2:2014-12-16\nrelease-v22.2.4:2015-01-25\nrelease-v22.3.0:2016-02-02\nrelease-v22.3.1:2016-06-19\nrelease-v22.3.2:2016-06-22\nrelease-v22.3.3:2016-07-14\nrelease-v22.3.4:2016-07-14\nrelease-v22.3.5:2016-09-09\nrelease-v22.4.0:2016-09-30\nrelease-v22.4.1:2016-09-30\nrelease-v22.5.0:2016-10-01\nrelease-v22.5.1:2017-02-17\nrelease-v22.5.3:2018-09-09\nrelease-v3:2009-05-13\nrelease-v4:2009-05-14\nrelease-v5:2009-05-30\nrelease-v6:2009-09-16\nrelease-v7:2009-10-03\nrelease-v8:2010-01-26\nrelease-v9:2010-04-27"
        }
    },
    {
        "task_id": 40113,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023",
        "start_url_lite": "http://172.16.2.4:8023/byteblaze/timeit/-/tags",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "List all tags in {{repository}} in the alphabetical order and show the date of the latest commit that each tag points to in UTC. Return 'N/A' if no tag exists. Output in the following format, each in a separate line-> (tag name):(yyyy-mm-dd)",
        "intent": "List all tags in my timeit project in the alphabetical order and show the date of the latest commit that each tag points to in UTC. Return 'N/A' if no tag exists. Output in the following format, each in a separate line-> (tag name):(yyyy-mm-dd)",
        "required_obs": "text",
        "type_main": "long-term",
        "description": "The agent should search for the appropriate repository with the search box by choosing the best keyword according to the description. It should navigate to the \"Tags\" page and check the updated time. The time should be modified to be UTC.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023",
            "start_url_lite": "http://172.16.2.4:8023/byteblaze/timeit/-/tags",
            "repository": "my timeit project",
            "answer": "N/A",
            "difficulty": "medium"
        },
        "eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "exact_match": "N/A"
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": "N/A"
        }
    },
    {
        "task_id": 40114,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023",
        "start_url_lite": "http://172.16.2.4:8023/auth0/angular-storage/-/tags",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "List all tags in {{repository}} in the alphabetical order and show the date of the latest commit that each tag points to in UTC. Return 'N/A' if no tag exists. Output in the following format, each in a separate line-> (tag name):(yyyy-mm-dd)",
        "intent": "List all tags in the angular-storage project by auth0 in the alphabetical order and show the date of the latest commit that each tag points to in UTC. Return 'N/A' if no tag exists. Output in the following format, each in a separate line-> (tag name):(yyyy-mm-dd)",
        "required_obs": "text",
        "type_main": "long-term",
        "description": "The agent should search for the appropriate repository with the search box by choosing the best keyword according to the description. It should navigate to the \"Tags\" page and check the updated time. The time should be modified to be UTC.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023",
            "start_url_lite": "http://172.16.2.4:8023/auth0/angular-storage/-/tags",
            "repository": "the angular-storage project by auth0",
            "answer": "0.0.1:2014-10-02\n0.0.10:2015-04-17\n0.0.11:2015-05-18\n0.0.12:2015-07-22\n0.0.13:2015-07-23\n0.0.14:2016-03-25\n0.0.15:2016-04-03\n0.0.3:2014-10-07\n0.0.4:2014-10-07\n0.0.5:2014-10-08\n0.0.6:2014-10-08\nv0.0.7:2014-11-20\nv0.0.8:2014-12-10\nv0.0.9:2014-12-10",
            "difficulty": "medium"
        },
        "eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "exact_match": "0.0.1:2014-10-02\n0.0.10:2015-04-17\n0.0.11:2015-05-18\n0.0.12:2015-07-22\n0.0.13:2015-07-23\n0.0.14:2016-03-25\n0.0.15:2016-04-03\n0.0.3:2014-10-07\n0.0.4:2014-10-07\n0.0.5:2014-10-08\n0.0.6:2014-10-08\nv0.0.7:2014-11-20\nv0.0.8:2014-12-10\nv0.0.9:2014-12-10"
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": "0.0.1:2014-10-02\n0.0.10:2015-04-17\n0.0.11:2015-05-18\n0.0.12:2015-07-22\n0.0.13:2015-07-23\n0.0.14:2016-03-25\n0.0.15:2016-04-03\n0.0.3:2014-10-07\n0.0.4:2014-10-07\n0.0.5:2014-10-08\n0.0.6:2014-10-08\nv0.0.7:2014-11-20\nv0.0.8:2014-12-10\nv0.0.9:2014-12-10"
        }
    },
    {
        "task_id": 40120,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023",
        "start_url_lite": "http://172.16.2.4:8023/opensourcediversity/opensourcediversity.org/-/branches/all",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "Show the list of branches in {{repository}} in descending order of the latest commit date. Output each branch name in a separate line.",
        "intent": "Show the list of branches in opensourcediversity.org repository in descending order of the latest commit date. Output each branch name in a separate line.",
        "required_obs": "any",
        "type_main": "long-term",
        "description": "The agent should search for the appropriate repository with the search box by choosing the best keyword according to the description. It should navigate to the \"Branches\" page and check the updated time.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023",
            "start_url_lite": "http://172.16.2.4:8023/opensourcediversity/opensourcediversity.org/-/branches/all",
            "repository": "opensourcediversity.org repository",
            "answer": "github/fork/PhuocOng/peterbranch\ngithub/fork/uixaadi/my_first_contribution\nmain\ngithub/fork/2201monesh/patch-1\njg-ahcatan-add-projects\ngithub/fork/Richie1136/richie1136\ngithub/fork/SANJAY072000/failing-html-checks-#123\ngithub/fork/mayuribotre15/main\ngithub/fork/siddhanth339/master\ngithub/fork/emmairwin/master\ngithub/fork/Ahcatan/master\ngithub/fork/kulendu/master\ngithub/fork/shub-garg/master\ngithub/fork/joelwass/twitterCardPic\npublications\nmore-projects\nfaq\ngithub/fork/bunnydays/faq\narticles",
            "difficulty": "medium"
        },
        "eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "exact_match": "github/fork/PhuocOng/peterbranch\ngithub/fork/uixaadi/my_first_contribution\nmain\ngithub/fork/2201monesh/patch-1\njg-ahcatan-add-projects\ngithub/fork/Richie1136/richie1136\ngithub/fork/SANJAY072000/failing-html-checks-#123\ngithub/fork/mayuribotre15/main\ngithub/fork/siddhanth339/master\ngithub/fork/emmairwin/master\ngithub/fork/Ahcatan/master\ngithub/fork/kulendu/master\ngithub/fork/shub-garg/master\ngithub/fork/joelwass/twitterCardPic\npublications\nmore-projects\nfaq\ngithub/fork/bunnydays/faq\narticles"
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": "github/fork/PhuocOng/peterbranch\ngithub/fork/uixaadi/my_first_contribution\nmain\ngithub/fork/2201monesh/patch-1\njg-ahcatan-add-projects\ngithub/fork/Richie1136/richie1136\ngithub/fork/SANJAY072000/failing-html-checks-#123\ngithub/fork/mayuribotre15/main\ngithub/fork/siddhanth339/master\ngithub/fork/emmairwin/master\ngithub/fork/Ahcatan/master\ngithub/fork/kulendu/master\ngithub/fork/shub-garg/master\ngithub/fork/joelwass/twitterCardPic\npublications\nmore-projects\nfaq\ngithub/fork/bunnydays/faq\narticles"
        }
    },
    {
        "task_id": 40121,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023",
        "start_url_lite": "http://172.16.2.4:8023/wting/autojump/-/branches/all",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "Show the list of branches in {{repository}} in descending order of the latest commit date. Output each branch name in a separate line.",
        "intent": "Show the list of branches in wting/autojump in descending order of the latest commit date. Output each branch name in a separate line.",
        "required_obs": "any",
        "type_main": "long-term",
        "description": "The agent should search for the appropriate repository with the search box by choosing the best keyword according to the description. It should navigate to the \"Branches\" page and check the updated time.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023",
            "start_url_lite": "http://172.16.2.4:8023/wting/autojump/-/branches/all",
            "repository": "wting/autojump",
            "answer": "github/fork/writeameer/master\ngithub/fork/Komi7/fix-git-clone-url\ngithub/fork/abubakrsiddq/repo-path-fix\ngithub/fork/geo7/patch-1\ngithub/fork/hustnzj/master\ngithub/fork/kianmeng/fix-typos\ngithub/fork/alanhoyle/master\ngithub/fork/opelr/557/support-for-initials\ngithub/fork/rico-chet/fix-duplicate-matches-with-legacy-py\nwting_default_python3\ngithub/fork/mattst88/mock\ngithub/fork/JS-Zheng/master\ngithub/fork/joebb97/master\ngithub/fork/DeepMechatronics/patch-1\ngithub/fork/faiz-crypto/patch-1\ngithub/fork/GlazerMann/patch-3\ngithub/fork/GlazerMann/patch-2\ngithub/fork/GlazerMann/patch-1\ngithub/fork/timgates42/bugfix_typo_requires\ngithub/fork/lxp521125/master\ngithub/fork/asellappen/master\ngithub/fork/mesmerx/master\ngithub/fork/maludwig/master\ngithub/fork/mbologna/patch-1\ngithub/fork/azriel91/feature/issue-356-support-git-bash-msysgit\ngithub/fork/ashwinvis/master\ngithub/fork/abravalheri/make-sh-file-posix\ngithub/fork/Tarik02/wsl-explorer\ngithub/fork/dalanicolai/patch-2\ngithub/fork/dalanicolai/patch-1\ngithub/fork/MrKriss/refactor-windows-tests\ngithub/fork/MrKriss/add-windows-ci-with-appveyor\ngithub/fork/MrKriss/master\ngithub/fork/floydpink/fix-for-windows\ngithub/fork/L-P/fix/child\ngithub/fork/wang-ye/patch-1\nmaster\ngithub/fork/eklitzke/master\ngithub/fork/orschiro/patch-1\ngithub/fork/LinuxMercedes/master\ngithub/fork/findstr/master\ngithub/fork/n4nagappan/master\ngithub/fork/pistole/tcsh\ngithub/fork/mqudsi/fish_no_dot\ngithub/fork/Vaelatern/VoidLinuxMention\ngithub/fork/kynan/patch-1\ngithub/fork/emanresusername/master\ngithub/fork/duganchen/master\ngithub/fork/cpmsmith/master\ngithub/fork/jared-hess/multi-dir-add\ngithub/fork/vkotovv/doc_fixes\ngithub/fork/ashwin/master\ngithub/fork/leni536/master\ngithub/fork/leonid-shevtsov/master\ngithub/fork/youtux/patch-1\ngithub/fork/grota/autocomplete_jc_jco",
            "difficulty": "hard"
        },
        "eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "exact_match": "github/fork/writeameer/master\ngithub/fork/Komi7/fix-git-clone-url\ngithub/fork/abubakrsiddq/repo-path-fix\ngithub/fork/geo7/patch-1\ngithub/fork/hustnzj/master\ngithub/fork/kianmeng/fix-typos\ngithub/fork/alanhoyle/master\ngithub/fork/opelr/557/support-for-initials\ngithub/fork/rico-chet/fix-duplicate-matches-with-legacy-py\nwting_default_python3\ngithub/fork/mattst88/mock\ngithub/fork/JS-Zheng/master\ngithub/fork/joebb97/master\ngithub/fork/DeepMechatronics/patch-1\ngithub/fork/faiz-crypto/patch-1\ngithub/fork/GlazerMann/patch-3\ngithub/fork/GlazerMann/patch-2\ngithub/fork/GlazerMann/patch-1\ngithub/fork/timgates42/bugfix_typo_requires\ngithub/fork/lxp521125/master\ngithub/fork/asellappen/master\ngithub/fork/mesmerx/master\ngithub/fork/maludwig/master\ngithub/fork/mbologna/patch-1\ngithub/fork/azriel91/feature/issue-356-support-git-bash-msysgit\ngithub/fork/ashwinvis/master\ngithub/fork/abravalheri/make-sh-file-posix\ngithub/fork/Tarik02/wsl-explorer\ngithub/fork/dalanicolai/patch-2\ngithub/fork/dalanicolai/patch-1\ngithub/fork/MrKriss/refactor-windows-tests\ngithub/fork/MrKriss/add-windows-ci-with-appveyor\ngithub/fork/MrKriss/master\ngithub/fork/floydpink/fix-for-windows\ngithub/fork/L-P/fix/child\ngithub/fork/wang-ye/patch-1\nmaster\ngithub/fork/eklitzke/master\ngithub/fork/orschiro/patch-1\ngithub/fork/LinuxMercedes/master\ngithub/fork/findstr/master\ngithub/fork/n4nagappan/master\ngithub/fork/pistole/tcsh\ngithub/fork/mqudsi/fish_no_dot\ngithub/fork/Vaelatern/VoidLinuxMention\ngithub/fork/kynan/patch-1\ngithub/fork/emanresusername/master\ngithub/fork/duganchen/master\ngithub/fork/cpmsmith/master\ngithub/fork/jared-hess/multi-dir-add\ngithub/fork/vkotovv/doc_fixes\ngithub/fork/ashwin/master\ngithub/fork/leni536/master\ngithub/fork/leonid-shevtsov/master\ngithub/fork/youtux/patch-1\ngithub/fork/grota/autocomplete_jc_jco"
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": "github/fork/writeameer/master\ngithub/fork/Komi7/fix-git-clone-url\ngithub/fork/abubakrsiddq/repo-path-fix\ngithub/fork/geo7/patch-1\ngithub/fork/hustnzj/master\ngithub/fork/kianmeng/fix-typos\ngithub/fork/alanhoyle/master\ngithub/fork/opelr/557/support-for-initials\ngithub/fork/rico-chet/fix-duplicate-matches-with-legacy-py\nwting_default_python3\ngithub/fork/mattst88/mock\ngithub/fork/JS-Zheng/master\ngithub/fork/joebb97/master\ngithub/fork/DeepMechatronics/patch-1\ngithub/fork/faiz-crypto/patch-1\ngithub/fork/GlazerMann/patch-3\ngithub/fork/GlazerMann/patch-2\ngithub/fork/GlazerMann/patch-1\ngithub/fork/timgates42/bugfix_typo_requires\ngithub/fork/lxp521125/master\ngithub/fork/asellappen/master\ngithub/fork/mesmerx/master\ngithub/fork/maludwig/master\ngithub/fork/mbologna/patch-1\ngithub/fork/azriel91/feature/issue-356-support-git-bash-msysgit\ngithub/fork/ashwinvis/master\ngithub/fork/abravalheri/make-sh-file-posix\ngithub/fork/Tarik02/wsl-explorer\ngithub/fork/dalanicolai/patch-2\ngithub/fork/dalanicolai/patch-1\ngithub/fork/MrKriss/refactor-windows-tests\ngithub/fork/MrKriss/add-windows-ci-with-appveyor\ngithub/fork/MrKriss/master\ngithub/fork/floydpink/fix-for-windows\ngithub/fork/L-P/fix/child\ngithub/fork/wang-ye/patch-1\nmaster\ngithub/fork/eklitzke/master\ngithub/fork/orschiro/patch-1\ngithub/fork/LinuxMercedes/master\ngithub/fork/findstr/master\ngithub/fork/n4nagappan/master\ngithub/fork/pistole/tcsh\ngithub/fork/mqudsi/fish_no_dot\ngithub/fork/Vaelatern/VoidLinuxMention\ngithub/fork/kynan/patch-1\ngithub/fork/emanresusername/master\ngithub/fork/duganchen/master\ngithub/fork/cpmsmith/master\ngithub/fork/jared-hess/multi-dir-add\ngithub/fork/vkotovv/doc_fixes\ngithub/fork/ashwin/master\ngithub/fork/leni536/master\ngithub/fork/leonid-shevtsov/master\ngithub/fork/youtux/patch-1\ngithub/fork/grota/autocomplete_jc_jco"
        }
    },
    {
        "task_id": 40122,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023",
        "start_url_lite": "http://172.16.2.4:8023/byteblaze/cloud-to-butt/-/branches/all",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "Show the list of branches in {{repository}} in descending order of the latest commit date. Output each branch name in a separate line.",
        "intent": "Show the list of branches in my cloud-to-butt project in descending order of the latest commit date. Output each branch name in a separate line.",
        "required_obs": "any",
        "type_main": "long-term",
        "description": "The agent should search for the appropriate repository with the search box by choosing the best keyword according to the description. It should navigate to the \"Branches\" page and check the updated time.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023",
            "start_url_lite": "http://172.16.2.4:8023/byteblaze/cloud-to-butt/-/branches/all",
            "repository": "my cloud-to-butt project",
            "answer": "master\ngithub/fork/RF-Nelson/patch-1\ngithub/fork/jandahl/master\ngithub/fork/mwhite/master",
            "difficulty": "medium"
        },
        "eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "exact_match": "master\ngithub/fork/RF-Nelson/patch-1\ngithub/fork/jandahl/master\ngithub/fork/mwhite/master"
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": "master\ngithub/fork/RF-Nelson/patch-1\ngithub/fork/jandahl/master\ngithub/fork/mwhite/master"
        }
    },
    {
        "task_id": 40123,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023",
        "start_url_lite": "http://172.16.2.4:8023/test123/boo/-/branches/all",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "Show the list of branches in {{repository}} in descending order of the latest commit date. Output each branch name in a separate line.",
        "intent": "Show the list of branches in boo project by test123 in descending order of the latest commit date. Output each branch name in a separate line.",
        "required_obs": "any",
        "type_main": "long-term",
        "description": "The agent should search for the appropriate repository with the search box by choosing the best keyword according to the description. It should navigate to the \"Branches\" page and check the updated time.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023",
            "start_url_lite": "http://172.16.2.4:8023/test123/boo/-/branches/all",
            "repository": "boo project by test123",
            "answer": "main",
            "difficulty": "medium"
        },
        "eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "exact_match": "main"
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": "main"
        }
    },
    {
        "task_id": 40124,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023",
        "start_url_lite": "http://172.16.2.4:8023/facebook/buck/-/branches/all",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "Show the list of branches in {{repository}} in descending order of the latest commit date. Output each branch name in a separate line.",
        "intent": "Show the list of branches in the buck project in descending order of the latest commit date. Output each branch name in a separate line.",
        "required_obs": "any",
        "type_main": "long-term",
        "description": "The agent should search for the appropriate repository with the search box by choosing the best keyword according to the description. It should navigate to the \"Branches\" page and check the updated time.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023",
            "start_url_lite": "http://172.16.2.4:8023/facebook/buck/-/branches/all",
            "repository": "the buck project",
            "answer": "nc/test-circle-ci\nnc/fix-m1\ndev\nmain\ngithub/fork/EdTice/patch-2\ngithub/fork/marcesengel/fix/m1\ngithub/fork/Solace-Studios/patch-M1_aarch64_Support\ngithub/fork/nmcardoso/update-copyright\ngithub/fork/egpast/dev\ngithub/fork/mdzyuba/tools_import_deps\nsource-db\ngithub/fork/adolfojunior/export-D35240414-to-dev\ngithub/fork/patosai/main\ngh-pages\ngithub/fork/mikekap/patch-5\ncircleci-editor/969/main\ngithub/fork/cortinico/patch-1\ngithub/fork/yifuwang/export-D31106794-to-dev\ngithub/fork/lujiefsi/MovePythonWhlDataStep\ngithub/fork/yifuwang/export-D30802446-to-dev\ngithub/fork/R1kk3r/support_ndk_22\ngithub/fork/Lcsmarcal/feature/xcframework\ngithub/fork/alekseevpg/change-default-umbrella-header\ngithub/fork/yanks/jforbes-xcodeproj-2\ngithub/fork/yanks/jforbes-xcodeproj-3\ngithub/fork/yanks/jforbes-xcodeproj-1\ngithub/fork/yanks/jforbes-skip-appex-copy\ngithub/fork/yanks/jforbes-resources-from-deps\ngithub/fork/SiddhantRanade/patch-1\nbrianduff-patch-1\nclairehjk-patch-1\noss_fix_non_predexed_builds",
            "difficulty": "hard"
        },
        "eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "exact_match": "nc/test-circle-ci\nnc/fix-m1\ndev\nmain\ngithub/fork/EdTice/patch-2\ngithub/fork/marcesengel/fix/m1\ngithub/fork/Solace-Studios/patch-M1_aarch64_Support\ngithub/fork/nmcardoso/update-copyright\ngithub/fork/egpast/dev\ngithub/fork/mdzyuba/tools_import_deps\nsource-db\ngithub/fork/adolfojunior/export-D35240414-to-dev\ngithub/fork/patosai/main\ngh-pages\ngithub/fork/mikekap/patch-5\ncircleci-editor/969/main\ngithub/fork/cortinico/patch-1\ngithub/fork/yifuwang/export-D31106794-to-dev\ngithub/fork/lujiefsi/MovePythonWhlDataStep\ngithub/fork/yifuwang/export-D30802446-to-dev\ngithub/fork/R1kk3r/support_ndk_22\ngithub/fork/Lcsmarcal/feature/xcframework\ngithub/fork/alekseevpg/change-default-umbrella-header\ngithub/fork/yanks/jforbes-xcodeproj-2\ngithub/fork/yanks/jforbes-xcodeproj-3\ngithub/fork/yanks/jforbes-xcodeproj-1\ngithub/fork/yanks/jforbes-skip-appex-copy\ngithub/fork/yanks/jforbes-resources-from-deps\ngithub/fork/SiddhantRanade/patch-1\nbrianduff-patch-1\nclairehjk-patch-1\noss_fix_non_predexed_builds"
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": "nc/test-circle-ci\nnc/fix-m1\ndev\nmain\ngithub/fork/EdTice/patch-2\ngithub/fork/marcesengel/fix/m1\ngithub/fork/Solace-Studios/patch-M1_aarch64_Support\ngithub/fork/nmcardoso/update-copyright\ngithub/fork/egpast/dev\ngithub/fork/mdzyuba/tools_import_deps\nsource-db\ngithub/fork/adolfojunior/export-D35240414-to-dev\ngithub/fork/patosai/main\ngh-pages\ngithub/fork/mikekap/patch-5\ncircleci-editor/969/main\ngithub/fork/cortinico/patch-1\ngithub/fork/yifuwang/export-D31106794-to-dev\ngithub/fork/lujiefsi/MovePythonWhlDataStep\ngithub/fork/yifuwang/export-D30802446-to-dev\ngithub/fork/R1kk3r/support_ndk_22\ngithub/fork/Lcsmarcal/feature/xcframework\ngithub/fork/alekseevpg/change-default-umbrella-header\ngithub/fork/yanks/jforbes-xcodeproj-2\ngithub/fork/yanks/jforbes-xcodeproj-3\ngithub/fork/yanks/jforbes-xcodeproj-1\ngithub/fork/yanks/jforbes-skip-appex-copy\ngithub/fork/yanks/jforbes-resources-from-deps\ngithub/fork/SiddhantRanade/patch-1\nbrianduff-patch-1\nclairehjk-patch-1\noss_fix_non_predexed_builds"
        }
    },
    {
        "task_id": 40130,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023",
        "start_url_lite": "http://172.16.2.4:8023/facebook/create-react-app/-/commits/main",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "Calculate the ratio of the number of commits in {{repository}} that contain {{keyword}} in the commit message. Round the ratio so that the output would be like '14.2%'.",
        "intent": "Calculate the ratio of the number of commits in the Create React App repository that contain react in the commit message. Round the ratio so that the output would be like '14.2%'.",
        "required_obs": "any",
        "type_main": "long-term",
        "type_sub": "calc",
        "description": "The agent should search for the appropriate repository with the search box by choosing the best keyword according to the description. It should navigate to the \"Commits\" page and check the commit messages for all commits.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023",
            "start_url_lite": "http://172.16.2.4:8023/facebook/create-react-app/-/commits/main",
            "repository": "the Create React App repository",
            "keyword": "react",
            "answer": "13.4%",
            "difficulty": "hard"
        },
        "eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "exact_match": "13.4%"
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": "13.4%"
        }
    },
    {
        "task_id": 40131,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023",
        "start_url_lite": "http://172.16.2.4:8023/vinta/awesome-python/-/commits/master",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "Calculate the ratio of the number of commits in {{repository}} that contain {{keyword}} in the commit message. Round the ratio so that the output would be like '14.2%'.",
        "intent": "Calculate the ratio of the number of commits in vinta/awesome-python that contain py in the commit message. Round the ratio so that the output would be like '14.2%'.",
        "required_obs": "any",
        "type_main": "long-term",
        "type_sub": "calc",
        "description": "The agent should search for the appropriate repository with the search box by choosing the best keyword according to the description. It should navigate to the \"Commits\" page and check the commit messages for all commits.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023",
            "start_url_lite": "http://172.16.2.4:8023/vinta/awesome-python/-/commits/master",
            "repository": "vinta/awesome-python",
            "keyword": "py",
            "answer": "23.5%",
            "difficulty": "hard"
        },
        "eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "exact_match": "23.5%"
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": "23.5%"
        }
    },
    {
        "task_id": 40132,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023",
        "start_url_lite": "http://172.16.2.4:8023/geeeeeeeeek/electronic-wechat/-/commits/master",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "Calculate the ratio of the number of commits in {{repository}} that contain {{keyword}} in the commit message. Round the ratio so that the output would be like '14.2%'.",
        "intent": "Calculate the ratio of the number of commits in the repository for a better WeChat that contain chat in the commit message. Round the ratio so that the output would be like '14.2%'.",
        "required_obs": "any",
        "type_main": "long-term",
        "type_sub": "calc",
        "description": "The agent should search for the appropriate repository with the search box by choosing the best keyword according to the description. It should navigate to the \"Commits\" page and check the commit messages for all commits.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023",
            "start_url_lite": "http://172.16.2.4:8023/geeeeeeeeek/electronic-wechat/-/commits/master",
            "repository": "the repository for a better WeChat",
            "keyword": "chat",
            "answer": "5.5%",
            "difficulty": "hard"
        },
        "eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "exact_match": "5.5%"
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": "5.5%"
        }
    },
    {
        "task_id": 40133,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023",
        "start_url_lite": "http://172.16.2.4:8023/thoughtbot/administrate/-/commits/main",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "Calculate the ratio of the number of commits in {{repository}} that contain {{keyword}} in the commit message. Round the ratio so that the output would be like '14.2%'.",
        "intent": "Calculate the ratio of the number of commits in the administrate project by thoughtbot, inc. that contain bump in the commit message. Round the ratio so that the output would be like '14.2%'.",
        "required_obs": "any",
        "type_main": "long-term",
        "type_sub": "calc",
        "description": "The agent should search for the appropriate repository with the search box by choosing the best keyword according to the description. It should navigate to the \"Commits\" page and check the commit messages for all commits.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023",
            "start_url_lite": "http://172.16.2.4:8023/thoughtbot/administrate/-/commits/main",
            "repository": "the administrate project by thoughtbot, inc.",
            "keyword": "bump",
            "answer": "25.0%",
            "difficulty": "hard"
        },
        "eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "exact_match": "25.0%"
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": "25.0%"
        }
    },
    {
        "task_id": 40134,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023",
        "start_url_lite": "http://172.16.2.4:8023/byteblaze/solarized-prism-theme/-/commits/master",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "Calculate the ratio of the number of commits in {{repository}} that contain {{keyword}} in the commit message. Round the ratio so that the output would be like '14.2%'.",
        "intent": "Calculate the ratio of the number of commits in my project for a solarized theme for prism.js that contain update in the commit message. Round the ratio so that the output would be like '14.2%'.",
        "required_obs": "any",
        "type_main": "long-term",
        "type_sub": "calc",
        "description": "The agent should search for the appropriate repository with the search box by choosing the best keyword according to the description. It should navigate to the \"Commits\" page and check the commit messages for all commits.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023",
            "start_url_lite": "http://172.16.2.4:8023/byteblaze/solarized-prism-theme/-/commits/master",
            "repository": "my project for a solarized theme for prism.js",
            "keyword": "update",
            "answer": "42.9%",
            "difficulty": "medium"
        },
        "eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "exact_match": "42.9%"
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": "42.9%"
        }
    },
    {
        "task_id": 40140,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023",
        "start_url_lite": "http://172.16.2.4:8023/facebook/create-react-app/-/commits/main",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "Identify the most active contributor in {{repository}} {{date}} and show the number of commits during that period. Show the results in the following format: (contributor name), (number of commits) commits",
        "intent": "Identify the most active contributor in facebook/create-react-app during 2021 and 2022 and show the number of commits during that period. Show the results in the following format: (contributor name), (number of commits) commits",
        "required_obs": "any",
        "type_main": "massive_memory",
        "type_sub": "long-term",
        "description": "The agent should search for the appropriate repository with the search box by choosing the best keyword according to the description. It should navigate to the \"Commits\" page and check the author for the commits within the specified timeframe.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023",
            "start_url_lite": "http://172.16.2.4:8023/facebook/create-react-app/-/commits/main",
            "repository": "facebook/create-react-app",
            "date": "during 2021 and 2022",
            "enddate": "2022",
            "answer": "Ian Sutherland, 21 commits",
            "difficulty": "hard"
        },
        "eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "exact_match": "Ian Sutherland, 21 commits"
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": "Ian Sutherland, 21 commits"
        }
    },
    {
        "task_id": 40141,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023",
        "start_url_lite": "http://172.16.2.4:8023/byteblaze/solarized-prism-theme/-/commits/master",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "Identify the most active contributor in {{repository}} {{date}} and show the number of commits during that period. Show the results in the following format: (contributor name), (number of commits) commits",
        "intent": "Identify the most active contributor in my project for a solarized theme for prism.js between 2010 and 2015 and show the number of commits during that period. Show the results in the following format: (contributor name), (number of commits) commits",
        "required_obs": "any",
        "type_main": "massive_memory",
        "type_sub": "long-term",
        "description": "The agent should search for the appropriate repository with the search box by choosing the best keyword according to the description. It should navigate to the \"Commits\" page and check the author for the commits within the specified timeframe.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023",
            "start_url_lite": "http://172.16.2.4:8023/byteblaze/solarized-prism-theme/-/commits/master",
            "repository": "my project for a solarized theme for prism.js",
            "date": "between 2010 and 2015",
            "answer": "小子欠扁, 4 commits",
            "difficulty": "medium"
        },
        "eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "exact_match": "小子欠扁, 4 commits"
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": "小子欠扁, 4 commits"
        }
    },
    {
        "task_id": 40142,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023",
        "start_url_lite": "http://172.16.2.4:8023/a11yproject/a11yproject.com/-/commits/main",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "Identify the most active contributor in {{repository}} {{date}} and show the number of commits during that period. Show the results in the following format: (contributor name), (number of commits) commits",
        "intent": "Identify the most active contributor in The A11Y Project from August 2022 and February 2023 and show the number of commits during that period. Show the results in the following format: (contributor name), (number of commits) commits",
        "required_obs": "any",
        "type_main": "massive_memory",
        "type_sub": "long-term",
        "description": "The agent should search for the appropriate repository with the search box by choosing the best keyword according to the description. It should navigate to the \"Commits\" page and check the author for the commits within the specified timeframe.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023",
            "start_url_lite": "http://172.16.2.4:8023/a11yproject/a11yproject.com/-/commits/main",
            "repository": "The A11Y Project",
            "date": "from August 2022 and February 2023",
            "answer": "Eric Bailey, 36 commits",
            "difficulty": "hard"
        },
        "eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "exact_match": "Eric Bailey, 36 commits"
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": "Eric Bailey, 36 commits"
        }
    },
    {
        "task_id": 40143,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023",
        "start_url_lite": "http://172.16.2.4:8023/cppmap/cppmap.docs/-/commits/master",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "Identify the most active contributor in {{repository}} {{date}} and show the number of commits during that period. Show the results in the following format: (contributor name), (number of commits) commits",
        "intent": "Identify the most active contributor in the reposotiry for C++ の歩き方 during the latter half of 2022 and show the number of commits during that period. Show the results in the following format: (contributor name), (number of commits) commits",
        "required_obs": "any",
        "type_main": "massive_memory",
        "type_sub": "long-term",
        "description": "The agent should search for the appropriate repository with the search box by choosing the best keyword according to the description. It should navigate to the \"Commits\" page and check the author for the commits within the specified timeframe.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023",
            "start_url_lite": "http://172.16.2.4:8023/cppmap/cppmap.docs/-/commits/master",
            "repository": "the reposotiry for C++ の歩き方",
            "date": "during the latter half of 2022",
            "answer": "Ryo Suzuki, 2 commits",
            "difficulty": "medium"
        },
        "eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "exact_match": "Ryo Suzuki, 2 commits"
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": "Ryo Suzuki, 2 commits"
        }
    },
    {
        "task_id": 40144,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023",
        "start_url_lite": "http://172.16.2.4:8023/root/metaseq/-/commits/main",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "Identify the most active contributor in {{repository}} {{date}} and show the number of commits during that period. Show the results in the following format: (contributor name), (number of commits) commits",
        "intent": "Identify the most active contributor in the repo for external large-scale work by the administrator until 2022 and show the number of commits during that period. Show the results in the following format: (contributor name), (number of commits) commits",
        "required_obs": "any",
        "type_main": "massive_memory",
        "type_sub": "long-term",
        "description": "The agent should search for the appropriate repository with the search box by choosing the best keyword according to the description. It should navigate to the \"Commits\" page and check the author for the commits within the specified timeframe.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023",
            "start_url_lite": "http://172.16.2.4:8023/root/metaseq/-/commits/main",
            "repository": "the repo for external large-scale work by the administrator",
            "date": "until 2022",
            "answer": "Susan Zhang, 64 commits",
            "difficulty": "hard"
        },
        "eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "exact_match": "Susan Zhang, 64 commits"
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": "Susan Zhang, 64 commits"
        }
    },
    {
        "task_id": 40150,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023",
        "start_url_lite": "http://172.16.2.4:8023/users/abisubramanya27",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "Generate a JSON object that maps each user's ID to the total number of stars they have received for their personal projects. The target users are {{user1}}, {{user2}}, {{user3}}, {{user4}}, and {{user5}}. The output must be a single-line JSON object with no unnecessary spaces or newlines, and the User IDs must be sorted in ascending order. For example: {123:10,1012:7,3023:15,4001:3,5000:8}.",
        "intent": "Generate a JSON object that maps each user's ID to the total number of stars they have received for their personal projects. The target users are Abishek S, Byte Blaze, Meta, Primer, and Karl Kroening. The output must be a single-line JSON object with no unnecessary spaces or newlines, and the User IDs must be sorted in ascending order. For example: {123:10,1012:7,3023:15,4001:3,5000:8}.",
        "required_obs": "any",
        "type_main": "long-term",
        "type_sub": "calc",
        "description": "Access each user's profile page and check their user ID and the number of stars they have received.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023",
            "start_url_lite": "http://172.16.2.4:8023/users/abisubramanya27",
            "user1": "Abishek S",
            "user2": "Byte Blaze",
            "user3": "Meta",
            "user4": "Primer",
            "user5": "Karl Kroening",
            "total_star": "{5:0,439:86,1553:51,2330:18,2367:21}",
            "memo1": "Abishek S, 5, 0",
            "memo2": "Byte Blaze, 2330, 18",
            "memo3": "Meta, 439, 86",
            "memo4": "Primer, 2367, 21",
            "memo5": "Karl Kroening, 1553, 51",
            "difficulty": "hard"
        },
        "eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "exact_match": "{5:0,439:86,1553:51,2330:18,2367:21}"
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": "{5:0,439:86,1553:51,2330:18,2367:21}"
        }
    },
    {
        "task_id": 40151,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023",
        "start_url_lite": "http://172.16.2.4:8023/users/mk-j",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "Generate a JSON object that maps each user's ID to the total number of stars they have received for their personal projects. The target users are {{user1}}, {{user2}}, {{user3}}, {{user4}}, and {{user5}}. The output must be a single-line JSON object with no unnecessary spaces or newlines, and the User IDs must be sorted in ascending order. For example: {123:10,1012:7,3023:15,4001:3,5000:8}.",
        "intent": "Generate a JSON object that maps each user's ID to the total number of stars they have received for their personal projects. The target users are mk-j, Koushik Dutta, Erik Linder-Norén, thoughtbot, inc., and Keycloak. The output must be a single-line JSON object with no unnecessary spaces or newlines, and the User IDs must be sorted in ascending order. For example: {123:10,1012:7,3023:15,4001:3,5000:8}.",
        "required_obs": "any",
        "type_main": "long-term",
        "type_sub": "calc",
        "description": "Access each user's profile page and check their user ID and the number of stars they have received.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023",
            "start_url_lite": "http://172.16.2.4:8023/users/mk-j",
            "user1": "mk-j",
            "user2": "Koushik Dutta",
            "user3": "Erik Linder-Norén",
            "user4": "thoughtbot, inc.",
            "user5": "Keycloak",
            "total_star": "{311:45,830:47,1097:44,1847:43,1912:46}",
            "memo1": "mk-j, 830, 47",
            "memo2": "Koushik Dutta, 1912, 46",
            "memo3": "Erik Linder-Norén, 311, 45",
            "memo4": "thoughtbot, inc., 1097, 44",
            "memo5": "Keycloak, 1847, 43",
            "difficulty": "hard"
        },
        "eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "exact_match": "{311:45,830:47,1097:44,1847:43,1912:46}"
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": "{311:45,830:47,1097:44,1847:43,1912:46}"
        }
    },
    {
        "task_id": 40152,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023",
        "start_url_lite": "http://172.16.2.4:8023/users/OpenAPITools",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "Generate a JSON object that maps each user's ID to the total number of stars they have received for their personal projects. The target users are {{user1}}, {{user2}}, {{user3}}, {{user4}}, and {{user5}}. The output must be a single-line JSON object with no unnecessary spaces or newlines, and the User IDs must be sorted in ascending order. For example: {123:10,1012:7,3023:15,4001:3,5000:8}.",
        "intent": "Generate a JSON object that maps each user's ID to the total number of stars they have received for their personal projects. The target users are OpenAPI Tools, William Ting, http ... PARTY!, Arachni - Web Application Security Scanner Framework, and Yue Zhao. The output must be a single-line JSON object with no unnecessary spaces or newlines, and the User IDs must be sorted in ascending order. For example: {123:10,1012:7,3023:15,4001:3,5000:8}.",
        "required_obs": "any",
        "type_main": "long-term",
        "type_sub": "calc",
        "description": "Access each user's profile page and check their user ID and the number of stars they have received.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023",
            "start_url_lite": "http://172.16.2.4:8023/users/OpenAPITools",
            "user1": "OpenAPI Tools",
            "user2": "William Ting",
            "user3": "http ... PARTY!",
            "user4": "Arachni - Web Application Security Scanner Framework",
            "user5": "Yue Zhao",
            "total_star": "{391:42,1044:34,1213:38,1604:42,1759:41}",
            "memo1": "OpenAPI Tools, 391, 42",
            "memo2": "William Ting, 1604, 42",
            "memo3": "http ... PARTY!, 1213, 38",
            "memo4": "Arachni - Web Application Security Scanner Framework, 1044, 34",
            "memo5": "Yue Zhao, 1759, 41",
            "difficulty": "hard"
        },
        "eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "exact_match": "{391:42,1044:34,1213:38,1604:42,1759:41}"
            },
            "reference_url": "",
            "program_html": [],
            "string_note": "",
            "reference_answer_raw_annotation": "{391:42,1044:34,1213:38,1604:42,1759:41}"
        }
    },
    {
        "task_id": 40160,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023",
        "start_url_lite": "http://172.16.2.4:8023/a11yproject/a11yproject.com/-/issues",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "Count the number of open issues that have at least {{lowerbound}} comments in {{project}}. Output the count as a single integer with no extra text, spaces, or formatting.",
        "intent": "Count the number of open issues that have at least 5 comments in a11yproject/a11yproject.com. Output the count as a single integer with no extra text, spaces, or formatting.",
        "required_obs": "any",
        "type_main": "long-term",
        "description": "Access the issues page of the project, and count the number of open issues that satisfy the condition. Increasing the number of items displayed on a screen to 100 reduces the number of steps required to complete a task.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023",
            "start_url_lite": "http://172.16.2.4:8023/a11yproject/a11yproject.com/-/issues",
            "project": "a11yproject/a11yproject.com",
            "lowerbound": "5",
            "issues_count": "14",
            "difficulty": "medium"
        },
        "eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "exact_match": "14"
            },
            "reference_url": "",
            "program_html": [],
            "string_note": ""
        }
    },
    {
        "task_id": 40161,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023",
        "start_url_lite": "http://172.16.2.4:8023/root/metaseq/-/issues",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "Count the number of open issues that have at least {{lowerbound}} comments in {{project}}. Output the count as a single integer with no extra text, spaces, or formatting.",
        "intent": "Count the number of open issues that have at least 2 comments in metaseq. Output the count as a single integer with no extra text, spaces, or formatting.",
        "required_obs": "any",
        "type_main": "long-term",
        "description": "Access the issues page of the project, and count the number of open issues that satisfy the condition. Increasing the number of items displayed on a screen to 100 reduces the number of steps required to complete a task.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023",
            "start_url_lite": "http://172.16.2.4:8023/root/metaseq/-/issues",
            "project": "metaseq",
            "lowerbound": "2",
            "issues_count": "38",
            "difficulty": "medium"
        },
        "eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "exact_match": "38"
            },
            "reference_url": "",
            "program_html": [],
            "string_note": ""
        }
    },
    {
        "task_id": 40162,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023",
        "start_url_lite": "http://172.16.2.4:8023/MozillaFestival/mozfest-program-2018/-/issues",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "Count the number of open issues that have at least {{lowerbound}} comments in {{project}}. Output the count as a single integer with no extra text, spaces, or formatting.",
        "intent": "Count the number of open issues that have at least 1 comments in mozfest-program-2018. Output the count as a single integer with no extra text, spaces, or formatting.",
        "required_obs": "any",
        "type_main": "long-term",
        "description": "Access the issues page of the project, and count the number of open issues that satisfy the condition. Increasing the number of items displayed on a screen to 100 reduces the number of steps required to complete a task.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023",
            "start_url_lite": "http://172.16.2.4:8023/MozillaFestival/mozfest-program-2018/-/issues",
            "project": "mozfest-program-2018",
            "lowerbound": "1",
            "issues_count": "23",
            "difficulty": "hard"
        },
        "eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "exact_match": "23"
            },
            "reference_url": "",
            "program_html": [],
            "string_note": ""
        }
    },
    {
        "task_id": 40163,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023",
        "start_url_lite": "http://172.16.2.4:8023/youfou/wxpy/-/issues",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "Count the number of open issues that have at least {{lowerbound}} comments in {{project}}. Output the count as a single integer with no extra text, spaces, or formatting.",
        "intent": "Count the number of open issues that have at least 2 comments in wxpy. Output the count as a single integer with no extra text, spaces, or formatting.",
        "required_obs": "any",
        "type_main": "long-term",
        "description": "Access the issues page of the project, and count the number of open issues that satisfy the condition. Increasing the number of items displayed on a screen to 100 reduces the number of steps required to complete a task.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023",
            "start_url_lite": "http://172.16.2.4:8023/youfou/wxpy/-/issues",
            "project": "wxpy",
            "lowerbound": "2",
            "issues_count": "132",
            "difficulty": "hard"
        },
        "eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "exact_match": "132"
            },
            "reference_url": "",
            "program_html": [],
            "string_note": ""
        }
    },
    {
        "task_id": 40164,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023",
        "start_url_lite": "http://172.16.2.4:8023/zhongyang219/TrafficMonitor/-/issues",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "Count the number of open issues that have at least {{lowerbound}} comments in {{project}}. Output the count as a single integer with no extra text, spaces, or formatting.",
        "intent": "Count the number of open issues that have at least 2 comments in TrafficMonitor. Output the count as a single integer with no extra text, spaces, or formatting.",
        "required_obs": "any",
        "type_main": "long-term",
        "description": "Access the issues page of the project, and count the number of open issues that satisfy the condition. Increasing the number of items displayed on a screen to 100 reduces the number of steps required to complete a task.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023",
            "start_url_lite": "http://172.16.2.4:8023/zhongyang219/TrafficMonitor/-/issues",
            "project": "TrafficMonitor",
            "lowerbound": "2",
            "issues_count": "86",
            "difficulty": "hard"
        },
        "eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "exact_match": "86"
            },
            "reference_url": "",
            "program_html": [],
            "string_note": ""
        }
    },
    {
        "task_id": 40170,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023",
        "start_url_lite": "http://172.16.2.4:8023/a11yproject/a11yproject.com/-/issues",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "Generate a JSON object mapping each label to the number of open issues in {{project}}. Include only labels that have at least one open issue. The output must be a single-line JSON object with no unnecessary spaces or newlines. Labels must be sorted in ascending order based on ASCII values. For example: {\"bug\":5,\"documentation\":2,\"enhancement\":3}",
        "intent": "Generate a JSON object mapping each label to the number of open issues in a11yproject/a11yproject.com. Include only labels that have at least one open issue. The output must be a single-line JSON object with no unnecessary spaces or newlines. Labels must be sorted in ascending order based on ASCII values. For example: {\"bug\":5,\"documentation\":2,\"enhancement\":3}",
        "required_obs": "any",
        "type_main": "long-term",
        "description": "Access the issues page of the project, and count the number of open issues for each label. Increasing the number of items displayed on a screen to 100 reduces the number of steps required to complete a task.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023",
            "start_url_lite": "http://172.16.2.4:8023/a11yproject/a11yproject.com/-/issues",
            "project": "a11yproject/a11yproject.com",
            "issue_counts": "{\"accessibility\":3,\"administration\":1,\"article audit\":3,\"bug\":3,\"checklist\":2,\"claimed\":22,\"content\":8,\"data\":1,\"design\":5,\"eleventy\":3,\"enhancement\":4,\"feature\":4,\"good first issue\":4,\"gulp\":1,\"help wanted\":8,\"idea\":3,\"javascript\":2,\"markup\":1,\"node\":1,\"post\":13,\"question\":1,\"redesign\":2,\"resource\":2,\"styling\":3}",
            "difficulty": "hard"
        },
        "eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "exact_match": "{\"accessibility\":3,\"administration\":1,\"article audit\":3,\"bug\":3,\"checklist\":2,\"claimed\":22,\"content\":8,\"data\":1,\"design\":5,\"eleventy\":3,\"enhancement\":4,\"feature\":4,\"good first issue\":4,\"gulp\":1,\"help wanted\":8,\"idea\":3,\"javascript\":2,\"markup\":1,\"node\":1,\"post\":13,\"question\":1,\"redesign\":2,\"resource\":2,\"styling\":3}"
            },
            "reference_url": "",
            "program_html": [],
            "string_note": ""
        }
    },
    {
        "task_id": 40171,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023",
        "start_url_lite": "http://172.16.2.4:8023/root/metaseq/-/issues",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "Generate a JSON object mapping each label to the number of open issues in {{project}}. Include only labels that have at least one open issue. The output must be a single-line JSON object with no unnecessary spaces or newlines. Labels must be sorted in ascending order based on ASCII values. For example: {\"bug\":5,\"documentation\":2,\"enhancement\":3}",
        "intent": "Generate a JSON object mapping each label to the number of open issues in metaseq. Include only labels that have at least one open issue. The output must be a single-line JSON object with no unnecessary spaces or newlines. Labels must be sorted in ascending order based on ASCII values. For example: {\"bug\":5,\"documentation\":2,\"enhancement\":3}",
        "required_obs": "any",
        "type_main": "long-term",
        "description": "Access the issues page of the project, and count the number of open issues for each label. Increasing the number of items displayed on a screen to 100 reduces the number of steps required to complete a task.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023",
            "start_url_lite": "http://172.16.2.4:8023/root/metaseq/-/issues",
            "project": "metaseq",
            "issue_counts": "{\"api\":2,\"better-eng\":27,\"bug\":31,\"checkpointing\":2,\"cleanup\":9,\"config\":6,\"enhancement\":29,\"eval\":1,\"good first issue\":8,\"question\":17,\"telemetry\":3,\"test-coverage\":3}",
            "difficulty": "hard"
        },
        "eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "exact_match": "{\"api\":2,\"better-eng\":27,\"bug\":31,\"checkpointing\":2,\"cleanup\":9,\"config\":6,\"enhancement\":29,\"eval\":1,\"good first issue\":8,\"question\":17,\"telemetry\":3,\"test-coverage\":3}"
            },
            "reference_url": "",
            "program_html": [],
            "string_note": ""
        }
    },
    {
        "task_id": 40172,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023",
        "start_url_lite": "http://172.16.2.4:8023/youfou/wxpy/-/issues",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "Generate a JSON object mapping each label to the number of open issues in {{project}}. Include only labels that have at least one open issue. The output must be a single-line JSON object with no unnecessary spaces or newlines. Labels must be sorted in ascending order based on ASCII values. For example: {\"bug\":5,\"documentation\":2,\"enhancement\":3}",
        "intent": "Generate a JSON object mapping each label to the number of open issues in wxpy. Include only labels that have at least one open issue. The output must be a single-line JSON object with no unnecessary spaces or newlines. Labels must be sorted in ascending order based on ASCII values. For example: {\"bug\":5,\"documentation\":2,\"enhancement\":3}",
        "required_obs": "any",
        "type_main": "long-term",
        "description": "Access the issues page of the project, and count the number of open issues for each label. Increasing the number of items displayed on a screen to 100 reduces the number of steps required to complete a task.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023",
            "start_url_lite": "http://172.16.2.4:8023/youfou/wxpy/-/issues",
            "project": "wxpy",
            "issue_counts": "{\"bug\":1,\"enhancement\":3,\"new-core\":1,\"question\":1}",
            "difficulty": "hard"
        },
        "eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "exact_match": "{\"bug\":1,\"enhancement\":3,\"new-core\":1,\"question\":1}"
            },
            "reference_url": "",
            "program_html": [],
            "string_note": ""
        }
    },
    {
        "task_id": 40173,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023",
        "start_url_lite": "http://172.16.2.4:8023/wting/autojump/-/issues",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "Generate a JSON object mapping each label to the number of open issues in {{project}}. Include only labels that have at least one open issue. The output must be a single-line JSON object with no unnecessary spaces or newlines. Labels must be sorted in ascending order based on ASCII values. For example: {\"bug\":5,\"documentation\":2,\"enhancement\":3}",
        "intent": "Generate a JSON object mapping each label to the number of open issues in autojump. Include only labels that have at least one open issue. The output must be a single-line JSON object with no unnecessary spaces or newlines. Labels must be sorted in ascending order based on ASCII values. For example: {\"bug\":5,\"documentation\":2,\"enhancement\":3}",
        "required_obs": "any",
        "type_main": "long-term",
        "description": "Access the issues page of the project, and count the number of open issues for each label. Increasing the number of items displayed on a screen to 100 reduces the number of steps required to complete a task.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023",
            "start_url_lite": "http://172.16.2.4:8023/wting/autojump/-/issues",
            "project": "autojump",
            "issue_counts": "{\"bug\":7,\"enhancement\":9,\"help-wanted\":2,\"needs-info\":9,\"os-mac\":1,\"os-windows\":7,\"packaging-arch-linux\":1,\"priority-high\":6,\"priority-medium\":4,\"shell-bash\":1,\"shell-zsh\":1}",
            "difficulty": "hard"
        },
        "eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "exact_match": "{\"bug\":7,\"enhancement\":9,\"help-wanted\":2,\"needs-info\":9,\"os-mac\":1,\"os-windows\":7,\"packaging-arch-linux\":1,\"priority-high\":6,\"priority-medium\":4,\"shell-bash\":1,\"shell-zsh\":1}"
            },
            "reference_url": "",
            "program_html": [],
            "string_note": ""
        }
    },
    {
        "task_id": 40174,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023",
        "start_url_lite": "http://172.16.2.4:8023/mathjax/MathJax/-/issues",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "Generate a JSON object mapping each label to the number of open issues in {{project}}. Include only labels that have at least one open issue. The output must be a single-line JSON object with no unnecessary spaces or newlines. Labels must be sorted in ascending order based on ASCII values. For example: {\"bug\":5,\"documentation\":2,\"enhancement\":3}",
        "intent": "Generate a JSON object mapping each label to the number of open issues in mathjax. Include only labels that have at least one open issue. The output must be a single-line JSON object with no unnecessary spaces or newlines. Labels must be sorted in ascending order based on ASCII values. For example: {\"bug\":5,\"documentation\":2,\"enhancement\":3}",
        "required_obs": "any",
        "type_main": "long-term",
        "description": "Access the issues page of the project, and count the number of open issues for each label. Increasing the number of items displayed on a screen to 100 reduces the number of steps required to complete a task.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023",
            "start_url_lite": "http://172.16.2.4:8023/mathjax/MathJax/-/issues",
            "project": "mathjax",
            "issue_counts": "{\"Accepted\":112,\"Address Later\":4,\"Browser Bug\":15,\"Cannot Reproduce\":9,\"Code Example\":42,\"Duplicate\":10,\"Expected Behavior\":21,\"Feature Request\":126,\"Investigate\":12,\"MML spec limitation\":3,\"Merged\":49,\"Needs Documentation\":15,\"Question\":12,\"Ready for Development\":11,\"Ready for Review\":14,\"SRE\":2,\"Test Available\":3,\"Test Needed\":51,\"Test Not Needed\":7,\"Upstream\":8,\"good first contribution\":6,\"v2\":30,\"v3\":94,\"v4\":12}",
            "difficulty": "hard"
        },
        "eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "exact_match": "{\"Accepted\":112,\"Address Later\":4,\"Browser Bug\":15,\"Cannot Reproduce\":9,\"Code Example\":42,\"Duplicate\":10,\"Expected Behavior\":21,\"Feature Request\":126,\"Investigate\":12,\"MML spec limitation\":3,\"Merged\":49,\"Needs Documentation\":15,\"Question\":12,\"Ready for Development\":11,\"Ready for Review\":14,\"SRE\":2,\"Test Available\":3,\"Test Needed\":51,\"Test Not Needed\":7,\"Upstream\":8,\"good first contribution\":6,\"v2\":30,\"v3\":94,\"v4\":12}"
            },
            "reference_url": "",
            "program_html": [],
            "string_note": ""
        }
    },
    {
        "task_id": 40180,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023",
        "start_url_lite": "http://172.16.2.4:8023/explore",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "How many unique people have starred {{project1}}, {{project2}}, {{project3}}, {{project4}}, {{project5}}? The output must be a single integer with no extra text, spaces or formatting.",
        "intent": "How many unique people have starred AndroidSlidingUpPanel, create-react-app, PyTorch-GAN, PHP_XLSXWriter, pyod? The output must be a single integer with no extra text, spaces or formatting.",
        "required_obs": "any",
        "type_main": "long-term",
        "type_sub": "massive_memory",
        "description": "For each project, go to the page that lists the people who starred it, and write down the names of the people who starred the project. Then, calculate the size of the union of these sets.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023",
            "start_url_lite": "http://172.16.2.4:8023/explore",
            "project1": "AndroidSlidingUpPanel",
            "project2": "create-react-app",
            "project3": "PyTorch-GAN",
            "project4": "PHP_XLSXWriter",
            "project5": "pyod",
            "unique_users_num": "239",
            "memo1": "55 + 52 + 45 + 47 + 41 - 1 = 239",
            "memo2": "edwardcho stars PyTorch-GAN and pyod.",
            "difficulty": "hard"
        },
        "eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "exact_match": "239"
            },
            "reference_url": "",
            "program_html": [],
            "string_note": ""
        }
    },
    {
        "task_id": 40181,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023",
        "start_url_lite": "http://172.16.2.4:8023/explore",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "How many unique people have starred {{project1}}, {{project2}}, {{project3}}, {{project4}}, {{project5}}? The output must be a single integer with no extra text, spaces or formatting.",
        "intent": "How many unique people have starred AndroidSlidingUpPanel, a11yproject.com, empathy-prompts, first-contributions, opensourcediversity.org? The output must be a single integer with no extra text, spaces or formatting.",
        "required_obs": "any",
        "type_main": "long-term",
        "type_sub": "massive_memory",
        "description": "For each project, go to the page that lists the people who starred it, and write down the names of the people who starred the project. Then, calculate the size of the union of these sets.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023",
            "start_url_lite": "http://172.16.2.4:8023/explore",
            "project1": "AndroidSlidingUpPanel",
            "project2": "a11yproject.com",
            "project3": "empathy-prompts",
            "project4": "first-contributions",
            "project5": "opensourcediversity.org",
            "unique_users_num": "138",
            "memo1": "55 + 21 + 6 + 32 + 28 - 4 = 138",
            "memo2": "esjay stars a11yproject.com and empathy-prompts.",
            "memo3": "Roshanjossey stars a11yproject.com, first-contributions and opensourcediversity.org.",
            "memo4": "byteblaze stars a11yproject.com and empathy-prompts.",
            "difficulty": "hard"
        },
        "eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "exact_match": "138"
            },
            "reference_url": "",
            "program_html": [],
            "string_note": ""
        }
    },
    {
        "task_id": 40182,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023",
        "start_url_lite": "http://172.16.2.4:8023/explore",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "How many unique people have starred {{project1}}, {{project2}}, {{project3}}, {{project4}}, {{project5}}? The output must be a single integer with no extra text, spaces or formatting.",
        "intent": "How many unique people have starred a11yproject.com, empathy-prompts, opensourcediversity.org, PyTorch-GAN, pyod? The output must be a single integer with no extra text, spaces or formatting.",
        "required_obs": "any",
        "type_main": "long-term",
        "type_sub": "massive_memory",
        "description": "For each project, go to the page that lists the people who starred it, and write down the names of the people who starred the project. Then, calculate the size of the union of these sets.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023",
            "start_url_lite": "http://172.16.2.4:8023/explore",
            "project1": "a11yproject.com",
            "project2": "empathy-prompts",
            "project3": "opensourcediversity.org",
            "project4": "PyTorch-GAN",
            "project5": "pyod",
            "unique_users_num": "137",
            "memo1": "21 + 6 + 28 + 45 + 41 - 4 = 137",
            "memo2": "edwardcho stars PyTorch-GAN and pyod.",
            "memo3": "esjay stars a11yproject.com and empathy-prompts.",
            "memo4": "Roshanjossey stars a11yproject.com and opensourcediversity.org.",
            "memo5": "byteblaze stars a11yproject.com and empathy-prompts.",
            "difficulty": "hard"
        },
        "eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "exact_match": "137"
            },
            "reference_url": "",
            "program_html": [],
            "string_note": ""
        }
    },
    {
        "task_id": 40190,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023",
        "start_url_lite": "http://172.16.2.4:8023/DynamoRIO/dynamorio/-/issues",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "How many open issues are assigned to {{userName}} in {{project}}? The output must be a single integer with no extra text, spaces, or formatting.",
        "intent": "How many open issues are assigned to Derek Bruening in dynamorio? The output must be a single integer with no extra text, spaces, or formatting.",
        "required_obs": "any",
        "type_main": "long-term",
        "description": "Access the issues page of the project, and count the number of open issues assigned to the user. Increasing the number of items displayed on a screen to 100 reduces the number of steps required to complete a task. In addition, searching with 'Assignee = Any' also reduces the number of steps.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023",
            "start_url_lite": "http://172.16.2.4:8023/DynamoRIO/dynamorio/-/issues",
            "project": "dynamorio",
            "userName": "Derek Bruening",
            "issues_count": "76",
            "memo": "{\"Abhinav Anil Sharma\":8,\"Al Grant\":2,\"Assad Hashmi\":21,\"Derek Bruening\":76,\"Hendrik Greving\":13,\"John F.X. Galea\":3,\"Kirill\":1,\"Nahome Bete\":3,\"S.J.R. van Schaik\":1,\"Sotiris Apostolakis\":2,\"prasun3\":2,\"qidongzhao\":1,\"yxy\":1}",
            "difficulty": "hard"
        },
        "eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "exact_match": "76"
            },
            "reference_url": "",
            "program_html": [],
            "string_note": ""
        }
    },
    {
        "task_id": 40191,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023",
        "start_url_lite": "http://172.16.2.4:8023/DynamoRIO/dynamorio/-/issues",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "How many open issues are assigned to {{userName}} in {{project}}? The output must be a single integer with no extra text, spaces, or formatting.",
        "intent": "How many open issues are assigned to Assad Hashmi in dynamorio? The output must be a single integer with no extra text, spaces, or formatting.",
        "required_obs": "any",
        "type_main": "long-term",
        "description": "Access the issues page of the project, and count the number of open issues assigned to the user. Increasing the number of items displayed on a screen to 100 reduces the number of steps required to complete a task. In addition, searching with 'Assignee = Any' also reduces the number of steps.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023",
            "start_url_lite": "http://172.16.2.4:8023/DynamoRIO/dynamorio/-/issues",
            "project": "dynamorio",
            "userName": "Assad Hashmi",
            "issues_count": "21",
            "memo": "{\"Abhinav Anil Sharma\":8,\"Al Grant\":2,\"Assad Hashmi\":21,\"Derek Bruening\":76,\"Hendrik Greving\":13,\"John F.X. Galea\":3,\"Kirill\":1,\"Nahome Bete\":3,\"S.J.R. van Schaik\":1,\"Sotiris Apostolakis\":2,\"prasun3\":2,\"qidongzhao\":1,\"yxy\":1}",
            "difficulty": "hard"
        },
        "eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "exact_match": "21"
            },
            "reference_url": "",
            "program_html": [],
            "string_note": ""
        }
    },
    {
        "task_id": 40192,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023",
        "start_url_lite": "http://172.16.2.4:8023/keycloak/keycloak/-/issues",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "How many open issues are assigned to {{userName}} in {{project}}? The output must be a single integer with no extra text, spaces, or formatting.",
        "intent": "How many open issues are assigned to Martin Bartoš in keycloak? The output must be a single integer with no extra text, spaces, or formatting.",
        "required_obs": "any",
        "type_main": "long-term",
        "description": "Access the issues page of the project, and count the number of open issues assigned to the user. Increasing the number of items displayed on a screen to 100 reduces the number of steps required to complete a task. In addition, searching with 'Assignee = Any' also reduces the number of steps.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023",
            "start_url_lite": "http://172.16.2.4:8023/keycloak/keycloak/-/issues",
            "project": "keycloak",
            "userName": "Martin Bartoš",
            "issues_count": "25",
            "memo": "{\"Alexander Schwartz\":22,\"Erik Jan de Wit\":10,\"Jon Koops\":10,\"Lukas Hanusovsky\":1,\"Martin Bartoš\":25,\"Martin Kanis\":5,\"Michal Hajas\":18,\"Pedro Igor\":17,\"Ricardo Martin\":9,\"Stefan Guilhen\":14,\"Vlasta Ramik\":8,\"Václav Muzikář\":22,\"agagancarczyk\":6,\"fwojnar\":5,\"ikhomyn\":1}",
            "difficulty": "hard"
        },
        "eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "exact_match": "25"
            },
            "reference_url": "",
            "program_html": [],
            "string_note": ""
        }
    },
    {
        "task_id": 40193,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023",
        "start_url_lite": "http://172.16.2.4:8023/keycloak/keycloak/-/issues",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "How many open issues are assigned to {{userName}} in {{project}}? The output must be a single integer with no extra text, spaces, or formatting.",
        "intent": "How many open issues are assigned to Václav Muzikář in keycloak? The output must be a single integer with no extra text, spaces, or formatting.",
        "required_obs": "any",
        "type_main": "long-term",
        "description": "Access the issues page of the project, and count the number of open issues assigned to the user. Increasing the number of items displayed on a screen to 100 reduces the number of steps required to complete a task. In addition, searching with 'Assignee = Any' also reduces the number of steps.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023",
            "start_url_lite": "http://172.16.2.4:8023/keycloak/keycloak/-/issues",
            "project": "keycloak",
            "userName": "Václav Muzikář",
            "issues_count": "22",
            "memo": "{\"Alexander Schwartz\":22,\"Erik Jan de Wit\":10,\"Jon Koops\":10,\"Lukas Hanusovsky\":1,\"Martin Bartoš\":25,\"Martin Kanis\":5,\"Michal Hajas\":18,\"Pedro Igor\":17,\"Ricardo Martin\":9,\"Stefan Guilhen\":14,\"Vlasta Ramik\":8,\"Václav Muzikář\":22,\"agagancarczyk\":6,\"fwojnar\":5,\"ikhomyn\":1}",
            "difficulty": "hard"
        },
        "eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "exact_match": "22"
            },
            "reference_url": "",
            "program_html": [],
            "string_note": ""
        }
    },
    {
        "task_id": 40194,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023",
        "start_url_lite": "http://172.16.2.4:8023/OpenAPITools/openapi-generator/-/issues",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "How many open issues are assigned to {{userName}} in {{project}}? The output must be a single integer with no extra text, spaces, or formatting.",
        "intent": "How many open issues are assigned to Jim Schubert in openapi-generator? The output must be a single integer with no extra text, spaces, or formatting.",
        "required_obs": "any",
        "type_main": "long-term",
        "description": "Access the issues page of the project, and count the number of open issues assigned to the user. Increasing the number of items displayed on a screen to 100 reduces the number of steps required to complete a task. In addition, searching with 'Assignee = Any' also reduces the number of steps.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023",
            "start_url_lite": "http://172.16.2.4:8023/OpenAPITools/openapi-generator/-/issues",
            "project": "openapi-generator",
            "userName": "Jim Schubert",
            "issues_count": "6",
            "memo": "{\"Jim Schubert\":6}",
            "difficulty": "hard"
        },
        "eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "exact_match": "6"
            },
            "reference_url": "",
            "program_html": [],
            "string_note": ""
        }
    },
    {
        "task_id": 40200,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023",
        "start_url_lite": "http://172.16.2.4:8023/a11yproject/a11yproject.com/issues",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "Generate a JSON object mapping each user's display name to their number of open assigned issues in {{project}}. Include only users who have at least one open issue. The output must be a single-line JSON object with no unnecessary spaces or newlines. Display names (not usernames) must be sorted in ascending order based on ASCII values. For example: {\"Alice Johnson\":3,\"Bob Smith\":5,\"Charlie Williams\":2}",
        "intent": "Generate a JSON object mapping each user's display name to their number of open assigned issues in a11yproject/a11yproject.com. Include only users who have at least one open issue. The output must be a single-line JSON object with no unnecessary spaces or newlines. Display names (not usernames) must be sorted in ascending order based on ASCII values. For example: {\"Alice Johnson\":3,\"Bob Smith\":5,\"Charlie Williams\":2}",
        "required_obs": "any",
        "type_main": "long-term",
        "description": "Access the issues page of the project, and count the number of open issues assigned to each user. Increasing the number of items displayed on a screen to 100 reduces the number of steps required to complete a task. In addition, searching with 'Assignee = Any' also reduces the number of steps.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023",
            "start_url_lite": "http://172.16.2.4:8023/a11yproject/a11yproject.com/issues",
            "project": "a11yproject/a11yproject.com",
            "issue_counts": "{\"Agustina Chaer\":1,\"Byte Blaze\":4,\"Conor\":1,\"Dan Matthew\":1,\"EJ Mason\":3,\"Kiri\":1,\"Roshan Jossy\":4,\"Wayne Elgin\":1,\"ilknureren\":1}",
            "difficulty": "medium"
        },
        "eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "exact_match": "{\"Agustina Chaer\":1,\"Byte Blaze\":4,\"Conor\":1,\"Dan Matthew\":1,\"EJ Mason\":3,\"Kiri\":1,\"Roshan Jossy\":4,\"Wayne Elgin\":1,\"ilknureren\":1}"
            },
            "reference_url": "",
            "program_html": [],
            "string_note": ""
        }
    },
    {
        "task_id": 40201,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023",
        "start_url_lite": "http://172.16.2.4:8023/wting/autojump/-/issues",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "Generate a JSON object mapping each user's display name to their number of open assigned issues in {{project}}. Include only users who have at least one open issue. The output must be a single-line JSON object with no unnecessary spaces or newlines. Display names (not usernames) must be sorted in ascending order based on ASCII values. For example: {\"Alice Johnson\":3,\"Bob Smith\":5,\"Charlie Williams\":2}",
        "intent": "Generate a JSON object mapping each user's display name to their number of open assigned issues in wting/autojump. Include only users who have at least one open issue. The output must be a single-line JSON object with no unnecessary spaces or newlines. Display names (not usernames) must be sorted in ascending order based on ASCII values. For example: {\"Alice Johnson\":3,\"Bob Smith\":5,\"Charlie Williams\":2}",
        "required_obs": "any",
        "type_main": "long-term",
        "description": "Access the issues page of the project, and count the number of open issues assigned to each user. Increasing the number of items displayed on a screen to 100 reduces the number of steps required to complete a task. In addition, searching with 'Assignee = Any' also reduces the number of steps.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023",
            "start_url_lite": "http://172.16.2.4:8023/wting/autojump/-/issues",
            "project": "wting/autojump",
            "issue_counts": "{\"William Ting\":2}",
            "difficulty": "medium"
        },
        "eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "exact_match": "{\"William Ting\":2}"
            },
            "reference_url": "",
            "program_html": [],
            "string_note": ""
        }
    },
    {
        "task_id": 40202,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023",
        "start_url_lite": "http://172.16.2.4:8023/MozillaFestival/mozfest-program-2018/-/issues",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "Generate a JSON object mapping each user's display name to their number of open assigned issues in {{project}}. Include only users who have at least one open issue. The output must be a single-line JSON object with no unnecessary spaces or newlines. Display names (not usernames) must be sorted in ascending order based on ASCII values. For example: {\"Alice Johnson\":3,\"Bob Smith\":5,\"Charlie Williams\":2}",
        "intent": "Generate a JSON object mapping each user's display name to their number of open assigned issues in mozfest-program-2018. Include only users who have at least one open issue. The output must be a single-line JSON object with no unnecessary spaces or newlines. Display names (not usernames) must be sorted in ascending order based on ASCII values. For example: {\"Alice Johnson\":3,\"Bob Smith\":5,\"Charlie Williams\":2}",
        "required_obs": "any",
        "type_main": "long-term",
        "description": "Access the issues page of the project, and count the number of open issues assigned to each user. Increasing the number of items displayed on a screen to 100 reduces the number of steps required to complete a task. In addition, searching with 'Assignee = Any' also reduces the number of steps.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023",
            "start_url_lite": "http://172.16.2.4:8023/MozillaFestival/mozfest-program-2018/-/issues",
            "project": "mozfest-program-2018",
            "issue_counts": "{\"@Btayeg\":16,\"AngelJum\":8,\"Chad Sansing\":14,\"David Ross\":44,\"Geraldo Barros\":10,\"Jon Tutcher\":14,\"Joseph Thomas\":9,\"Mark Boas\":9,\"arroway\":15}",
            "difficulty": "hard"
        },
        "eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "exact_match": "{\"@Btayeg\":16,\"AngelJum\":8,\"Chad Sansing\":14,\"David Ross\":44,\"Geraldo Barros\":10,\"Jon Tutcher\":14,\"Joseph Thomas\":9,\"Mark Boas\":9,\"arroway\":15}"
            },
            "reference_url": "",
            "program_html": [],
            "string_note": ""
        }
    },
    {
        "task_id": 40210,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023",
        "start_url_lite": "http://172.16.2.4:8023/users/byteblaze/starred",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "Please provide the sum of {{target}} for all the projects I have starred. The output must be a single integer without commas, spaces, or any other formatting. For example, if the sum is one thousand two hundred thirty-four, the correct output is '1234' (not '1,234' or ' 1234 ').",
        "intent": "Please provide the sum of commits for all the projects I have starred. The output must be a single integer without commas, spaces, or any other formatting. For example, if the sum is one thousand two hundred thirty-four, the correct output is '1234' (not '1,234' or ' 1234 ').",
        "required_obs": "any",
        "type_main": "long-term",
        "type_sub": "calc",
        "description": "Access the page that lists the projects you have starred, and count the number of the target for all the projects.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023",
            "start_url_lite": "http://172.16.2.4:8023/users/byteblaze/starred",
            "target": "commits",
            "answers": "2668",
            "difficulty": "medium"
        },
        "eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "exact_match": "2668"
            },
            "reference_url": "",
            "program_html": [],
            "string_note": ""
        }
    },
    {
        "task_id": 40211,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023",
        "start_url_lite": "http://172.16.2.4:8023/users/byteblaze/starred",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "Please provide the sum of {{target}} for all the projects I have starred. The output must be a single integer without commas, spaces, or any other formatting. For example, if the sum is one thousand two hundred thirty-four, the correct output is '1234' (not '1,234' or ' 1234 ').",
        "intent": "Please provide the sum of branches for all the projects I have starred. The output must be a single integer without commas, spaces, or any other formatting. For example, if the sum is one thousand two hundred thirty-four, the correct output is '1234' (not '1,234' or ' 1234 ').",
        "required_obs": "any",
        "type_main": "long-term",
        "type_sub": "calc",
        "description": "Access the page that lists the projects you have starred, and count the number of the target for all the projects.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023",
            "start_url_lite": "http://172.16.2.4:8023/users/byteblaze/starred",
            "target": "branches",
            "answers": "21",
            "difficulty": "medium"
        },
        "eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "exact_match": "21"
            },
            "reference_url": "",
            "program_html": [],
            "string_note": ""
        }
    },
    {
        "task_id": 40212,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023",
        "start_url_lite": "http://172.16.2.4:8023/users/byteblaze/starred",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "Please provide the sum of {{target}} for all the projects I have starred. The output must be a single integer without commas, spaces, or any other formatting. For example, if the sum is one thousand two hundred thirty-four, the correct output is '1234' (not '1,234' or ' 1234 ').",
        "intent": "Please provide the sum of tags for all the projects I have starred. The output must be a single integer without commas, spaces, or any other formatting. For example, if the sum is one thousand two hundred thirty-four, the correct output is '1234' (not '1,234' or ' 1234 ').",
        "required_obs": "any",
        "type_main": "long-term",
        "type_sub": "calc",
        "description": "Access the page that lists the projects you have starred, and count the number of the target for all the projects.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023",
            "start_url_lite": "http://172.16.2.4:8023/users/byteblaze/starred",
            "target": "tags",
            "answers": "27",
            "difficulty": "medium"
        },
        "eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "exact_match": "27"
            },
            "reference_url": "",
            "program_html": [],
            "string_note": ""
        }
    },
    {
        "task_id": 40220,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023",
        "start_url_lite": "http://172.16.2.4:8023/byteblaze/cloud-to-butt/-/commits/master",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "Compute and output the total number of commits made by {{userName}} in the main (or master) branch of repositories {{repository1}}, {{repository2}}, and {{repository3}}, including the number of times a pull request was merged. The output must be a single integer with no extra text, spaces, or formatting.",
        "intent": "Compute and output the total number of commits made by Steven Frank in the main (or master) branch of repositories byteblaze/cloud-to-butt, byteblaze/millennials-to-snake-people, and sample-gitlab, including the number of times a pull request was merged. The output must be a single integer with no extra text, spaces, or formatting.",
        "required_obs": "any",
        "type_main": "long-term",
        "description": "Access the commits page of the repository, and count the number of commits made by the user.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023",
            "start_url_lite": "http://172.16.2.4:8023/byteblaze/cloud-to-butt/-/commits/master",
            "userName": "Steven Frank",
            "repository1": "byteblaze/cloud-to-butt",
            "repository2": "byteblaze/millennials-to-snake-people",
            "repository3": "sample-gitlab",
            "commitSum": "36",
            "memo": "git log --author=USER_NAME --pretty=oneline | wc -l \n 21 + 15 + 0 = 36",
            "difficulty": "medium"
        },
        "eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "exact_match": "36"
            },
            "reference_url": "",
            "program_html": [],
            "string_note": ""
        }
    },
    {
        "task_id": 40221,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023",
        "start_url_lite": "http://172.16.2.4:8023/byteblaze/empathy-prompts/-/commits/main",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "Compute and output the total number of commits made by {{userName}} in the main (or master) branch of repositories {{repository1}}, {{repository2}}, and {{repository3}}, including the number of times a pull request was merged. The output must be a single integer with no extra text, spaces, or formatting.",
        "intent": "Compute and output the total number of commits made by Eric Bailey in the main (or master) branch of repositories byteblaze/empathy-prompts, byteblaze/a11y-syntax-highlighting, and byteblaze/millennials-to-snake-people, including the number of times a pull request was merged. The output must be a single integer with no extra text, spaces, or formatting.",
        "required_obs": "any",
        "type_main": "long-term",
        "description": "Access the commits page of the repository, and count the number of commits made by the user.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023",
            "start_url_lite": "http://172.16.2.4:8023/byteblaze/empathy-prompts/-/commits/main",
            "userName": "Eric Bailey",
            "repository1": "byteblaze/empathy-prompts",
            "repository2": "byteblaze/a11y-syntax-highlighting",
            "repository3": "byteblaze/millennials-to-snake-people",
            "commitSum": "270",
            "memo": "git log --author=USER_NAME --pretty=oneline | wc -l \n 151 + 39 + 80 = 270",
            "difficulty": "hard"
        },
        "eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "exact_match": "270"
            },
            "reference_url": "",
            "program_html": [],
            "string_note": ""
        }
    },
    {
        "task_id": 40222,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023",
        "start_url_lite": "http://172.16.2.4:8023/byteblaze/millennials-to-snake-people/-/commits/master",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "Compute and output the total number of commits made by {{userName}} in the main (or master) branch of repositories {{repository1}}, {{repository2}}, and {{repository3}}, including the number of times a pull request was merged. The output must be a single integer with no extra text, spaces, or formatting.",
        "intent": "Compute and output the total number of commits made by Eric Bailey in the main (or master) branch of repositories byteblaze/millennials-to-snake-people, sample-gitlab, and byteblaze/empathy-prompts, including the number of times a pull request was merged. The output must be a single integer with no extra text, spaces, or formatting.",
        "required_obs": "any",
        "type_main": "long-term",
        "description": "Access the commits page of the repository, and count the number of commits made by the user.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023",
            "start_url_lite": "http://172.16.2.4:8023/byteblaze/millennials-to-snake-people/-/commits/master",
            "userName": "Eric Bailey",
            "repository1": "byteblaze/millennials-to-snake-people",
            "repository2": "sample-gitlab",
            "repository3": "byteblaze/empathy-prompts",
            "commitSum": "231",
            "memo": "git log --author=USER_NAME --pretty=oneline | wc -l \n 80 + 0 + 151 = 231",
            "difficulty": "hard"
        },
        "eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "exact_match": "231"
            },
            "reference_url": "",
            "program_html": [],
            "string_note": ""
        }
    },
    {
        "task_id": 40230,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023",
        "start_url_lite": "http://172.16.2.4:8023/explore",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "Determine the order of the projects among {{project1}}, {{project2}}, and {{project3}} based on the timestamps of their first commits, sorted from newest to oldest. Output only their repository names (without any organization prefixes) as a single-line comma-separated string with no extra spaces or text.",
        "intent": "Determine the order of the projects among a11y-webring.club, design, and sample-gitlab based on the timestamps of their first commits, sorted from newest to oldest. Output only their repository names (without any organization prefixes) as a single-line comma-separated string with no extra spaces or text.",
        "required_obs": "any",
        "type_main": "long-term",
        "description": "Access the Contributors page of the project, and check the timestamps of the first commits of the projects.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023",
            "start_url_lite": "http://172.16.2.4:8023/explore",
            "project1": "a11y-webring.club",
            "project2": "design",
            "project3": "sample-gitlab",
            "orderedProjects": "sample-gitlab,a11y-webring.club,design",
            "memo": "sample-gitlab: 2021-02-15T15:52:03+00:00, a11y-webring.club: 2018-12-12T13:14:49-06:00, design: 2018-10-22T16:33:30-04:00, empathy-prompts: 2017-04-19T23:31:37-04:00, ericwbailey.website: 2016-10-10T16:25:14-04:00",
            "difficulty": "hard"
        },
        "eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "exact_match": "sample-gitlab,a11y-webring.club,design"
            },
            "reference_url": "",
            "program_html": [],
            "string_note": ""
        }
    },
    {
        "task_id": 40231,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023",
        "start_url_lite": "http://172.16.2.4:8023/explore",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "Determine the order of the projects among {{project1}}, {{project2}}, and {{project3}} based on the timestamps of their first commits, sorted from newest to oldest. Output only their repository names (without any organization prefixes) as a single-line comma-separated string with no extra spaces or text.",
        "intent": "Determine the order of the projects among a11y-syntax-highlighting, a11yproject.com, and cloud-to-butt based on the timestamps of their first commits, sorted from newest to oldest. Output only their repository names (without any organization prefixes) as a single-line comma-separated string with no extra spaces or text.",
        "required_obs": "any",
        "type_main": "long-term",
        "description": "Access the Contributors page of the project, and check the timestamps of the first commits of the projects.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023",
            "start_url_lite": "http://172.16.2.4:8023/explore",
            "project1": "a11y-syntax-highlighting",
            "project2": "a11yproject.com",
            "project3": "cloud-to-butt",
            "orderedProjects": "a11y-syntax-highlighting,cloud-to-butt,a11yproject.com",
            "memo": "a11y-syntax-highlighting: 2013-04-25T06:54:06-07:00, a11yproject.com: 2013-01-10T12:39:57-08:00, cloud-to-butt: 2013-03-11T22:27:10-07:00, empathy-prompts: 2017-04-19T23:31:37-04:00, a11y-webring.club: 2018-12-12T13:14:49-06:00",
            "difficulty": "hard"
        },
        "eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "exact_match": "a11y-syntax-highlighting,cloud-to-butt,a11yproject.com"
            },
            "reference_url": "",
            "program_html": [],
            "string_note": ""
        }
    },
    {
        "task_id": 40232,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023",
        "start_url_lite": "http://172.16.2.4:8023/explore",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "Determine the order of the projects among {{project1}}, {{project2}}, and {{project3}} based on the timestamps of their first commits, sorted from newest to oldest. Output only their repository names (without any organization prefixes) as a single-line comma-separated string with no extra spaces or text.",
        "intent": "Determine the order of the projects among ericwbailey.website, design, and sample-gitlab based on the timestamps of their first commits, sorted from newest to oldest. Output only their repository names (without any organization prefixes) as a single-line comma-separated string with no extra spaces or text.",
        "required_obs": "any",
        "type_main": "long-term",
        "description": "Access the Contributors page of the project, and check the timestamps of the first commits of the projects.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023",
            "start_url_lite": "http://172.16.2.4:8023/explore",
            "project1": "ericwbailey.website",
            "project2": "design",
            "project3": "sample-gitlab",
            "orderedProjects": "sample-gitlab,design,ericwbailey.website",
            "memo": "ericwbailey.website: 2016-10-10T16:25:14-04:00, design: 2018-10-22T16:33:30-04:00, sample-gitlab: 2021-02-15T15:52:03+00:00, a11y-syntax-highlighting: 2013-04-25T06:54:06-07:00, empathy-prompts: 2017-04-19T23:31:37-04:00",
            "difficulty": "hard"
        },
        "eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "exact_match": "sample-gitlab,design,ericwbailey.website"
            },
            "reference_url": "",
            "program_html": [],
            "string_note": ""
        }
    },
    {
        "task_id": 40240,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023",
        "start_url_lite": "http://172.16.2.4:8023/a11yproject/a11yproject.com/-/issues",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "Count the number of open issues that were last updated on or after {{lastupdatetime}} (UTC) in {{project}}. Output the count as a single integer with no extra text, spaces, or formatting.",
        "intent": "Count the number of open issues that were last updated on or after 2021-03-10 00:00:00 (UTC) in a11yproject/a11yproject.com. Output the count as a single integer with no extra text, spaces, or formatting.",
        "required_obs": "text",
        "type_main": "long-term",
        "description": "Access the issues page of the project, and count the number of open issues that were last updated on or after the specified timestamp. Increasing the number of items displayed on a screen to 100 reduces the number of steps required to complete a task.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023",
            "start_url_lite": "http://172.16.2.4:8023/a11yproject/a11yproject.com/-/issues",
            "project": "a11yproject/a11yproject.com",
            "lastupdatetime": "2021-03-10 00:00:00",
            "issues_count": "36",
            "difficulty": "medium"
        },
        "eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "exact_match": "36"
            },
            "reference_url": "",
            "program_html": [],
            "string_note": ""
        }
    },
    {
        "task_id": 40241,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023",
        "start_url_lite": "http://172.16.2.4:8023/root/metaseq/-/issues",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "Count the number of open issues that were last updated on or after {{lastupdatetime}} (UTC) in {{project}}. Output the count as a single integer with no extra text, spaces, or formatting.",
        "intent": "Count the number of open issues that were last updated on or after 2022-10-01 00:00:00 (UTC) in metaseq. Output the count as a single integer with no extra text, spaces, or formatting.",
        "required_obs": "text",
        "type_main": "long-term",
        "description": "Access the issues page of the project, and count the number of open issues that were last updated on or after the specified timestamp. Increasing the number of items displayed on a screen to 100 reduces the number of steps required to complete a task.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023",
            "start_url_lite": "http://172.16.2.4:8023/root/metaseq/-/issues",
            "project": "metaseq",
            "lastupdatetime": "2022-10-01 00:00:00",
            "issues_count": "77",
            "difficulty": "medium"
        },
        "eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "exact_match": "77"
            },
            "reference_url": "",
            "program_html": [],
            "string_note": ""
        }
    },
    {
        "task_id": 40242,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023",
        "start_url_lite": "http://172.16.2.4:8023/MozillaFestival/mozfest-program-2018/-/issues",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "Count the number of open issues that were last updated on or after {{lastupdatetime}} (UTC) in {{project}}. Output the count as a single integer with no extra text, spaces, or formatting.",
        "intent": "Count the number of open issues that were last updated on or after 2019-03-10 00:00:00 (UTC) in mozfest-program-2018. Output the count as a single integer with no extra text, spaces, or formatting.",
        "required_obs": "text",
        "type_main": "long-term",
        "description": "Access the issues page of the project, and count the number of open issues that were last updated on or after the specified timestamp. Increasing the number of items displayed on a screen to 100 reduces the number of steps required to complete a task.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023",
            "start_url_lite": "http://172.16.2.4:8023/MozillaFestival/mozfest-program-2018/-/issues",
            "project": "mozfest-program-2018",
            "lastupdatetime": "2019-03-10 00:00:00",
            "issues_count": "34",
            "difficulty": "hard"
        },
        "eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "exact_match": "34"
            },
            "reference_url": "",
            "program_html": [],
            "string_note": ""
        }
    },
    {
        "task_id": 40243,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023",
        "start_url_lite": "http://172.16.2.4:8023/youfou/wxpy/-/issues",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "Count the number of open issues that were last updated on or after {{lastupdatetime}} (UTC) in {{project}}. Output the count as a single integer with no extra text, spaces, or formatting.",
        "intent": "Count the number of open issues that were last updated on or after 2018-03-10 00:00:00 (UTC) in wxpy. Output the count as a single integer with no extra text, spaces, or formatting.",
        "required_obs": "text",
        "type_main": "long-term",
        "description": "Access the issues page of the project, and count the number of open issues that were last updated on or after the specified timestamp. Increasing the number of items displayed on a screen to 100 reduces the number of steps required to complete a task.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023",
            "start_url_lite": "http://172.16.2.4:8023/youfou/wxpy/-/issues",
            "project": "wxpy",
            "lastupdatetime": "2018-03-10 00:00:00",
            "issues_count": "189",
            "difficulty": "hard"
        },
        "eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "exact_match": "189"
            },
            "reference_url": "",
            "program_html": [],
            "string_note": ""
        }
    },
    {
        "task_id": 40244,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023",
        "start_url_lite": "http://172.16.2.4:8023/zhongyang219/TrafficMonitor/-/issues",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "Count the number of open issues that were last updated on or after {{lastupdatetime}} (UTC) in {{project}}. Output the count as a single integer with no extra text, spaces, or formatting.",
        "intent": "Count the number of open issues that were last updated on or after 2022-03-10 00:00:00 (UTC) in TrafficMonitor. Output the count as a single integer with no extra text, spaces, or formatting.",
        "required_obs": "text",
        "type_main": "long-term",
        "description": "Access the issues page of the project, and count the number of open issues that were last updated on or after the specified timestamp. Increasing the number of items displayed on a screen to 100 reduces the number of steps required to complete a task.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023",
            "start_url_lite": "http://172.16.2.4:8023/zhongyang219/TrafficMonitor/-/issues",
            "project": "TrafficMonitor",
            "lastupdatetime": "2022-03-10 00:00:00",
            "issues_count": "350",
            "difficulty": "hard"
        },
        "eval": {
            "eval_types": [
                "string_match"
            ],
            "reference_answers": {
                "exact_match": "350"
            },
            "reference_url": "",
            "program_html": [],
            "string_note": ""
        }
    },
    {
        "task_id": 40250,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023",
        "start_url_lite": "http://172.16.2.4:8023/facebook/create-react-app",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "Create a license for {{repository1}} that is the same type as the license for {{repository2}}. If the license file is already present, it should be replaced (make sure there are no multiple license files).",
        "intent": "Create a license for byteblaze/cloud-to-butt that is the same type as the license for Meta/create-react-app. If the license file is already present, it should be replaced (make sure there are no multiple license files).",
        "required_obs": "any",
        "affects_environment": true,
        "type_main": "long-term",
        "description": "Go to the repository page of repository2 and find the license type. Then, create a file in repository1 with the same license type as repository2.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023",
            "start_url_lite": "http://172.16.2.4:8023/facebook/create-react-app",
            "repository1": "byteblaze/cloud-to-butt",
            "repository2": "Meta/create-react-app",
            "url": "http://172.16.2.4:8023/byteblaze/cloud-to-butt/-/blob/master/LICENSE.txt",
            "license": "MIT License",
            "checkpoint1": "MIT",
            "checkpoint_info": "The license for {{repository2}}.",
            "difficulty": "medium"
        },
        "eval": {
            "eval_types": [
                "program_html"
            ],
            "reference_answers": null,
            "reference_url": "",
            "program_html": [
                {
                    "url": "http://172.16.2.4:8023/byteblaze/cloud-to-butt/-/blob/master/LICENSE.txt",
                    "locator": "",
                    "required_contents": {
                        "must_include": [
                            "MIT License"
                        ]
                    }
                }
            ]
        }
    },
    {
        "task_id": 40251,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023",
        "start_url_lite": "http://172.16.2.4:8023/OpenAPITools/openapi-generator",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "Create a license for {{repository1}} that is the same type as the license for {{repository2}}. If the license file is already present, it should be replaced (make sure there are no multiple license files).",
        "intent": "Create a license for byteblaze/accessible-html-content-patterns that is the same type as the license for OpenAPI Tools/openapi-generator. If the license file is already present, it should be replaced (make sure there are no multiple license files).",
        "required_obs": "any",
        "affects_environment": true,
        "type_main": "long-term",
        "description": "Go to the repository page of repository2 and find the license type. Then, create a file in repository1 with the same license type as repository2.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023",
            "start_url_lite": "http://172.16.2.4:8023/OpenAPITools/openapi-generator",
            "repository1": "byteblaze/accessible-html-content-patterns",
            "repository2": "OpenAPI Tools/openapi-generator",
            "url": "http://172.16.2.4:8023/byteblaze/accessible-html-content-patterns/-/blob/main/LICENSE",
            "license": "Apache License",
            "checkpoint1": "Apache",
            "checkpoint_info": "The license for {{repository2}}.",
            "difficulty": "medium"
        },
        "eval": {
            "eval_types": [
                "program_html"
            ],
            "reference_answers": null,
            "reference_url": "",
            "program_html": [
                {
                    "url": "http://172.16.2.4:8023/byteblaze/accessible-html-content-patterns/-/blob/main/LICENSE",
                    "locator": "",
                    "required_contents": {
                        "must_include": [
                            "Apache License"
                        ]
                    }
                }
            ]
        }
    },
    {
        "task_id": 40252,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023",
        "start_url_lite": "http://172.16.2.4:8023/layeh/gumble",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "Create a license for {{repository1}} that is the same type as the license for {{repository2}}. If the license file is already present, it should be replaced (make sure there are no multiple license files).",
        "intent": "Create a license for byteblaze/a11y-syntax-highlighting that is the same type as the license for layeh/gumble. If the license file is already present, it should be replaced (make sure there are no multiple license files).",
        "required_obs": "any",
        "affects_environment": true,
        "type_main": "long-term",
        "description": "Go to the repository page of repository2 and find the license type. Then, create a file in repository1 with the same license type as repository2.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023",
            "start_url_lite": "http://172.16.2.4:8023/layeh/gumble",
            "repository1": "byteblaze/a11y-syntax-highlighting",
            "repository2": "layeh/gumble",
            "url": "http://172.16.2.4:8023/byteblaze/a11y-syntax-highlighting/-/blob/main/LICENSE",
            "license": "Mozilla Public License",
            "checkpoint1": "Mozilla Public",
            "checkpoint_info": "The license for {{repository2}}.",
            "difficulty": "medium"
        },
        "eval": {
            "eval_types": [
                "program_html"
            ],
            "reference_answers": null,
            "reference_url": "",
            "program_html": [
                {
                    "url": "http://172.16.2.4:8023/byteblaze/a11y-syntax-highlighting/-/blob/main/LICENSE",
                    "locator": "",
                    "required_contents": {
                        "must_include": [
                            "Mozilla Public License"
                        ]
                    }
                }
            ]
        }
    },
    {
        "task_id": 40253,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023",
        "start_url_lite": "http://172.16.2.4:8023/evilcos/xssor2",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "Create a license for {{repository1}} that is the same type as the license for {{repository2}}. If the license file is already present, it should be replaced (make sure there are no multiple license files).",
        "intent": "Create a license for byteblaze/dotfiles that is the same type as the license for evilcos/xssor2. If the license file is already present, it should be replaced (make sure there are no multiple license files).",
        "required_obs": "any",
        "affects_environment": true,
        "type_main": "long-term",
        "description": "Go to the repository page of repository2 and find the license type. Then, create a file in repository1 with the same license type as repository2.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023",
            "start_url_lite": "http://172.16.2.4:8023/evilcos/xssor2",
            "repository1": "byteblaze/dotfiles",
            "repository2": "evilcos/xssor2",
            "url": "http://172.16.2.4:8023/byteblaze/dotfiles/-/blob/main/LICENSE",
            "license": "BSD 2-Clause License",
            "checkpoint1": "BSD 2-Clause",
            "checkpoint_info": "The license for {{repository2}}.",
            "difficulty": "medium"
        },
        "eval": {
            "eval_types": [
                "program_html"
            ],
            "reference_answers": null,
            "reference_url": "",
            "program_html": [
                {
                    "url": "http://172.16.2.4:8023/byteblaze/dotfiles/-/blob/main/LICENSE",
                    "locator": "",
                    "required_contents": {
                        "must_include": [
                            "BSD 2-Clause License"
                        ]
                    }
                }
            ]
        }
    },
    {
        "task_id": 40254,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023",
        "start_url_lite": "http://172.16.2.4:8023/yjlou/2019-nCov",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "Create a license for {{repository1}} that is the same type as the license for {{repository2}}. If the license file is already present, it should be replaced (make sure there are no multiple license files).",
        "intent": "Create a license for byteblaze/timeit that is the same type as the license for yjlou/2019-nCov. If the license file is already present, it should be replaced (make sure there are no multiple license files).",
        "required_obs": "any",
        "affects_environment": true,
        "type_main": "long-term",
        "description": "Go to the repository page of repository2 and find the license type. Then, create a file in repository1 with the same license type as repository2.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023",
            "start_url_lite": "http://172.16.2.4:8023/yjlou/2019-nCov",
            "repository1": "byteblaze/timeit",
            "repository2": "yjlou/2019-nCov",
            "url": "http://172.16.2.4:8023/byteblaze/timeit/-/blob/master/LICENSE",
            "license": "GNU GENERAL PUBLIC LICENSE",
            "checkpoint1": "GNU GENERAL PUBLIC",
            "checkpoint_info": "The license for {{repository2}}.",
            "difficulty": "medium"
        },
        "eval": {
            "eval_types": [
                "program_html"
            ],
            "reference_answers": null,
            "reference_url": "",
            "program_html": [
                {
                    "url": "http://172.16.2.4:8023/byteblaze/timeit/-/blob/master/LICENSE",
                    "locator": "",
                    "required_contents": {
                        "must_include": [
                            "GNU GENERAL PUBLIC LICENSE"
                        ]
                    }
                }
            ]
        }
    },
    {
        "task_id": 40260,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023",
        "start_url_lite": "http://172.16.2.4:8023/byteblaze/a11y-syntax-highlighting",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "Change the list in the .gitignore file of {{repository}} to '.DS_Store', 'node_modules/', and '.vscode'. You may add the file if it does not exist.",
        "intent": "Change the list in the .gitignore file of byteblaze/a11y-syntax-highlighting to '.DS_Store', 'node_modules/', and '.vscode'. You may add the file if it does not exist.",
        "required_obs": "any",
        "affects_environment": true,
        "type_main": "others",
        "description": "The agent should search for the appropriate repository with the search box by choosing the best keyword according to the description. It should navigate to the \"edit\" menu to modify the gitignore file.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023",
            "start_url_lite": "http://172.16.2.4:8023/byteblaze/a11y-syntax-highlighting",
            "default_branch": "main",
            "repository": "byteblaze/a11y-syntax-highlighting",
            "difficulty": "medium"
        },
        "eval": {
            "eval_types": [
                "program_html"
            ],
            "reference_answers": null,
            "reference_url": "",
            "program_html": [
                {
                    "url": "http://172.16.2.4:8023/byteblaze/a11y-syntax-highlighting/-/raw/main/.gitignore",
                    "locator": "document.querySelector('body > pre').innerText",
                    "required_contents": {
                        "exact_match": ".DS_Store\nnode_modules\n.vscode"
                    }
                }
            ],
            "string_note": "",
            "reference_answer_raw_annotation": ""
        }
    },
    {
        "task_id": 40261,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023",
        "start_url_lite": "http://172.16.2.4:8023/primer/design",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "Change the list in the .gitignore file of {{repository}} to '.DS_Store', 'node_modules/', and '.vscode'. You may add the file if it does not exist.",
        "intent": "Change the list in the .gitignore file of the repository for the Primer Interface Guidelines to '.DS_Store', 'node_modules/', and '.vscode'. You may add the file if it does not exist.",
        "required_obs": "any",
        "affects_environment": true,
        "type_main": "others",
        "description": "The agent should search for the appropriate repository with the search box by choosing the best keyword according to the description. It should navigate to the \"edit\" menu to modify the gitignore file.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023",
            "start_url_lite": "http://172.16.2.4:8023/primer/design",
            "default_branch": "main",
            "repository": "the repository for the Primer Interface Guidelines",
            "difficulty": "medium"
        },
        "eval": {
            "eval_types": [
                "program_html"
            ],
            "reference_answers": null,
            "reference_url": "",
            "program_html": [
                {
                    "url": "http://172.16.2.4:8023/primer/design/-/raw/main/.gitignore",
                    "locator": "document.querySelector('body > pre').innerText",
                    "required_contents": {
                        "exact_match": ".DS_Store\nnode_modules\n.vscode"
                    }
                }
            ],
            "string_note": "",
            "reference_answer_raw_annotation": ""
        }
    },
    {
        "task_id": 40262,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023",
        "start_url_lite": "http://172.16.2.4:8023/byteblaze/ericwbailey.website",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "Change the list in the .gitignore file of {{repository}} to '.DS_Store', 'node_modules/', and '.vscode'. You may add the file if it does not exist.",
        "intent": "Change the list in the .gitignore file of my personal webpage to '.DS_Store', 'node_modules/', and '.vscode'. You may add the file if it does not exist.",
        "required_obs": "any",
        "affects_environment": true,
        "type_main": "others",
        "description": "The agent should search for the appropriate repository with the search box by choosing the best keyword according to the description. It should navigate to the \"edit\" menu to modify the gitignore file.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023",
            "start_url_lite": "http://172.16.2.4:8023/byteblaze/ericwbailey.website",
            "default_branch": "main",
            "repository": "my personal webpage",
            "difficulty": "hard"
        },
        "eval": {
            "eval_types": [
                "program_html"
            ],
            "reference_answers": null,
            "reference_url": "",
            "program_html": [
                {
                    "url": "http://172.16.2.4:8023/byteblaze/ericwbailey.website/-/raw/main/.gitignore",
                    "locator": "document.querySelector('body > pre').innerText",
                    "required_contents": {
                        "exact_match": ".DS_Store\nnode_modules\n.vscode"
                    }
                }
            ],
            "string_note": "",
            "reference_answer_raw_annotation": ""
        }
    },
    {
        "task_id": 40263,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023",
        "start_url_lite": "http://172.16.2.4:8023/byteblaze/cloud-to-butt",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "Change the list in the .gitignore file of {{repository}} to '.DS_Store', 'node_modules/', and '.vscode'. You may add the file if it does not exist.",
        "intent": "Change the list in the .gitignore file of my cloud-to-butt project to '.DS_Store', 'node_modules/', and '.vscode'. You may add the file if it does not exist.",
        "required_obs": "any",
        "affects_environment": true,
        "type_main": "others",
        "description": "The agent should search for the appropriate repository with the search box by choosing the best keyword according to the description. It should navigate to the \"edit\" menu to modify the gitignore file.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023",
            "start_url_lite": "http://172.16.2.4:8023/byteblaze/cloud-to-butt",
            "default_branch": "master",
            "repository": "my cloud-to-butt project",
            "difficulty": "medium"
        },
        "eval": {
            "eval_types": [
                "program_html"
            ],
            "reference_answers": null,
            "reference_url": "",
            "program_html": [
                {
                    "url": "http://172.16.2.4:8023/byteblaze/cloud-to-butt/-/raw/master/.gitignore",
                    "locator": "document.querySelector('body > pre').innerText",
                    "required_contents": {
                        "exact_match": ".DS_Store\nnode_modules\n.vscode"
                    }
                }
            ],
            "string_note": "",
            "reference_answer_raw_annotation": ""
        }
    },
    {
        "task_id": 40264,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023",
        "start_url_lite": "http://172.16.2.4:8023/byteblaze/gimmiethat.space",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "Change the list in the .gitignore file of {{repository}} to '.DS_Store', 'node_modules/', and '.vscode'. You may add the file if it does not exist.",
        "intent": "Change the list in the .gitignore file of byteblaze/gimmiethat.space to '.DS_Store', 'node_modules/', and '.vscode'. You may add the file if it does not exist.",
        "required_obs": "any",
        "affects_environment": true,
        "type_main": "others",
        "description": "The agent should search for the appropriate repository with the search box by choosing the best keyword according to the description. It should navigate to the \"edit\" menu to modify the gitignore file.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023",
            "start_url_lite": "http://172.16.2.4:8023/byteblaze/gimmiethat.space",
            "default_branch": "main",
            "repository": "byteblaze/gimmiethat.space",
            "difficulty": "medium"
        },
        "eval": {
            "eval_types": [
                "program_html"
            ],
            "reference_answers": null,
            "reference_url": "",
            "program_html": [
                {
                    "url": "http://172.16.2.4:8023/byteblaze/gimmiethat.space/-/raw/main/.gitignore",
                    "locator": "document.querySelector('body > pre').innerText",
                    "required_contents": {
                        "exact_match": ".DS_Store\nnode_modules\n.vscode"
                    }
                }
            ],
            "string_note": "",
            "reference_answer_raw_annotation": ""
        }
    },
    {
        "task_id": 40270,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023",
        "start_url_lite": "http://172.16.2.4:8023/a11yproject/a11yproject.com",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "Create a new repository named {{repository2}} and copy the README.md file from {{repository1}}.",
        "intent": "Create a new repository named byteblaze/new_a11y-syntax-highlighting and copy the README.md file from a11yproject/a11yproject.com.",
        "required_obs": "any",
        "affects_environment": true,
        "type_main": "massive_memory",
        "description": "Access the README.md file of {{repository1}}, display the source code, and copy it. Then, create a new repository named {{repository2}}, access the README.md file, paste the copied source code into it, and commit the changes.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023",
            "start_url_lite": "http://172.16.2.4:8023/a11yproject/a11yproject.com",
            "repository1": "a11yproject/a11yproject.com",
            "repository2": "byteblaze/new_a11y-syntax-highlighting",
            "readme_repo1": "![A11Y.](https://github.com/a11yproject/a11yproject.com/blob/main/src/img/social/og-image-home.png?raw=true)\n\n# The A11Y Project\n\nThe Accessibility [(A11Y)](https://a11yproject.com/posts/a11y-and-other-numeronyms/) Project is an Open-source, community-driven effort to make digital accessibility easier.\n\n\n## Contributing\n\nYou can learn about helping this project by reading our [Code of Conduct](https://a11yproject.com/code-of-conduct/), [Contributor documentation](https://a11yproject.com/contributing-guidelines/), and [Content Style Guide](https://a11yproject.com/content-style-guide/). Please familiarize yourself with them before submitting content.\n\nThis `README` is focused on the technical side of the project. If you are interested in contributing information like Posts or Resources, please refer to our [Contributing Guidelines](https://a11yproject.com/contributing-guidelines/).\n\n\n## Development\n\n### Technology\n\nThe A11Y Project uses [Eleventy](https://www.11ty.io/) to manage its content. Eleventy relies on [Markdown](https://daringfireball.net/projects/markdown/syntax), [Sass](https://sass-lang.com/), [Nunjucks](https://mozilla.github.io/nunjucks/), and [JSON](https://www.json.org/) to function.\n\nIt may be helpful to familiarize yourself with these technologies, depending on what you want to do. For more information, check out our [Contributor documentation](https://a11yproject.com/contributing-guidelines/).\n\n### Requirements\n\nYou'll need access to the following programs and technology in order to get the website running on your computer to work on:\n\n1. A command line application such as Terminal.\n    - If you want to learn more about working in the command line, Wes Bos offers [a great free course](https://commandlinepoweruser.com/).\n    - If you are using Windows, [Hyper](https://hyper.is/) is a good, free command-line application you can download, install, and run.\n1. [Git](https://git-scm.com/) version control and a [GitHub account](https://github.com/).\n    - You can check to see if Git is already installed on your computer by typing `git --version` into your command line application. If it is installed it will list the currently installed version (e.g. `git version 2.18.0`).\n    - If you prefer to use a GUI to work with version control, GitHub offers a [free desktop app](https://desktop.github.com).\n1. [Node.js](https://nodejs.org/en/), a programming environment powered by JavaScript.\n    - You can check to see if Node.js is already installed on your computer by typing `node -v` into your command line application. If it is installed it will list the currently installed version (e.g. `v16.4.0`). The A11Y Project requires a minimum version of `16.0.0`.\n    - It may also be helpful to use a program such as [nvm](https://github.com/creationix/nvm) to help manage your Node.js versions. This will ensure that the version of Node.js your computer uses to run various things won't conflict with an updated version. For Windows users, you could use [coreybutler/nvm-windows](https://github.com/coreybutler/nvm-windows).\n\n### Installation\n\nOnce you have met [the prerequisites](#requirements), follow these steps to install the website on your computer:\n\n1. Clone this repository by entering this command into your command line application: `git clone https://github.com/a11yproject/a11yproject.com.git`. It will create a version-controlled copy of the website in the directory you entered the command in.\n1. Navigate into the project's [root directory](https://en.m.wikipedia.org/wiki/Root_directory) by typing `cd a11yproject.com` in your command line application.\n1. Install the project's Node.js modules by typing `npm install` into your command line application. A list of these modules should be displayed after they are downloaded and installed.\n\n### Running the website\n\nAfter cloning and installing project Node.js modules, you will need to tell Node.js to compile the project and turn it into a website. To do this:\n\n- **macOS and Linux:** Type `npm start` into your command line application.\n- **Windows:** Type `npm run eleventy-watch & npm run gulp-watch` into your command line application.\n\nYour command line application will then display some information about Eleventy, including a line that starts with `Local:`. You can copy the URL it points to (it should read something like [`http://localhost:3000`](http://localhost:3000)) and paste it into a browser tab. This will load a local copy of the website that you can interact with to preview your changes.\n\nYou can also use the `External` URL to preview the local copy on another device connected to the same network, which helps you check to see how the site looks and functions on things like smartphones. This is done via [Browsersync](https://www.browsersync.io/).\n\n### Updating the website\n\nSaving project files will make Node.js regenerate the website to reflect the changes you made. Your command line application will display some new messaging to reflect this, including any errors you might accidentally make. Don't worry! Since the site uses version control, you're not in danger of seriously breaking anything. If you fix the error, Node.js should continue to run.\n\nMake sure you edit the files in the `src/` subdirectory. Any edits made in the `dist` subdirectory will be overwritten by the next change to any file in `src/` and all your hard work will be lost!\n\n### Quitting\n\nYou can tell Node.js to stop running by pressing the <kbd>Control</kbd> and <kbd>C</kbd> keys at the same time in your command line application, or by closing the command line application window or tab.\n\n### Code Tour\n\nIf you use [Visual Studio Code](https://code.visualstudio.com/) as your code editor, you can take an introductory tour of the repository via the [CodeTour extension](https://marketplace.visualstudio.com/items?itemName=vsls-contrib.codetour).\n\n## Troubleshooting\n\nPlease refer to our [Troubleshooting documentation](https://github.com/a11yproject/a11yproject.com/blob/main/TROUBLESHOOTING.md) for help with issues running the site.\n",
            "readme_repo2_url": "http://172.16.2.4:8023/byteblaze/new_a11y-syntax-highlighting/-/raw/main/README.md",
            "difficulty": "medium"
        },
        "eval": {
            "eval_types": [
                "program_html"
            ],
            "reference_answers": {},
            "reference_url": "",
            "program_html": [
                {
                    "url": "http://172.16.2.4:8023/byteblaze/new_a11y-syntax-highlighting/-/raw/main/README.md",
                    "locator": "document.querySelector('pre').innerText",
                    "required_contents": {
                        "exact_match": "![A11Y.](https://github.com/a11yproject/a11yproject.com/blob/main/src/img/social/og-image-home.png?raw=true)\n\n# The A11Y Project\n\nThe Accessibility [(A11Y)](https://a11yproject.com/posts/a11y-and-other-numeronyms/) Project is an Open-source, community-driven effort to make digital accessibility easier.\n\n\n## Contributing\n\nYou can learn about helping this project by reading our [Code of Conduct](https://a11yproject.com/code-of-conduct/), [Contributor documentation](https://a11yproject.com/contributing-guidelines/), and [Content Style Guide](https://a11yproject.com/content-style-guide/). Please familiarize yourself with them before submitting content.\n\nThis `README` is focused on the technical side of the project. If you are interested in contributing information like Posts or Resources, please refer to our [Contributing Guidelines](https://a11yproject.com/contributing-guidelines/).\n\n\n## Development\n\n### Technology\n\nThe A11Y Project uses [Eleventy](https://www.11ty.io/) to manage its content. Eleventy relies on [Markdown](https://daringfireball.net/projects/markdown/syntax), [Sass](https://sass-lang.com/), [Nunjucks](https://mozilla.github.io/nunjucks/), and [JSON](https://www.json.org/) to function.\n\nIt may be helpful to familiarize yourself with these technologies, depending on what you want to do. For more information, check out our [Contributor documentation](https://a11yproject.com/contributing-guidelines/).\n\n### Requirements\n\nYou'll need access to the following programs and technology in order to get the website running on your computer to work on:\n\n1. A command line application such as Terminal.\n    - If you want to learn more about working in the command line, Wes Bos offers [a great free course](https://commandlinepoweruser.com/).\n    - If you are using Windows, [Hyper](https://hyper.is/) is a good, free command-line application you can download, install, and run.\n1. [Git](https://git-scm.com/) version control and a [GitHub account](https://github.com/).\n    - You can check to see if Git is already installed on your computer by typing `git --version` into your command line application. If it is installed it will list the currently installed version (e.g. `git version 2.18.0`).\n    - If you prefer to use a GUI to work with version control, GitHub offers a [free desktop app](https://desktop.github.com).\n1. [Node.js](https://nodejs.org/en/), a programming environment powered by JavaScript.\n    - You can check to see if Node.js is already installed on your computer by typing `node -v` into your command line application. If it is installed it will list the currently installed version (e.g. `v16.4.0`). The A11Y Project requires a minimum version of `16.0.0`.\n    - It may also be helpful to use a program such as [nvm](https://github.com/creationix/nvm) to help manage your Node.js versions. This will ensure that the version of Node.js your computer uses to run various things won't conflict with an updated version. For Windows users, you could use [coreybutler/nvm-windows](https://github.com/coreybutler/nvm-windows).\n\n### Installation\n\nOnce you have met [the prerequisites](#requirements), follow these steps to install the website on your computer:\n\n1. Clone this repository by entering this command into your command line application: `git clone https://github.com/a11yproject/a11yproject.com.git`. It will create a version-controlled copy of the website in the directory you entered the command in.\n1. Navigate into the project's [root directory](https://en.m.wikipedia.org/wiki/Root_directory) by typing `cd a11yproject.com` in your command line application.\n1. Install the project's Node.js modules by typing `npm install` into your command line application. A list of these modules should be displayed after they are downloaded and installed.\n\n### Running the website\n\nAfter cloning and installing project Node.js modules, you will need to tell Node.js to compile the project and turn it into a website. To do this:\n\n- **macOS and Linux:** Type `npm start` into your command line application.\n- **Windows:** Type `npm run eleventy-watch & npm run gulp-watch` into your command line application.\n\nYour command line application will then display some information about Eleventy, including a line that starts with `Local:`. You can copy the URL it points to (it should read something like [`http://localhost:3000`](http://localhost:3000)) and paste it into a browser tab. This will load a local copy of the website that you can interact with to preview your changes.\n\nYou can also use the `External` URL to preview the local copy on another device connected to the same network, which helps you check to see how the site looks and functions on things like smartphones. This is done via [Browsersync](https://www.browsersync.io/).\n\n### Updating the website\n\nSaving project files will make Node.js regenerate the website to reflect the changes you made. Your command line application will display some new messaging to reflect this, including any errors you might accidentally make. Don't worry! Since the site uses version control, you're not in danger of seriously breaking anything. If you fix the error, Node.js should continue to run.\n\nMake sure you edit the files in the `src/` subdirectory. Any edits made in the `dist` subdirectory will be overwritten by the next change to any file in `src/` and all your hard work will be lost!\n\n### Quitting\n\nYou can tell Node.js to stop running by pressing the <kbd>Control</kbd> and <kbd>C</kbd> keys at the same time in your command line application, or by closing the command line application window or tab.\n\n### Code Tour\n\nIf you use [Visual Studio Code](https://code.visualstudio.com/) as your code editor, you can take an introductory tour of the repository via the [CodeTour extension](https://marketplace.visualstudio.com/items?itemName=vsls-contrib.codetour).\n\n## Troubleshooting\n\nPlease refer to our [Troubleshooting documentation](https://github.com/a11yproject/a11yproject.com/blob/main/TROUBLESHOOTING.md) for help with issues running the site.\n"
                    }
                }
            ],
            "string_note": ""
        }
    },
    {
        "task_id": 40271,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023",
        "start_url_lite": "http://172.16.2.4:8023/root/sample-gitlab",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "Create a new repository named {{repository2}} and copy the README.md file from {{repository1}}.",
        "intent": "Create a new repository named byteblaze/sample-gitlab-v2 and copy the README.md file from sample-gitlab.",
        "required_obs": "any",
        "affects_environment": true,
        "type_main": "massive_memory",
        "description": "Access the README.md file of {{repository1}}, display the source code, and copy it. Then, create a new repository named {{repository2}}, access the README.md file, paste the copied source code into it, and commit the changes.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023",
            "start_url_lite": "http://172.16.2.4:8023/root/sample-gitlab",
            "repository1": "sample-gitlab",
            "repository2": "byteblaze/sample-gitlab-v2",
            "readme_repo1": "# Sample GitLab Project\n\nThis sample project shows how a project in GitLab looks for demonstration purposes. It contains issues, merge requests and Markdown files in many branches,\nnamed and filled with lorem ipsum.\n\nYou can look around to get an idea how to structure your project and, when done, you can safely delete this project.\n\n[Learn more about creating GitLab projects.](https://docs.gitlab.com/ee/gitlab-basics/create-project.html)\n",
            "readme_repo2_url": "http://172.16.2.4:8023/byteblaze/sample-gitlab-v2/-/raw/main/README.md",
            "difficulty": "medium"
        },
        "eval": {
            "eval_types": [
                "program_html"
            ],
            "reference_answers": {},
            "reference_url": "",
            "program_html": [
                {
                    "url": "http://172.16.2.4:8023/byteblaze/sample-gitlab-v2/-/raw/main/README.md",
                    "locator": "document.querySelector('pre').innerText",
                    "required_contents": {
                        "exact_match": "# Sample GitLab Project\n\nThis sample project shows how a project in GitLab looks for demonstration purposes. It contains issues, merge requests and Markdown files in many branches,\nnamed and filled with lorem ipsum.\n\nYou can look around to get an idea how to structure your project and, when done, you can safely delete this project.\n\n[Learn more about creating GitLab projects.](https://docs.gitlab.com/ee/gitlab-basics/create-project.html)\n"
                    }
                }
            ],
            "string_note": ""
        }
    },
    {
        "task_id": 40272,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023",
        "start_url_lite": "http://172.16.2.4:8023/primer/design",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "Create a new repository named {{repository2}} and copy the README.md file from {{repository1}}.",
        "intent": "Create a new repository named byteblaze/primer-design-v2 and copy the README.md file from primer/design.",
        "required_obs": "any",
        "affects_environment": true,
        "type_main": "massive_memory",
        "description": "Access the README.md file of {{repository1}}, display the source code, and copy it. Then, create a new repository named {{repository2}}, access the README.md file, paste the copied source code into it, and commit the changes.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023",
            "start_url_lite": "http://172.16.2.4:8023/primer/design",
            "repository1": "primer/design",
            "repository2": "byteblaze/primer-design-v2",
            "readme_repo1": "# Primer Interface Guidelines\n\nDocumentation for UI patterns and interaction guidelines.\n\n## Status\n\nThis is currently a work in progress! Follow along on our [project board](https://github.com/primer/design/projects/1).\n\n## Local development\n\n1. Clone this repo, e.g. with:\n\n   ```sh\n   git clone https://github.com/primer/design\n   ```\n\n2. In the terminal, navigate (`cd`) to the repo directory\n3. `nvm use --default` to use the correct node version.\n4. `yarn` to install dependencies\n5. `yarn start` to start the dev server\n\n## Deployment\n\nWe deploy this site using [GitHub Pages](https://pages.github.com/). Every push to a branch other than `main` will deploy to a URL unique to the preview environment. Merges to `main` will automatically deploy the site to `https://primer.github.io/design/`.\n",
            "readme_repo2_url": "http://172.16.2.4:8023/byteblaze/primer-design-v2/-/raw/main/README.md",
            "difficulty": "medium"
        },
        "eval": {
            "eval_types": [
                "program_html"
            ],
            "reference_answers": {},
            "reference_url": "",
            "program_html": [
                {
                    "url": "http://172.16.2.4:8023/byteblaze/primer-design-v2/-/raw/main/README.md",
                    "locator": "document.querySelector('pre').innerText",
                    "required_contents": {
                        "exact_match": "# Primer Interface Guidelines\n\nDocumentation for UI patterns and interaction guidelines.\n\n## Status\n\nThis is currently a work in progress! Follow along on our [project board](https://github.com/primer/design/projects/1).\n\n## Local development\n\n1. Clone this repo, e.g. with:\n\n   ```sh\n   git clone https://github.com/primer/design\n   ```\n\n2. In the terminal, navigate (`cd`) to the repo directory\n3. `nvm use --default` to use the correct node version.\n4. `yarn` to install dependencies\n5. `yarn start` to start the dev server\n\n## Deployment\n\nWe deploy this site using [GitHub Pages](https://pages.github.com/). Every push to a branch other than `main` will deploy to a URL unique to the preview environment. Merges to `main` will automatically deploy the site to `https://primer.github.io/design/`.\n"
                    }
                }
            ],
            "string_note": ""
        }
    },
    {
        "task_id": 40273,
        "sites": [
            "gitlab"
        ],
        "start_url": "http://172.16.2.4:8023",
        "start_url_lite": "http://172.16.2.4:8023/byteblaze/empathy-prompts",
        "storage_state": "./.auth/gitlab_state.json",
        "intent_template": "Create a new repository named {{repository2}} and copy the README.md file from {{repository1}}.",
        "intent": "Create a new repository named byteblaze/new-empathy-prompts and copy the README.md file from byteblaze/empathy-prompts.",
        "required_obs": "any",
        "affects_environment": true,
        "type_main": "massive_memory",
        "description": "Access the README.md file of {{repository1}}, display the source code, and copy it. Then, create a new repository named {{repository2}}, access the README.md file, paste the copied source code into it, and commit the changes.",
        "instantiation_dict": {
            "start_url": "http://172.16.2.4:8023",
            "start_url_lite": "http://172.16.2.4:8023/byteblaze/empathy-prompts",
            "repository1": "byteblaze/empathy-prompts",
            "repository2": "byteblaze/new-empathy-prompts",
            "readme_repo1": "# [Empathy Prompts](https://empathyprompts.net/)\n\nPrompts to consider when making things for others to use.\n\nThis project is geared towards anyone involved with making digital products. It is my hope that this reaches both:\n\n- People who are not necessarily involved in the day-to-day part of the process, but who help shape things like budget, timeline, and scope, and\n- People who work every day to help to give these products shape and form\n\nThese prompts are intended to help build empathy, not describe any one person's experience. These prompts are <em>not</em> intended to tokenize the experience of the individuals experiencing these conditions. For further reading about disability simulations, please refer to [Job van Achterberg](https://twitter.com/detonite)'s excellent presentation, [The Imitation Game](https://noti.st/jkva/tF5o8J/slides).\n\n\n## Table of Contents\n\n1. [About this page](#about-this-page)\n1. [Contributing](#contributing)\n    1. [Suggest a prompt](#suggest-a-prompt)\n    1. [Language and terminology concerns](#language-and-terminology-concerns)\n    1. [Issues and Pull Requests](#issues-and-pull-requests)\n1. [Additional resources](#additional-resources)\n    1. [Prompt formats](#prompt-formats)\n    1. [Links](#links)\n1. [Resetting technology](#resetting-technology)\n    1. [Brightness](#brightness)\n    1. [Dyslexia simulator bookmarklet](#dyslexia-simulator-bookmarklet)\n    1. [High Contrast Mode](#high-contrast-mode)\n    1. [NoCoffee Chrome Extension](#nocoffee-chrome-extension)\n    1. [Screen magnifiers](#screen-magnifiers)\n    1. [Screen readers](#screen-readers)\n    1. [Zoomed Browser](#zoomed-browser)\n1. [Thanks](#thanks)\n1. [License](#license)\n\n\n## About this page\n\nYou're on [GitHub](https://github.com/), a service that helps people build digital things. Projects are called \"repositories\", or \"repos\" for short. Repositories are collections of files managed by [Git](https://git-scm.com/), software that helps people code and collaborate.\n\nOne file in this repo is called a Readme, which helps helps describe what the project is, why it was made, and how you can help out with it. GitHub takes the Readme for every repo and displays it on the repo's homepage for easier discovery.\n\nTo return to the prompt you were viewing, use your browser's back button.\n\n\n## Contributing\n\nIf you do not have a GitHub account, you can [contact me via email](https://github.com/ericwbailey/empathy-prompts/blob/master/AUTHORS). Please remember that requests submitted via email also need to conform to [the project's contributing guidelines](https://github.com/ericwbailey/empathy-prompts/blob/master/CONTRIBUTING.md).\n\n\n### Suggest a prompt\n\nTo suggest a prompt, please [submit a GitHub Issue](https://github.com/ericwbailey/empathy-prompts/issues) and follow the Issue template's instructions.\n\nPlease remember to:\n\n- Keep the title, description, and examples brief\n- Use simple, direct language\n- Use as little jargon as possible\n- Provide links to resources\n\nPrompts will be considered and added on a case-by-case basis. Questions and feedback will be handled in the submitted Issue.\n\n### Language and terminology concerns\n\nI'm striving to be as respectful as possible. If you feel the words or tone for one of the prompts isn't using the proper terminology, or isn't representative of the condition, please let me know either [publicly](https://github.com/ericwbailey/empathy-prompts/labels/%5BType%5D%20Terminology) or [privately](https://github.com/ericwbailey/empathy-prompts/blob/master/AUTHORS).\n\n### Issues and Pull Requests\n\nThe best way to submit Issues (problems with the project) and Pull Requests (adding features to the project, fixing problems, or improving project code) is using this project's [Issue tracker](https://github.com/ericwbailey/empathy-prompts/issues). Please make sure you [read the contributing guidelines](https://github.com/ericwbailey/empathy-prompts/blob/master/CONTRIBUTING.md) before doing so!\n\n\n## Additional resources\n\n### Prompt formats\n- [JSON](https://github.com/ericwbailey/empathy-prompts/blob/master/source/content.json)\n- [PDF](https://empathyprompts.net/static/downloads/empathy-prompt-cards.pdf)\n\n### Links\n- [30 Days of Accessibility Testing](https://dojo.ministryoftesting.com/lessons/30-days-of-accessibility-testing)\n- [Conscious Styleguide](http://consciousstyleguide.com/)\n- [Designing inclusively](https://medium.com/simple-human/designing-inclusively-5442ca2850ba)\n- [Empathy Maker](http://maya-benari.com/empathy-maker/)\n- [Highlights from Drop-in Time & Local Tech Interactions](https://storify.com/jessamyn/highlights-from-drop-in-time)\n- [Microsoft's Inclusive Design Principles and Resources](https://www.microsoft.com/en-us/design/inclusive)\n- [Writing Accessible Content](https://foxland.fi/writing-accessible-content/)\n\n\n## Resetting technology\n\nInstructions on how to reset any of the technology a prompt makes you install:\n\n### Brightness\n\n#### Mac\n\n- Use the brightness keys (`F1` and `F2`) to restore brightness to a level you find comfortable, or\n- Go to `System Preferences` > `Displays`, and drag the brightness slider to a level you find comfortable\n\n#### Windows\n\n- Select `Start` > `Settings` > `System` > `Display`, then drag the brightness slider to a level you find comfortable\n\n### Dyslexia simulator bookmarklet\n\n- Right click on the bookmarklet on your browser's bookmarks bar and choose the `Delete` option\n- You may also have to refresh the page\n\n### High Contrast Mode\n\n#### Mac\n\n- Go to `System Preferences` > `Accessibility` > `Display`, then drag the slider for `Display contrast` to `Normal`\n\n#### Windows\n\n- Use the `Left ALT` + `Left Shift` + `Print Screen` keyboard shortcut\n\n### Low Bandwidth\n\n- Close the Chrome Developer Tools\n- You may also have to refresh the page\n\n### NoCoffee Chrome Extension\n\n- To disable:\n    1. Click on the extension's icon\n    1. Choose the `Reset all` button\n    1. You may also have to refresh the page\n- To remove:\n    1. Open Chrome's Preferences\n    1. On the sidebar, select `Extensions`\n    1. Find the NoCoffee extension and either uncheck `Enabled` to disable the extension, or select the trash can icon to delete it\n    1. You may also have to refresh the page\n\n### Screen magnifiers\n\n#### Mac\n\n- Use either the keyboard shortcut (`CMD`+`OPT` `-`) or the mouse command (`CMD` + `Scroll Down`) until the screen stops shrinking\n\n#### Windows\n\n- Quit the magnifier program by pressing either `WIN` + `ESC` or select the magnifying glass icon and then select the `Close` button on the Magnifier toolbar.\n\n### Screen readers\n\n#### NVDA (Windows)\n\n- You can quit NVDA like any other Windows program, or\n- Use NVDA's keyboard shortcut: `INSERT` + `Q`\n\n#### VoiceOver (Mac)\n\n- Use the `CMD` + `F5` keyboard shortcut, or\n- Go to `System Preferences` > `Accessibility` > `VoiceOver`, then uncheck `Enable VoiceOver`\n\n### Zoomed Browser\n\n#### Mac\n\n- Use the `CMD` + `0` keyboard shortcut to restore zoom to 100%\n\n#### Windows\n\n- Use the `CTRL` + `0` keyboard shortcut to restore zoom to 100%\n\n\n## Thanks\n\n- [Wayne Elgin](https://github.com/esjay) and [Dan McLaughlin](https://github.com/danielsmc) for JavaScript help 🎉\n- [Scott Doxey](https://github.com/neogeek/) for Progressive Web App help! 🍟\n\n\n## License\n\n[MIT License](https://raw.githubusercontent.com/ericwbailey/empathy-prompts/master/LICENSE).\n",
            "readme_repo2_url": "http://172.16.2.4:8023/byteblaze/new-empathy-prompts/-/raw/main/README.md",
            "difficulty": "medium"
        },
        "eval": {
            "eval_types": [
                "program_html"
            ],
            "reference_answers": {},
            "reference_url": "",
            "program_html": [
                {
                    "url": "http://172.16.2.4:8023/byteblaze/new-empathy-prompts/-/raw/main/README.md",
                    "locator": "document.querySelector('pre').innerText",
                    "required_contents": {
                        "exact_match": "# [Empathy Prompts](https://empathyprompts.net/)\n\nPrompts to consider when making things for others to use.\n\nThis project is geared towards anyone involved with making digital products. It is my hope that this reaches both:\n\n- People who are not necessarily involved in the day-to-day part of the process, but who help shape things like budget, timeline, and scope, and\n- People who work every day to help to give these products shape and form\n\nThese prompts are intended to help build empathy, not describe any one person's experience. These prompts are <em>not</em> intended to tokenize the experience of the individuals experiencing these conditions. For further reading about disability simulations, please refer to [Job van Achterberg](https://twitter.com/detonite)'s excellent presentation, [The Imitation Game](https://noti.st/jkva/tF5o8J/slides).\n\n\n## Table of Contents\n\n1. [About this page](#about-this-page)\n1. [Contributing](#contributing)\n    1. [Suggest a prompt](#suggest-a-prompt)\n    1. [Language and terminology concerns](#language-and-terminology-concerns)\n    1. [Issues and Pull Requests](#issues-and-pull-requests)\n1. [Additional resources](#additional-resources)\n    1. [Prompt formats](#prompt-formats)\n    1. [Links](#links)\n1. [Resetting technology](#resetting-technology)\n    1. [Brightness](#brightness)\n    1. [Dyslexia simulator bookmarklet](#dyslexia-simulator-bookmarklet)\n    1. [High Contrast Mode](#high-contrast-mode)\n    1. [NoCoffee Chrome Extension](#nocoffee-chrome-extension)\n    1. [Screen magnifiers](#screen-magnifiers)\n    1. [Screen readers](#screen-readers)\n    1. [Zoomed Browser](#zoomed-browser)\n1. [Thanks](#thanks)\n1. [License](#license)\n\n\n## About this page\n\nYou're on [GitHub](https://github.com/), a service that helps people build digital things. Projects are called \"repositories\", or \"repos\" for short. Repositories are collections of files managed by [Git](https://git-scm.com/), software that helps people code and collaborate.\n\nOne file in this repo is called a Readme, which helps helps describe what the project is, why it was made, and how you can help out with it. GitHub takes the Readme for every repo and displays it on the repo's homepage for easier discovery.\n\nTo return to the prompt you were viewing, use your browser's back button.\n\n\n## Contributing\n\nIf you do not have a GitHub account, you can [contact me via email](https://github.com/ericwbailey/empathy-prompts/blob/master/AUTHORS). Please remember that requests submitted via email also need to conform to [the project's contributing guidelines](https://github.com/ericwbailey/empathy-prompts/blob/master/CONTRIBUTING.md).\n\n\n### Suggest a prompt\n\nTo suggest a prompt, please [submit a GitHub Issue](https://github.com/ericwbailey/empathy-prompts/issues) and follow the Issue template's instructions.\n\nPlease remember to:\n\n- Keep the title, description, and examples brief\n- Use simple, direct language\n- Use as little jargon as possible\n- Provide links to resources\n\nPrompts will be considered and added on a case-by-case basis. Questions and feedback will be handled in the submitted Issue.\n\n### Language and terminology concerns\n\nI'm striving to be as respectful as possible. If you feel the words or tone for one of the prompts isn't using the proper terminology, or isn't representative of the condition, please let me know either [publicly](https://github.com/ericwbailey/empathy-prompts/labels/%5BType%5D%20Terminology) or [privately](https://github.com/ericwbailey/empathy-prompts/blob/master/AUTHORS).\n\n### Issues and Pull Requests\n\nThe best way to submit Issues (problems with the project) and Pull Requests (adding features to the project, fixing problems, or improving project code) is using this project's [Issue tracker](https://github.com/ericwbailey/empathy-prompts/issues). Please make sure you [read the contributing guidelines](https://github.com/ericwbailey/empathy-prompts/blob/master/CONTRIBUTING.md) before doing so!\n\n\n## Additional resources\n\n### Prompt formats\n- [JSON](https://github.com/ericwbailey/empathy-prompts/blob/master/source/content.json)\n- [PDF](https://empathyprompts.net/static/downloads/empathy-prompt-cards.pdf)\n\n### Links\n- [30 Days of Accessibility Testing](https://dojo.ministryoftesting.com/lessons/30-days-of-accessibility-testing)\n- [Conscious Styleguide](http://consciousstyleguide.com/)\n- [Designing inclusively](https://medium.com/simple-human/designing-inclusively-5442ca2850ba)\n- [Empathy Maker](http://maya-benari.com/empathy-maker/)\n- [Highlights from Drop-in Time & Local Tech Interactions](https://storify.com/jessamyn/highlights-from-drop-in-time)\n- [Microsoft's Inclusive Design Principles and Resources](https://www.microsoft.com/en-us/design/inclusive)\n- [Writing Accessible Content](https://foxland.fi/writing-accessible-content/)\n\n\n## Resetting technology\n\nInstructions on how to reset any of the technology a prompt makes you install:\n\n### Brightness\n\n#### Mac\n\n- Use the brightness keys (`F1` and `F2`) to restore brightness to a level you find comfortable, or\n- Go to `System Preferences` > `Displays`, and drag the brightness slider to a level you find comfortable\n\n#### Windows\n\n- Select `Start` > `Settings` > `System` > `Display`, then drag the brightness slider to a level you find comfortable\n\n### Dyslexia simulator bookmarklet\n\n- Right click on the bookmarklet on your browser's bookmarks bar and choose the `Delete` option\n- You may also have to refresh the page\n\n### High Contrast Mode\n\n#### Mac\n\n- Go to `System Preferences` > `Accessibility` > `Display`, then drag the slider for `Display contrast` to `Normal`\n\n#### Windows\n\n- Use the `Left ALT` + `Left Shift` + `Print Screen` keyboard shortcut\n\n### Low Bandwidth\n\n- Close the Chrome Developer Tools\n- You may also have to refresh the page\n\n### NoCoffee Chrome Extension\n\n- To disable:\n    1. Click on the extension's icon\n    1. Choose the `Reset all` button\n    1. You may also have to refresh the page\n- To remove:\n    1. Open Chrome's Preferences\n    1. On the sidebar, select `Extensions`\n    1. Find the NoCoffee extension and either uncheck `Enabled` to disable the extension, or select the trash can icon to delete it\n    1. You may also have to refresh the page\n\n### Screen magnifiers\n\n#### Mac\n\n- Use either the keyboard shortcut (`CMD`+`OPT` `-`) or the mouse command (`CMD` + `Scroll Down`) until the screen stops shrinking\n\n#### Windows\n\n- Quit the magnifier program by pressing either `WIN` + `ESC` or select the magnifying glass icon and then select the `Close` button on the Magnifier toolbar.\n\n### Screen readers\n\n#### NVDA (Windows)\n\n- You can quit NVDA like any other Windows program, or\n- Use NVDA's keyboard shortcut: `INSERT` + `Q`\n\n#### VoiceOver (Mac)\n\n- Use the `CMD` + `F5` keyboard shortcut, or\n- Go to `System Preferences` > `Accessibility` > `VoiceOver`, then uncheck `Enable VoiceOver`\n\n### Zoomed Browser\n\n#### Mac\n\n- Use the `CMD` + `0` keyboard shortcut to restore zoom to 100%\n\n#### Windows\n\n- Use the `CTRL` + `0` keyboard shortcut to restore zoom to 100%\n\n\n## Thanks\n\n- [Wayne Elgin](https://github.com/esjay) and [Dan McLaughlin](https://github.com/danielsmc) for JavaScript help 🎉\n- [Scott Doxey](https://github.com/neogeek/) for Progressive Web App help! 🍟\n\n\n## License\n\n[MIT License](https://raw.githubusercontent.com/ericwbailey/empathy-prompts/master/LICENSE).\n"
                    }
                }
            ],
            "string_note": ""
        }
    }
]